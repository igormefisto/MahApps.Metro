<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" mc:Ignorable="po" xmlns:converters="clr-namespace:MahApps.Metro.Converters" xmlns:mah="clr-namespace:MahApps.Metro.Controls" xmlns:behaviors="clr-namespace:MahApps.Metro.Behaviors" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:controlzex="urn:controlzex" xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs" xmlns:i="http://schemas.microsoft.com/xaml/behaviors" xmlns:actions="clr-namespace:MahApps.Metro.Actions" xmlns:theming="clr-namespace:MahApps.Metro.Theming">
  <FontFamily x:Key="MahApps.Fonts.Family.SymbolTheme">Segoe MDL2 Assets,/MahApps.Metro;component/Assets/#Segoe MDL2 Assets</FontFamily>
  <FontFamily x:Key="MahApps.Fonts.Family.Button">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
  <FontFamily x:Key="MahApps.Fonts.Family.Header">Segoe UI Light, Lucida Sans Unicode, Verdana</FontFamily>
  <FontFamily x:Key="MahApps.Fonts.Family.Window.Title">Segoe UI Light, Lucida Sans Unicode, Verdana</FontFamily>
  <FontFamily x:Key="MahApps.Fonts.Family.Control">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
  <FontFamily x:Key="MahApps.Fonts.Family.ToggleSwitch">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
  <FontFamily x:Key="MahApps.Fonts.Family.ToggleSwitch.Header">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
  <system:Double x:Key="MahApps.Font.Size.Header">40</system:Double>
  <system:Double x:Key="MahApps.Font.Size.SubHeader">29.333</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Window.Title">16</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Default">14</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Content">12</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Button.Flat">14</system:Double>
  <system:Double x:Key="MahApps.Font.Size.TabItem">26.67</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Button">10</system:Double>
  <system:Double x:Key="MahApps.Font.Size.FloatingWatermark">10</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Button.ClearText">16</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Tooltip">12</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Menu">14</system:Double>
  <system:Double x:Key="MahApps.Font.Size.ContextMenu">14</system:Double>
  <system:Double x:Key="MahApps.Font.Size.StatusBar">12</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Dialog.Title">26</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Dialog.Message">15</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Dialog.Button">12</system:Double>
  <system:Double x:Key="MahApps.Font.Size.Flyout.Header">20</system:Double>
  <system:Double x:Key="MahApps.Font.Size.ToggleSwitch">14</system:Double>
  <system:Double x:Key="MahApps.Font.Size.ToggleSwitch.Header">14</system:Double>
  <system:Double x:Key="MahApps.Font.Size.ColorPicker.TabItemHeader">16</system:Double>
  <ExponentialEase x:Key="MahApps.ExponentialEase.EaseInOut" EasingMode="EaseInOut" Exponent="2" />
  <Storyboard x:Key="MahApps.Storyboard.EnterGotFocus" po:Freeze="True">
    <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.ExitGotFocus" po:Freeze="True">
    <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.EnterGotFocus.DatePickerTextBox" po:Freeze="True">
    <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
    <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.ExitGotFocus.DatePickerTextBox" po:Freeze="True">
    <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
    <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.EnterHasText" po:Freeze="True">
    <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.ExitHasText" po:Freeze="True">
    <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.EnterHasText.DatePickerTextBox" po:Freeze="True">
    <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
    <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.ExitHasText.DatePickerTextBox" po:Freeze="True">
    <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
    <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.WaitingForData" po:Freeze="True">
    <DoubleAnimation AutoReverse="True" RepeatBehavior="Forever" Timeline.DesiredFrameRate="30" Storyboard.TargetName="PART_WaitingForDataEffectGrid" Storyboard.TargetProperty="(Effect).Opacity" From="0" To="1" Duration="00:00:02" />
  </Storyboard>
  <converters:ThicknessToDoubleConverter x:Key="BorderThicknessToStrokeThicknessConverter" TakeThicknessSide="Left" />
  <ControlTemplate x:Key="MahApps.Templates.Button.Chromeless" TargetType="{x:Type ButtonBase}">
    <Grid Background="{TemplateBinding Background}">
      <ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.75" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="False">
        <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value=".5" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="#ADADAD" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <system:Double x:Key="MahApps.Sizes.ScrollBar.Height">14</system:Double>
  <system:Double x:Key="MahApps.Sizes.ScrollBar.Width">14</system:Double>
  <system:Double x:Key="MahApps.Sizes.ScrollBar.HorizontalRepeatButton.Width">14</system:Double>
  <system:Double x:Key="MahApps.Sizes.ScrollBar.VerticalRepeatButton.Height">14</system:Double>
  <Storyboard x:Key="MahApps.Storyboard.ScrollBarThumbMouseOver" po:Freeze="True">
    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MouseOverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
      <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.6" />
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.ScrollBarThumbPressed" po:Freeze="True">
    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
      <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.8" />
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>
  <Style x:Key="MahApps.Styles.RepeatButton.ScrollBarLarge" TargetType="{x:Type RepeatButton}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Interval" Value="50" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.ScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="leftColumn" Width="*" />
              <ColumnDefinition x:Name="rightColumn" Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide" Value="True">
              <Setter TargetName="PART_HorizontalScrollBar" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_VerticalScrollBar" Property="Grid.Column" Value="0" />
              <Setter TargetName="leftColumn" Property="Width" Value="Auto" />
              <Setter TargetName="rightColumn" Property="Width" Value="*" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide" Value="False" />
  </Style>
  <Style x:Key="MahApps.Styles.TextBlock" TargetType="{x:Type TextBlock}" />
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <Cursor x:Key="MahApps.Cursors.EyeDropper">pack://application:,,,/MahApps.Metro;component/Assets/Eyedropper.cur</Cursor>
  <system:Double x:Key="MahApps.Sizes.ColorListBox.ItemWidth">16</system:Double>
  <system:Double x:Key="MahApps.Sizes.ColorListBox.ItemHeight">16</system:Double>
  <Storyboard x:Key="MahApps.Storyboard.Dialogs.Show" po:Freeze="True">
    <DoubleAnimation AccelerationRatio=".9" BeginTime="0:0:0" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.Dialogs.Close" po:Freeze="True">
    <DoubleAnimation AccelerationRatio=".9" BeginTime="0:0:0" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
  </Storyboard>
  <SineEase x:Key="BadgeEase" EasingMode="EaseOut" />
  <Style x:Key="MahApps.Styles.ContentControlEx" TargetType="{x:Type mah:ContentControlEx}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:ContentControlEx}">
          <Grid Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentCharacterCasing" Value="Normal">
              <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" />
            </Trigger>
            <Trigger Property="ContentCharacterCasing" Value="Upper">
              <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Converter={converters:ToUpperConverter}}" />
            </Trigger>
            <Trigger Property="ContentCharacterCasing" Value="Lower">
              <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Converter={converters:ToLowerConverter}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <converters:ClockDegreeConverter x:Key="ClockDegreeConverter" TotalParts="60" />
  <converters:ClockDegreeConverter x:Key="HourDegreeConverter" TotalParts="12" />
  <converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter" />
  <x:Array x:Key="FiveMinuteKeys" Type="system:Int32">
    <system:Int32>0</system:Int32>
    <system:Int32>5</system:Int32>
    <system:Int32>10</system:Int32>
    <system:Int32>15</system:Int32>
    <system:Int32>20</system:Int32>
    <system:Int32>25</system:Int32>
    <system:Int32>30</system:Int32>
    <system:Int32>35</system:Int32>
    <system:Int32>40</system:Int32>
    <system:Int32>45</system:Int32>
    <system:Int32>50</system:Int32>
    <system:Int32>55</system:Int32>
  </x:Array>
  <x:Array x:Key="MinuteKeys" Type="system:Int32">
    <system:Int32>1</system:Int32>
    <system:Int32>2</system:Int32>
    <system:Int32>3</system:Int32>
    <system:Int32>4</system:Int32>
    <system:Int32>6</system:Int32>
    <system:Int32>7</system:Int32>
    <system:Int32>8</system:Int32>
    <system:Int32>9</system:Int32>
    <system:Int32>11</system:Int32>
    <system:Int32>12</system:Int32>
    <system:Int32>13</system:Int32>
    <system:Int32>14</system:Int32>
    <system:Int32>16</system:Int32>
    <system:Int32>17</system:Int32>
    <system:Int32>18</system:Int32>
    <system:Int32>19</system:Int32>
    <system:Int32>21</system:Int32>
    <system:Int32>22</system:Int32>
    <system:Int32>23</system:Int32>
    <system:Int32>24</system:Int32>
    <system:Int32>26</system:Int32>
    <system:Int32>27</system:Int32>
    <system:Int32>28</system:Int32>
    <system:Int32>29</system:Int32>
    <system:Int32>31</system:Int32>
    <system:Int32>32</system:Int32>
    <system:Int32>33</system:Int32>
    <system:Int32>34</system:Int32>
    <system:Int32>36</system:Int32>
    <system:Int32>37</system:Int32>
    <system:Int32>38</system:Int32>
    <system:Int32>39</system:Int32>
    <system:Int32>41</system:Int32>
    <system:Int32>42</system:Int32>
    <system:Int32>43</system:Int32>
    <system:Int32>44</system:Int32>
    <system:Int32>46</system:Int32>
    <system:Int32>47</system:Int32>
    <system:Int32>48</system:Int32>
    <system:Int32>49</system:Int32>
    <system:Int32>51</system:Int32>
    <system:Int32>52</system:Int32>
    <system:Int32>53</system:Int32>
    <system:Int32>54</system:Int32>
    <system:Int32>56</system:Int32>
    <system:Int32>57</system:Int32>
    <system:Int32>58</system:Int32>
    <system:Int32>59</system:Int32>
  </x:Array>
  <system:Double x:Key="FlipViewIndexItemSize">15</system:Double>
  <ControlTemplate x:Key="MahApps.Templates.FlipView" TargetType="{x:Type mah:FlipView}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
      <Border x:Name="PART_HoverBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="{TemplateBinding MouseHoverBorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
        <Grid Margin="{TemplateBinding Padding}">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <ListBox x:Name="PART_Index" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Center" Panel.ZIndex="6" Background="Transparent" BorderThickness="0" ItemContainerStyle="{TemplateBinding IndexItemContainerStyle}" ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Visibility="{Binding ShowIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ListBox.Template>
              <ControlTemplate TargetType="{x:Type ListBox}">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemsPanel>
              <ItemsPanelTemplate>
                <UniformGrid HorizontalAlignment="Center" IsItemsHost="True" Rows="1" />
              </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
          </ListBox>
          <Button x:Name="PART_BackButton" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Panel.ZIndex="6" Content="{TemplateBinding ButtonBackContent}" ContentStringFormat="{TemplateBinding ButtonBackContentStringFormat}" ContentTemplate="{TemplateBinding ButtonBackContentTemplate}" Style="{TemplateBinding NavigationButtonStyle}" Visibility="Hidden" />
          <Button x:Name="PART_ForwardButton" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Panel.ZIndex="6" Content="{TemplateBinding ButtonForwardContent}" ContentStringFormat="{TemplateBinding ButtonForwardContentStringFormat}" ContentTemplate="{TemplateBinding ButtonForwardContentTemplate}" Style="{TemplateBinding NavigationButtonStyle}" Visibility="Hidden" />
          <Button x:Name="PART_UpButton" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Panel.ZIndex="6" Content="{TemplateBinding ButtonUpContent}" ContentStringFormat="{TemplateBinding ButtonUpContentStringFormat}" ContentTemplate="{TemplateBinding ButtonUpContentTemplate}" Style="{TemplateBinding NavigationButtonStyle}" Visibility="Hidden" />
          <Button x:Name="PART_DownButton" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" Panel.ZIndex="6" Content="{TemplateBinding ButtonDownContent}" ContentStringFormat="{TemplateBinding ButtonDownContentStringFormat}" ContentTemplate="{TemplateBinding ButtonDownContentTemplate}" Style="{TemplateBinding NavigationButtonStyle}" Visibility="Hidden" />
          <Grid x:Name="PART_BannerGrid" Grid.Row="1" Grid.Column="1" Height="0" VerticalAlignment="Bottom" Panel.ZIndex="5" Background="{TemplateBinding BannerBackground}" Opacity="{TemplateBinding BannerOpacity}">
            <Label x:Name="PART_BannerLabel" ContentStringFormat="{TemplateBinding BannerTextStringFormat}" ContentTemplate="{TemplateBinding BannerTextTemplate}" ContentTemplateSelector="{TemplateBinding BannerTextTemplateSelector}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding BannerForeground}" IsTabStop="False" />
          </Grid>
          <mah:TransitioningContentControl x:Name="PART_Presenter" Grid.Row="1" Grid.Column="1" Panel.ZIndex="1" Content="{TemplateBinding SelectedItem}" ContentStringFormat="{TemplateBinding ItemStringFormat}" ContentTemplate="{TemplateBinding ItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsTabStop="False" />
        </Grid>
      </Border>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IndexPlacement" Value="{x:Static mah:NavigationIndexPlacement.Top}">
        <Setter TargetName="PART_Index" Property="Grid.Column" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.ColumnSpan" Value="3" />
        <Setter TargetName="PART_Index" Property="Grid.Row" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.RowSpan" Value="1" />
        <Setter TargetName="PART_Index" Property="HorizontalAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IndexHorizontalAlignment}" />
        <Setter TargetName="PART_Index" Property="VerticalAlignment" Value="Center" />
      </Trigger>
      <Trigger Property="IndexPlacement" Value="{x:Static mah:NavigationIndexPlacement.Bottom}">
        <Setter TargetName="PART_Index" Property="Grid.Column" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.ColumnSpan" Value="3" />
        <Setter TargetName="PART_Index" Property="Grid.Row" Value="2" />
        <Setter TargetName="PART_Index" Property="Grid.RowSpan" Value="1" />
        <Setter TargetName="PART_Index" Property="HorizontalAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IndexHorizontalAlignment}" />
        <Setter TargetName="PART_Index" Property="VerticalAlignment" Value="Center" />
      </Trigger>
      <Trigger Property="IndexPlacement" Value="{x:Static mah:NavigationIndexPlacement.Left}">
        <Setter TargetName="PART_Index" Property="Grid.Column" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.ColumnSpan" Value="1" />
        <Setter TargetName="PART_Index" Property="Grid.Row" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.RowSpan" Value="3" />
        <Setter TargetName="PART_Index" Property="HorizontalAlignment" Value="Center" />
        <Setter TargetName="PART_Index" Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <UniformGrid VerticalAlignment="Center" Columns="1" IsItemsHost="True" />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter TargetName="PART_Index" Property="VerticalAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IndexVerticalAlignment}" />
      </Trigger>
      <Trigger Property="IndexPlacement" Value="{x:Static mah:NavigationIndexPlacement.Right}">
        <Setter TargetName="PART_Index" Property="Grid.Column" Value="2" />
        <Setter TargetName="PART_Index" Property="Grid.ColumnSpan" Value="1" />
        <Setter TargetName="PART_Index" Property="Grid.Row" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.RowSpan" Value="3" />
        <Setter TargetName="PART_Index" Property="HorizontalAlignment" Value="Center" />
        <Setter TargetName="PART_Index" Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <UniformGrid VerticalAlignment="Center" Columns="1" IsItemsHost="True" />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter TargetName="PART_Index" Property="VerticalAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IndexVerticalAlignment}" />
      </Trigger>
      <Trigger Property="IndexPlacement" Value="{x:Static mah:NavigationIndexPlacement.TopOverItem}">
        <Setter TargetName="PART_Index" Property="Grid.Column" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.ColumnSpan" Value="3" />
        <Setter TargetName="PART_Index" Property="Grid.Row" Value="1" />
        <Setter TargetName="PART_Index" Property="Grid.RowSpan" Value="1" />
        <Setter TargetName="PART_Index" Property="HorizontalAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IndexHorizontalAlignment}" />
        <Setter TargetName="PART_Index" Property="VerticalAlignment" Value="Top" />
      </Trigger>
      <Trigger Property="IndexPlacement" Value="{x:Static mah:NavigationIndexPlacement.BottomOverItem}">
        <Setter TargetName="PART_Index" Property="Grid.Column" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.ColumnSpan" Value="3" />
        <Setter TargetName="PART_Index" Property="Grid.Row" Value="1" />
        <Setter TargetName="PART_Index" Property="Grid.RowSpan" Value="1" />
        <Setter TargetName="PART_Index" Property="HorizontalAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IndexHorizontalAlignment}" />
        <Setter TargetName="PART_Index" Property="VerticalAlignment" Value="Bottom" />
      </Trigger>
      <Trigger Property="IndexPlacement" Value="{x:Static mah:NavigationIndexPlacement.LeftOverItem}">
        <Setter TargetName="PART_Index" Property="Grid.Column" Value="1" />
        <Setter TargetName="PART_Index" Property="Grid.ColumnSpan" Value="1" />
        <Setter TargetName="PART_Index" Property="Grid.Row" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.RowSpan" Value="3" />
        <Setter TargetName="PART_Index" Property="HorizontalAlignment" Value="Left" />
        <Setter TargetName="PART_Index" Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <UniformGrid VerticalAlignment="Center" Columns="1" IsItemsHost="True" />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter TargetName="PART_Index" Property="VerticalAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IndexVerticalAlignment}" />
      </Trigger>
      <Trigger Property="IndexPlacement" Value="{x:Static mah:NavigationIndexPlacement.RightOverItem}">
        <Setter TargetName="PART_Index" Property="Grid.Column" Value="1" />
        <Setter TargetName="PART_Index" Property="Grid.ColumnSpan" Value="1" />
        <Setter TargetName="PART_Index" Property="Grid.Row" Value="0" />
        <Setter TargetName="PART_Index" Property="Grid.RowSpan" Value="3" />
        <Setter TargetName="PART_Index" Property="HorizontalAlignment" Value="Right" />
        <Setter TargetName="PART_Index" Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <UniformGrid VerticalAlignment="Center" Columns="1" IsItemsHost="True" />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter TargetName="PART_Index" Property="VerticalAlignment" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IndexVerticalAlignment}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="MouseHoverBorderEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_HoverBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseHoverBorderBrush, Mode=OneWay}" />
      </MultiTrigger>
      <Trigger Property="MouseHoverBorderEnabled" Value="False">
        <Setter TargetName="PART_HoverBorder" Property="BorderThickness" Value="0" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsNavigationEnabled" Value="True" />
          <Condition Property="Orientation" Value="Vertical" />
          <Condition Property="NavigationButtonsPosition" Value="Outside" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_BackButton" Property="Grid.Column" Value="1" />
        <Setter TargetName="PART_DownButton" Property="Grid.Row" Value="2" />
        <Setter TargetName="PART_ForwardButton" Property="Grid.Column" Value="1" />
        <Setter TargetName="PART_UpButton" Property="Grid.Row" Value="0" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsNavigationEnabled" Value="True" />
          <Condition Property="Orientation" Value="Horizontal" />
          <Condition Property="NavigationButtonsPosition" Value="Outside" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_BackButton" Property="Grid.Column" Value="0" />
        <Setter TargetName="PART_DownButton" Property="Grid.Row" Value="1" />
        <Setter TargetName="PART_ForwardButton" Property="Grid.Column" Value="2" />
        <Setter TargetName="PART_UpButton" Property="Grid.Row" Value="1" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
    <ControlTemplate.Resources>
      <Storyboard x:Key="ShowBannerStoryboard">
        <DoubleAnimation AccelerationRatio="1.0" SpeedRatio="2.5" Storyboard.TargetProperty="Height" To="30.0" />
      </Storyboard>
      <Storyboard x:Key="HideBannerStoryboard">
        <DoubleAnimation AccelerationRatio="1.0" SpeedRatio="2.5" Storyboard.TargetProperty="Height" To="0.0" />
      </Storyboard>
      <Storyboard x:Key="HideControlStoryboard">
        <DoubleAnimation AccelerationRatio="1.0" SpeedRatio="2.5" Storyboard.TargetProperty="Opacity" To="0.0" />
      </Storyboard>
      <Storyboard x:Key="ShowControlStoryboard">
        <DoubleAnimation AccelerationRatio="1.0" SpeedRatio="2.5" Storyboard.TargetProperty="Opacity" To="1.0" />
      </Storyboard>
    </ControlTemplate.Resources>
  </ControlTemplate>
  <Style x:Key="MahApps.Styles.FlipViewItem" TargetType="{x:Type mah:FlipViewItem}">
    <Setter Property="Background" Value="{x:Null}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Owner.Foreground, Mode=OneWay}" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, Mode=OneWay, FallbackValue=Stretch, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding Path=(RenderOptions.ClearTypeHint), Mode=OneWay, FallbackValue=Auto, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:FlipViewItem}">
          <Grid x:Name="RootGrid" Background="Transparent" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid Margin="{TemplateBinding BorderThickness}">
              <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Owner.IsMouseOver, Mode=OneWay}" Value="True" />
                <Condition Binding="{Binding NavigationButtonsPosition, FallbackValue={x:Static mah:NavigationButtonsPosition.Inside}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:FlipView}}}" Value="{x:Static mah:NavigationButtonsPosition.Inside}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, Mode=OneWay, FallbackValue=Stretch, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="mah:ItemHelper.DisabledBackgroundBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background, Mode=OneWay}" />
    <Setter Property="mah:ItemHelper.DisabledForegroundBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Owner.Foreground, Mode=OneWay}" />
    <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background, Mode=OneWay}" />
    <Setter Property="mah:ItemHelper.HoverForegroundBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Owner.Foreground, Mode=OneWay}" />
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.Flyout" TargetType="{x:Type mah:Flyout}">
    <Border x:Name="PART_Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
      <Border.RenderTransform>
        <TranslateTransform />
      </Border.RenderTransform>
      <AdornerDecorator>
        <DockPanel FocusVisualStyle="{x:Null}" Focusable="False">
          <mah:MetroThumbContentControl x:Name="PART_Header" Padding="{TemplateBinding mah:HeaderedControlHelper.HeaderMargin}" Content="{TemplateBinding Header}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" DockPanel.Dock="Top" FontFamily="{TemplateBinding mah:HeaderedControlHelper.HeaderFontFamily}" FontSize="{TemplateBinding mah:HeaderedControlHelper.HeaderFontSize}" FontStretch="{TemplateBinding mah:HeaderedControlHelper.HeaderFontStretch}" FontWeight="{TemplateBinding mah:HeaderedControlHelper.HeaderFontWeight}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          <ContentPresenter x:Name="PART_Content" ContentSource="Content" DockPanel.Dock="Bottom" />
        </DockPanel>
      </AdornerDecorator>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="Default" />
          <VisualState x:Name="Hide">
            <Storyboard x:Name="HideStoryboard">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <SplineDoubleKeyFrame x:Name="hideFrame" KeySpline="0.25,1,0.05,1" KeyTime="00:00:00.750" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                <SplineDoubleKeyFrame x:Name="hideFrameY" KeySpline="0.25,1,0.05,1" KeyTime="00:00:00.750" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame x:Name="fadeOutFrame" KeySpline="0.25,1,0.05,1" KeyTime="00:00:00.750" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Show">
            <Storyboard x:Name="ShowStoryboard">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <SplineDoubleKeyFrame x:Name="showFrame" KeySpline="0.25,1,0.05,1" KeyTime="00:00:00.750" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                <SplineDoubleKeyFrame x:Name="showFrameY" KeySpline="0.25,1,0.05,1" KeyTime="00:00:00.750" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeySpline="0.25,1,0.05,1" KeyTime="00:00:00.750" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="HideDirect">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="ShowDirect">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Position" Value="Top">
        <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Right" />
        <Setter TargetName="PART_Header" Property="DockPanel.Dock" Value="Left" />
      </Trigger>
      <Trigger Property="Position" Value="Bottom">
        <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Right" />
        <Setter TargetName="PART_Header" Property="DockPanel.Dock" Value="Left" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="CloseButtonVisibility" Value="Collapsed" />
          <Condition Property="TitleVisibility" Value="Collapsed" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="CloseButtonVisibility" Value="Hidden" />
          <Condition Property="TitleVisibility" Value="Hidden" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type mah:FlyoutsControl}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <Grid IsItemsHost="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <system:Double x:Key="HamburgerMenuSelectionIndicatorThemeWidth">6</system:Double>
  <system:Double x:Key="HamburgerMenuSelectionIndicatorThemeHeight">24</system:Double>
  <mah:HamburgerMenuItemStyleSelector x:Key="HamburgerMenuItemStyleSelector" />
  <mah:HamburgerMenuItemStyleSelector x:Key="HamburgerMenuItemOptionsStyleSelector" IsItemOptions="True" />
  <QuinticEase x:Key="ScrollBarEaseInOut" EasingMode="EaseInOut" po:Freeze="true" />
  <ControlTemplate x:Key="MahApps.Templates.HamburgerMenuItem.FocusVisual">
    <Rectangle SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="2" UseLayoutRounding="True" />
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.MetroAnimatedSingleRowTabControl.Horizontal" TargetType="{x:Type mah:MetroAnimatedSingleRowTabControl}">
    <Grid KeyboardNavigation.TabNavigation="Local">
      <Grid.RowDefinitions>
        <RowDefinition x:Name="RowDefinition0" Height="Auto" />
        <RowDefinition x:Name="RowDefinition1" Height="*" />
      </Grid.RowDefinitions>
      <ScrollViewer x:Name="HeaderPanelScroll" Grid.Row="0" Margin="{TemplateBinding TabStripMargin}" Panel.ZIndex="1" mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="{TemplateBinding mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
        <Grid x:Name="HeaderPanelGrid">
          <mah:Underline x:Name="Underline" Background="Transparent" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
          <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
        </Grid>
      </ScrollViewer>
      <mah:TransitioningContentControl x:Name="ContentPanel" Grid.Row="1" behaviors:ReloadBehavior.OnSelectedTabChanged="True" RestartTransitionOnContentChange="True" Transition="{TemplateBinding mah:TabControlHelper.Transition}" UseLayoutRounding="True">
        <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
      </mah:TransitioningContentControl>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
        <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Top">
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="1" />
        <Setter TargetName="HeaderPanelScroll" Property="Grid.Row" Value="0" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="Auto" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="*" />
        <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Bottom">
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanelScroll" Property="Grid.Row" Value="1" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
        <Setter TargetName="Underline" Property="Placement" Value="Top" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.MetroAnimatedSingleRowTabControl.Vertical" TargetType="{x:Type mah:MetroAnimatedSingleRowTabControl}">
    <Grid KeyboardNavigation.TabNavigation="Local">
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Name="ColumnDefinition0" Width="*" />
        <ColumnDefinition x:Name="ColumnDefinition1" Width="Auto" />
      </Grid.ColumnDefinitions>
      <ScrollViewer x:Name="HeaderPanelScroll" Grid.Column="1" Margin="{TemplateBinding TabStripMargin}" Panel.ZIndex="1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
        <Grid x:Name="HeaderPanelGrid">
          <mah:Underline x:Name="Underline" Background="Transparent" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
          <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
        </Grid>
      </ScrollViewer>
      <mah:TransitioningContentControl x:Name="ContentPanel" Grid.Column="0" behaviors:ReloadBehavior.OnSelectedTabChanged="True" RestartTransitionOnContentChange="True" Transition="{TemplateBinding mah:TabControlHelper.Transition}" UseLayoutRounding="True">
        <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
      </mah:TransitioningContentControl>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
        <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Left">
        <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
        <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
        <Setter TargetName="HeaderPanelScroll" Property="Grid.Column" Value="0" />
        <Setter TargetName="Underline" Property="Placement" Value="Right" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Right">
        <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
        <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
        <Setter TargetName="HeaderPanelScroll" Property="Grid.Column" Value="1" />
        <Setter TargetName="Underline" Property="Placement" Value="Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type mah:MetroContentControl}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Foreground" Value="#FF000000" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="mah:MetroContentControl">
          <Grid x:Name="RootGrid" Opacity="0" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
              <TranslateTransform />
            </Grid.RenderTransform>
            <AdornerDecorator>
              <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Cursor="{TemplateBinding Cursor}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </AdornerDecorator>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="LayoutStates">
                <VisualState x:Name="AfterLoaded">
                  <Storyboard x:Name="AfterLoadedStoryboard">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="30" />
                      <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AfterLoadedReverse">
                  <Storyboard x:Name="AfterLoadedReverseStoryboard">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-30" />
                      <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AfterUnLoaded">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="30" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="AfterUnLoadedReverse">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="-30" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="BeforeLoaded" />
                <VisualState x:Name="BeforeUnloaded" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <system:Double x:Key="MahApps.Sizes.ProgressBar.MinHeight">6</system:Double>
  <ControlTemplate x:Key="MahApps.Templates.MetroTabControl.KeepVisualTreeInMemory" TargetType="{x:Type mah:MetroTabControl}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Name="ColumnDefinition0" />
        <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition x:Name="RowDefinition0" Height="Auto" />
        <RowDefinition x:Name="RowDefinition1" Height="*" />
      </Grid.RowDefinitions>
      <Grid x:Name="HeaderPanelGrid" Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding TabStripMargin}" Panel.ZIndex="1">
        <mah:Underline x:Name="Underline" Background="Transparent" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
        <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
      </Grid>
      <Border x:Name="ContentPanel" Grid.Row="1" Grid.Column="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
        <Grid x:Name="PART_ItemsHolder" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
        <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Bottom">
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="1" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
        <Setter TargetName="Underline" Property="Placement" Value="Top" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Left">
        <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
        <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="0" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
        <Setter TargetName="Underline" Property="Placement" Value="Right" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Right">
        <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
        <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="1" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
        <Setter TargetName="Underline" Property="Placement" Value="Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.MetroTabControl.DoNotKeepVisualTreeInMemory" TargetType="{x:Type mah:MetroTabControl}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Name="ColumnDefinition0" />
        <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition x:Name="RowDefinition0" Height="Auto" />
        <RowDefinition x:Name="RowDefinition1" Height="*" />
      </Grid.RowDefinitions>
      <Grid x:Name="HeaderPanelGrid" Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding TabStripMargin}" Panel.ZIndex="1">
        <mah:Underline x:Name="Underline" Background="Transparent" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
        <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
      </Grid>
      <Border x:Name="ContentPanel" Grid.Row="1" Grid.Column="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
        <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
        <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Bottom">
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="1" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
        <Setter TargetName="Underline" Property="Placement" Value="Top" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Left">
        <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
        <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="0" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
        <Setter TargetName="Underline" Property="Placement" Value="Right" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Right">
        <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
        <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="1" />
        <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
        <Setter TargetName="Underline" Property="Placement" Value="Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <converters:MetroTabItemCloseButtonWidthConverter x:Key="MetroTabItemCloseButtonWidthConverter" />
  <Style TargetType="{x:Type mah:PivotItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:PivotItem}">
          <ContentPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.MetroThumb.RangeSlider.Horizontal.Middle" TargetType="{x:Type mah:MetroThumb}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:MetroThumb}">
          <Grid Background="{TemplateBinding Background}">
            <Rectangle Height="5" Fill="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.MetroThumb.RangeSlider.Horizontal.Middle.Win10" TargetType="{x:Type mah:MetroThumb}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:MetroThumb}">
          <Grid Background="{TemplateBinding Background}">
            <Rectangle Height="2" Fill="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.MetroThumb.SplitView.Resize" TargetType="mah:MetroThumb">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeWE" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid Width="{TemplateBinding Width}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Width" Value="3" />
  </Style>
  <Style x:Key="MahApps.Styles.Thumb.WindowTitle" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <GridLength x:Key="ToggleSwitchPreContentMargin">6</GridLength>
  <GridLength x:Key="ToggleSwitchPostContentMargin">6</GridLength>
  <GridLength x:Key="ToggleSwitchContentSpaceMargin">12</GridLength>
  <Thickness x:Key="ToggleSwitchTopHeaderMargin">0 0 0 4</Thickness>
  <system:Double x:Key="ToggleSwitchOnStrokeThickness">0</system:Double>
  <system:Double x:Key="ToggleSwitchOffStrokeThickness">2</system:Double>
  <system:Double x:Key="ToggleSwitchThemeMinWidth">154</system:Double>
  <KeyTime x:Key="ToggleSwitchTranslateDuration">0:0:0.500</KeyTime>
  <Style TargetType="mah:TransitioningContentControl">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="mah:TransitioningContentControl">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}">
            <Grid>
              <ContentPresenter x:Name="PreviousContentPresentationSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{x:Null}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <ContentPresenter.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                  </TransformGroup>
                </ContentPresenter.RenderTransform>
              </ContentPresenter>
              <ContentPresenter x:Name="CurrentContentPresentationSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <ContentPresenter.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                  </TransformGroup>
                </ContentPresenter.RenderTransform>
              </ContentPresenter>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PresentationStates">
                <VisualState x:Name="DefaultTransition">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Hidden">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Hidden</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Hidden</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UpTransition">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="30" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="-30" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DownTransition">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-40" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="40" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="RightTransition">
                  <Storyboard>
                    <!--  new right transition ===========================================  -->
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-30" />
                      <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="30">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <!--  old right transition ===========================================  -->
                    <!--<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="CurrentContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="CurrentContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="-40" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PreviousContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PreviousContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300"
                                                                  Value="40" />
                                        </DoubleAnimationUsingKeyFrames>-->
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="LeftTransition">
                  <Storyboard>
                    <!--  new left transition ===========================================  -->
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="30" />
                      <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="-30">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <!--  old left transition ===========================================  -->
                    <!--<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="CurrentContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="CurrentContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="40" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PreviousContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PreviousContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300"
                                                                  Value="-40" />
                                        </DoubleAnimationUsingKeyFrames>-->
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="RightReplaceTransition">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-40" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="LeftReplaceTransition">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="40" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                      <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Transition" Value="Default" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.WindowButtonCommands" TargetType="{x:Type mah:WindowButtonCommands}">
    <StackPanel Orientation="Horizontal">
      <Button x:Name="PART_Min" AutomationProperties.AutomationId="Minimize" AutomationProperties.Name="Minimize" Command="{x:Static SystemCommands.MinimizeWindowCommand}" Focusable="False" IsEnabled="{Binding IsMinButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}" ToolTip="{Binding Minimize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
        <Button.Visibility>
          <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MIN">
            <Binding Mode="OneWay" Path="ShowMinButton" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="UseNoneWindowStyle" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="ResizeMode" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
          </MultiBinding>
        </Button.Visibility>
        <Path Data="F1M0,6L0,9 9,9 9,6 0,6z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" SnapsToDevicePixels="True" />
      </Button>
      <Button x:Name="PART_Max" AutomationProperties.AutomationId="MaximizeRestore" AutomationProperties.Name="Maximize" Command="{x:Static SystemCommands.MaximizeWindowCommand}" Focusable="False" IsEnabled="{Binding IsMaxRestoreButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}" ToolTip="{Binding Maximize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
        <Button.Visibility>
          <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MAX">
            <Binding Mode="OneWay" Path="ShowMaxRestoreButton" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="UseNoneWindowStyle" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="ResizeMode" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
          </MultiBinding>
        </Button.Visibility>
        <!--  normal state  -->
        <Path x:Name="PART_MaxPath" Width="10" Height="10" Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" SnapsToDevicePixels="True" />
      </Button>
      <Button x:Name="PART_Close" AutomationProperties.AutomationId="Close" AutomationProperties.Name="Close" Command="{x:Static SystemCommands.CloseWindowCommand}" Focusable="False" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabled, Mode=OneWay}" RenderOptions.EdgeMode="Aliased" ToolTip="{Binding Close, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
        <Button.Visibility>
          <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="CLOSE">
            <Binding Mode="OneWay" Path="ShowCloseButton" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="UseNoneWindowStyle" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
          </MultiBinding>
        </Button.Visibility>
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
          <Line SnapsToDevicePixels="True" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="2.5" X1="1" X2="9" Y1="1" Y2="9" />
          <Line SnapsToDevicePixels="True" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="2.5" X1="1" X2="9" Y1="9" Y2="1" />
        </Grid>
      </Button>
    </StackPanel>
    <ControlTemplate.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabled}" Value="True" />
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsAnyDialogOpen}" Value="True" />
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabledWithDialog}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="PART_Close" Property="IsEnabled" Value="False" />
      </MultiDataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=WindowState}" Value="Maximized">
        <Setter TargetName="PART_Max" Property="AutomationProperties.Name" Value="Restore" />
        <Setter TargetName="PART_Max" Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}" />
        <Setter TargetName="PART_Max" Property="ToolTip" Value="{Binding Restore, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter TargetName="PART_MaxPath" Property="Data" Value="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
      </DataTrigger>
      <Trigger Property="Theme" Value="Light">
        <Setter TargetName="PART_Close" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightCloseButtonStyle}" />
        <Setter TargetName="PART_Max" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightMaxButtonStyle}" />
        <Setter TargetName="PART_Min" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightMinButtonStyle}" />
      </Trigger>
      <Trigger Property="Theme" Value="Dark">
        <Setter TargetName="PART_Close" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkCloseButtonStyle}" />
        <Setter TargetName="PART_Max" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkMaxButtonStyle}" />
        <Setter TargetName="PART_Min" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkMinButtonStyle}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.WindowButtonCommands.Win10" TargetType="{x:Type mah:WindowButtonCommands}">
    <StackPanel Orientation="Horizontal">
      <Button x:Name="PART_Min" Width="46" AutomationProperties.AutomationId="Minimize" AutomationProperties.Name="Minimize" Command="{x:Static SystemCommands.MinimizeWindowCommand}" Focusable="False" IsEnabled="{Binding IsMinButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}" ToolTip="{Binding Minimize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" UseLayoutRounding="True">
        <Button.Visibility>
          <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MIN">
            <Binding Mode="OneWay" Path="ShowMinButton" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="UseNoneWindowStyle" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="ResizeMode" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
          </MultiBinding>
        </Button.Visibility>
        <Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0L10,0 10,1 10,1 1,1 0,1z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True" Stretch="Uniform" />
      </Button>
      <Button x:Name="PART_Max" Width="46" AutomationProperties.AutomationId="MaximizeRestore" AutomationProperties.Name="Maximize" Command="{x:Static SystemCommands.MaximizeWindowCommand}" Focusable="False" IsEnabled="{Binding IsMaxRestoreButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}" ToolTip="{Binding Maximize, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" UseLayoutRounding="True">
        <Button.Visibility>
          <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MAX">
            <Binding Mode="OneWay" Path="ShowMaxRestoreButton" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="UseNoneWindowStyle" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="ResizeMode" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
          </MultiBinding>
        </Button.Visibility>
        <!--  normal state  -->
        <Path x:Name="PART_MaxPath" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M1,1L1,11 11,11 11,1z M0,0L12,0 12,12 0,12z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True" Stretch="Uniform" />
      </Button>
      <Button x:Name="PART_Close" Width="46" AutomationProperties.AutomationId="Close" AutomationProperties.Name="Close" Command="{x:Static SystemCommands.CloseWindowCommand}" Focusable="False" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabled, Mode=OneWay}" ToolTip="{Binding Close, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" UseLayoutRounding="True">
        <Button.Visibility>
          <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="CLOSE">
            <Binding Mode="OneWay" Path="ShowCloseButton" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
            <Binding Mode="OneWay" Path="UseNoneWindowStyle" RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
          </MultiBinding>
        </Button.Visibility>
        <Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1M8.583,8L13,12.424 12.424,13 8,8.583 3.576,13 3,12.424 7.417,8 3,3.576 3.576,3 8,7.417 12.424,3 13,3.576z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True" Stretch="Uniform" />
      </Button>
    </StackPanel>
    <ControlTemplate.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabled}" Value="True" />
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsAnyDialogOpen}" Value="True" />
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=IsCloseButtonEnabledWithDialog}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="PART_Close" Property="IsEnabled" Value="False" />
      </MultiDataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=WindowState}" Value="Maximized">
        <Setter TargetName="PART_Max" Property="AutomationProperties.Name" Value="Restore" />
        <Setter TargetName="PART_Max" Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}" />
        <Setter TargetName="PART_Max" Property="ToolTip" Value="{Binding Restore, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter TargetName="PART_MaxPath" Property="Data" Value="M1,4.56L1,14.56 11,14.56 11,4.56z M4,1L4,3.56 12,3.56 12,11 14,11 14,1z M3,0L15,0 15,12 12,12 12,15.56 0,15.56 0,3.56 3,3.56z" />
      </DataTrigger>
      <Trigger Property="Theme" Value="Light">
        <Setter TargetName="PART_Close" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightCloseButtonStyle}" />
        <Setter TargetName="PART_Max" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightMaxButtonStyle}" />
        <Setter TargetName="PART_Min" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LightMinButtonStyle}" />
      </Trigger>
      <Trigger Property="Theme" Value="Dark">
        <Setter TargetName="PART_Close" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkCloseButtonStyle}" />
        <Setter TargetName="PART_Max" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkMaxButtonStyle}" />
        <Setter TargetName="PART_Min" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DarkMinButtonStyle}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.Button.WindowCommands" TargetType="{x:Type Button}">
    <Grid Background="{TemplateBinding Background}">
      <mah:ContentControlEx x:Name="PART_ContentControlEx" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.ToggleButton.WindowCommands" TargetType="{x:Type ToggleButton}">
    <Grid Background="{TemplateBinding Background}">
      <mah:ContentControlEx x:Name="PART_ContentControlEx" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
    </Grid>
  </ControlTemplate>
  <Style x:Key="MahApps.Styles.WindowCommandsItem" TargetType="{x:Type mah:WindowCommandsItem}">
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=ParentWindowCommands.Foreground, Mode=OneWay}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="MinHeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=ParentWindowCommands.ParentWindow.TitleBarHeight, Mode=OneWay}" />
    <Setter Property="Padding" Value="1 0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:WindowCommandsItem}">
          <StackPanel HorizontalAlignment="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:WindowCommandsItem}}, Path=ParentWindowCommands.HorizontalContentAlignment, Mode=OneWay}" VerticalAlignment="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:WindowCommandsItem}}, Path=ParentWindowCommands.VerticalContentAlignment, Mode=OneWay}" Orientation="Horizontal">
            <ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Rectangle x:Name="PART_Separator" Width="1" Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:WindowCommandsItem}}, Path=ParentWindowCommands.SeparatorHeight, Mode=OneWay}" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:WindowCommandsItem}}, Path=ParentWindowCommands.Foreground, Mode=OneWay}" IsHitTestVisible="False" Opacity="0.25" SnapsToDevicePixels="True" UseLayoutRounding="True" />
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSeparatorVisible" Value="False">
              <Setter TargetName="PART_Separator" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <converters:ThicknessBindingConverter x:Key="ThicknessBindingConverter" />
  <converters:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />
  <Storyboard x:Key="OverlayFastSemiFadeIn" AccelerationRatio=".97" BeginTime="0:0:0" SpeedRatio="2.7" Storyboard.TargetProperty="Opacity">
    <DoubleAnimation To=".7" />
  </Storyboard>
  <Storyboard x:Key="OverlayFastSemiFadeOut" AccelerationRatio=".97" BeginTime="0:0:0" SpeedRatio="2.7" Storyboard.TargetProperty="Opacity">
    <DoubleAnimation To="0.0" />
  </Storyboard>
  <theming:MahAppsLibraryThemeProvider x:Key="{x:Static theming:MahAppsLibraryThemeProvider.DefaultInstance}" />
  <Storyboard x:Key="MahApps.Storyboard.HideFloatingMessage" po:Freeze="True">
    <DoubleAnimation EasingFunction="{StaticResource MahApps.ExponentialEase.EaseInOut}" Storyboard.TargetName="PART_FloatingMessageContainer" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:.2" />
    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_FloatingMessageContainer" Storyboard.TargetProperty="(UIElement.Visibility)">
      <DiscreteObjectKeyFrame KeyTime="0:0:.2" Value="{x:Static Visibility.Collapsed}" />
    </ObjectAnimationUsingKeyFrames>
  </Storyboard>
  <Storyboard x:Key="MahApps.Storyboard.ShowFloatingMessage" po:Freeze="True">
    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_FloatingMessageContainer" Storyboard.TargetProperty="(UIElement.Visibility)">
      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
    </ObjectAnimationUsingKeyFrames>
    <DoubleAnimation EasingFunction="{StaticResource MahApps.ExponentialEase.EaseInOut}" Storyboard.TargetName="PART_FloatingMessageContainer" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.2" />
  </Storyboard>
  <Style x:Key="MahApps.Styles.Button.FocusVisualStyle.Flat">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource MahApps.Brushes.Button.Flat.Foreground}" StrokeDashArray="1 2" StrokeThickness="1" UseLayoutRounding="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.Button.Flat" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource MahApps.Styles.Button.FocusVisualStyle.Flat}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button.Flat}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Button.Flat.Foreground}" />
    <Setter Property="Padding" Value="10 5 10 5" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <mah:ClipBorder x:Name="Border" Margin="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <mah:ContentControlEx x:Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </mah:ClipBorder>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background.MouseOver}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background.Pressed}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Button.Flat.Foreground.Pressed}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.ToggleButton.Flat" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource MahApps.Styles.Button.FocusVisualStyle.Flat}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button.Flat}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Button.Flat.Foreground}" />
    <Setter Property="Padding" Value="10 5 10 5" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <mah:ClipBorder x:Name="Border" Margin="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <mah:ContentControlEx x:Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </mah:ClipBorder>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsChecked" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background.MouseOver}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsChecked" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsChecked" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background.Pressed}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Button.Flat.Foreground.Pressed}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsChecked" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
      </MultiTrigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button.FocusVisualStyle.Circle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Ellipse Margin="3" SnapsToDevicePixels="True" Stroke="{DynamicResource MahApps.Brushes.ThemeForeground}" StrokeDashArray="2 2" StrokeThickness="1" UseLayoutRounding="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.Button.Circle" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource MahApps.Styles.Button.FocusVisualStyle.Circle}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            <Ellipse Fill="{TemplateBinding Background}" StrokeThickness="0" />
            <Ellipse x:Name="ellipsebg" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" Opacity="0" StrokeThickness="0" />
            <Ellipse x:Name="ellipse" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=BorderThickness, Converter={StaticResource BorderThicknessToStrokeThicknessConverter}}" />
            <ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ellipsebg" Storyboard.TargetProperty="Opacity" From="0" To="0.3" Duration="0:0:0" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <!--  some out fading  -->
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ellipsebg" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ellipse" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="ellipse" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Gray7}" />
              <Setter TargetName="ellipse" Property="Opacity" Value="0.3" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray7}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button.Chromeless" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.Button.Chromeless}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="MahApps.Styles.Button.MetroWindow.Base" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}" />
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Opacity" Value="0.8" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Background="{TemplateBinding Background}">
            <mah:ContentControlEx x:Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.SemiTransparent}" />
        <Setter Property="Opacity" Value="1" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundDisabled}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button.MetroWindow.Light" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Base}" TargetType="{x:Type Button}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="MaxHeight" Value="34" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Width" Value="34" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.WindowButtonCommands.Background.MouseOver}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundDisabled}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button.MetroWindow.Dark" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}" TargetType="{x:Type Button}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.WindowButtonCommands.Background.MouseOver}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForegroundDisabled}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button.MetroWindow.Close.Light.Win10" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}" TargetType="{x:Type Button}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="#E81123" />
        <Setter Property="Foreground" Value="White" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="#F1707A" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button.MetroWindow.Close.Dark.Win10" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}" TargetType="{x:Type Button}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="#E81123" />
        <Setter Property="Foreground" Value="White" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="#F1707A" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="5 6" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            <mah:ClipBorder x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ClipBorder x:Name="DisabledVisualElement" Background="{DynamicResource MahApps.Brushes.Control.Disabled}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ContentControlEx x:Name="PART_ContentPresenter" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
              <Setter TargetName="Border" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderThickness), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
              <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Upper" />
    <Setter Property="mah:ControlsHelper.CornerRadius" Value="3" />
    <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.Focus}" />
    <Setter Property="mah:ControlsHelper.FocusBorderThickness" Value="2" />
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.MouseOver}" />
  </Style>
  <Style x:Key="MahApps.Styles.Button.Square" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="3 4" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            <mah:ClipBorder x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ClipBorder x:Name="DisabledVisualElement" Background="{DynamicResource MahApps.Brushes.Control.Disabled}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid Margin="{TemplateBinding BorderThickness}">
              <mah:ContentControlEx x:Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidFocused" />
                <VisualState x:Name="InvalidUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Square.Background.MouseOver}" />
              <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Button.Square.Foreground.MouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
              <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Lower" />
  </Style>
  <Style x:Key="MahApps.Styles.Button.Square.Accent" BasedOn="{StaticResource MahApps.Styles.Button.Square}" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            <mah:ClipBorder x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ClipBorder x:Name="DisabledVisualElement" Background="{DynamicResource MahApps.Brushes.Control.Disabled}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid Margin="{TemplateBinding BorderThickness}">
              <Rectangle x:Name="MouseOverRectangle" Fill="{DynamicResource MahApps.Brushes.Button.AccentedSquare.Background.MouseOver}" Opacity="0" />
              <mah:ContentControlEx x:Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidFocused" />
                <VisualState x:Name="InvalidUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Button.AccentedSquare.Foreground.MouseOver}" />
              <Setter TargetName="MouseOverRectangle" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
              <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
              <Setter TargetName="MouseOverRectangle" Property="Opacity" Value="0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.Button.Square.Highlight" BasedOn="{StaticResource MahApps.Styles.Button.Square}" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid Background="{TemplateBinding Background}">
            <mah:ClipBorder x:Name="Background" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ClipBorder x:Name="DisabledVisualElement" Background="{DynamicResource MahApps.Brushes.Control.Disabled}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ContentControlEx x:Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidFocused" />
                <VisualState x:Name="InvalidUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
              <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
              <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.ToggleButton.Circle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource MahApps.Styles.Button.FocusVisualStyle.Circle}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <Ellipse Fill="{TemplateBinding Background}" StrokeThickness="0" />
            <Ellipse x:Name="ellipsebg" Fill="{DynamicResource MahApps.Brushes.Accent}" Opacity="0" StrokeThickness="0" />
            <Ellipse x:Name="ellipse" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=BorderThickness, Converter={StaticResource BorderThicknessToStrokeThicknessConverter}}" />
            <ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ellipsebg" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <!--  some out fading  -->
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ellipsebg" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
              <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
              <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ellipse" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="ellipse" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Gray7}" />
              <Setter TargetName="ellipse" Property="Opacity" Value="0.3" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="ToggleButton.IsChecked" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray7}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.ToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="5 6" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <mah:ClipBorder x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ClipBorder x:Name="DisabledVisualElement" Background="{DynamicResource MahApps.Brushes.Control.Disabled}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ContentControlEx x:Name="PART_ContentPresenter" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="Border" Property="BorderThickness" Value="2" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
              <Setter TargetName="Border" Property="BorderThickness" Value="2" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
              <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:ControlsHelper.CornerRadius" Value="3" />
    <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.Focus}" />
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.MouseOver}" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray2}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsChecked" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsChecked" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray3}" />
      </MultiTrigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button.MetroSquare" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="BorderThickness" Value="2" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="Padding" Value="12 4 12 4" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            <mah:ClipBorder x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid>
                <Rectangle x:Name="MouseOverRectangle" Fill="{DynamicResource MahApps.Brushes.ThemeBackground}" Opacity="0" />
                <Rectangle x:Name="PressedRectangle" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" Opacity="0" />
                <mah:ContentControlEx x:Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </mah:ClipBorder>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" Stroke="White" StrokeDashArray="1,1" StrokeDashOffset="1.5" StrokeEndLineCap="Square" />
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" Stroke="Black" StrokeDashArray="1,1" StrokeDashOffset="0.5" StrokeEndLineCap="Square" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MouseOverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.4" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.5" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="PointerFocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="MahApps.Styles.Button.MetroSquare.Accent" BasedOn="{StaticResource MahApps.Styles.Button.MetroSquare}" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            <mah:ClipBorder x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid>
                <Rectangle x:Name="MouseOverRectangle" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" Opacity="0" />
                <Rectangle x:Name="PressedRectangle" Fill="White" Opacity="0" />
                <mah:ContentControlEx x:Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </mah:ClipBorder>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" Stroke="White" StrokeDashArray="1,1" StrokeDashOffset="1.5" StrokeEndLineCap="Square" />
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" Stroke="Black" StrokeDashArray="1,1" StrokeDashOffset="0.5" StrokeEndLineCap="Square" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MouseOverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.4" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.5" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="PointerFocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.Button.DropDown" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <mah:ClipBorder x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" />
          </mah:ClipBorder>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray5}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.Button.Split" BasedOn="{StaticResource MahApps.Styles.Button.DropDown}" TargetType="{x:Type Button}">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="MahApps.Styles.Button.Split.Arrow" BasedOn="{StaticResource MahApps.Styles.Button.Split}" TargetType="{x:Type Button}">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="MahApps.Styles.ListBox" TargetType="{x:Type ListBox}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <!--  default to 0  -->
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ScrollViewer Padding="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsGrouping" Value="true" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
      </Trigger>
      <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel IsItemsHost="True" IsVirtualizing="True" IsVirtualizingWhenGrouping="True" VirtualizationMode="Recycling" />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.ListBox.Virtualized" BasedOn="{StaticResource MahApps.Styles.ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizingWhenGrouping" Value="True" />
    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
  </Style>
  <Style x:Key="MahApps.Styles.ListBoxItem" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, Mode=OneWay, FallbackValue=Stretch, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="5 0 0 0" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding Path=(RenderOptions.ClearTypeHint), Mode=OneWay, FallbackValue=Auto, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid x:Name="RootGrid" Background="Transparent" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid Margin="{TemplateBinding BorderThickness}">
              <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
            <Trigger Property="mah:ItemHelper.IsMouseLeftButtonPressed" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="mah:ItemHelper.IsMouseRightButtonPressed" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="False" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, Mode=OneWay, FallbackValue=Center, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="mah:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
    <Setter Property="mah:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource MahApps.Brushes.Gray}" />
    <Setter Property="mah:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Gray7}" />
    <Setter Property="mah:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
    <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
    <Setter Property="mah:ItemHelper.HoverForegroundBrush" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="mah:ItemHelper.HoverSelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
    <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent2}" />
    <Setter Property="mah:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
  </Style>
  <Style x:Key="MahApps.Styles.RepeatButton.ScrollBarSmall" TargetType="{x:Type RepeatButton}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Height" Value="{DynamicResource MahApps.Sizes.ScrollBar.VerticalRepeatButton.Height}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Interval" Value="50" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
            <Viewbox x:Name="ArrowBox" Margin="{TemplateBinding Margin}" SnapsToDevicePixels="True" Stretch="Uniform" UseLayoutRounding="True">
              <Path x:Name="Arrow" Width="256" Height="256" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=OneWay}" Fill="{DynamicResource MahApps.Brushes.Gray3}" Stretch="Uniform" />
            </Viewbox>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ArrowBox" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray1}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Width" Value="{DynamicResource MahApps.Sizes.ScrollBar.HorizontalRepeatButton.Width}" />
  </Style>
  <Style x:Key="MahApps.Styles.Thumb.ScrollBar" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Thumb}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid x:Name="ThumbVisual">
            <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" StrokeThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="MouseOverRectangle" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" StrokeThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="PressedRectangle" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" StrokeThickness="{TemplateBinding BorderThickness}" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" Storyboard="{StaticResource MahApps.Storyboard.ScrollBarThumbMouseOver}" />
                <VisualState x:Name="Pressed" Storyboard="{StaticResource MahApps.Storyboard.ScrollBarThumbPressed}" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ThumbVisual" Property="Opacity" Value="0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.ScrollBar.Horizontal" TargetType="{x:Type ScrollBar}">
    <Grid x:Name="HorizontalRoot" Height="{TemplateBinding Height}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="0.00001*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" Command="ScrollBar.LineLeftCommand" Content="M54,14.9765625L54,74.9765625 24,44.9765625 54,14.9765625z" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBarSmall}" />
      <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
        <Track.DecreaseRepeatButton>
          <RepeatButton x:Name="HorizontalLargeDecrease" Command="ScrollBar.PageLeftCommand" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBarLarge}" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <mah:MetroThumb Margin="0 1 0 1" Style="{DynamicResource MahApps.Styles.Thumb.ScrollBar}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton x:Name="HorizontalLargeIncrease" Command="ScrollBar.PageRightCommand" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBarLarge}" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="2" Command="ScrollBar.LineRightCommand" Content="M192,79.875L352,239.875 192,399.875 192,79.875z" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBarSmall}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="HorizontalRoot" Property="Opacity" Value="0.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.ScrollBar.Vertical" TargetType="{x:Type ScrollBar}">
    <Grid x:Name="VerticalRoot" Width="{TemplateBinding Width}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="0.00001*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <RepeatButton x:Name="VerticalSmallDecrease" Grid.Row="0" Command="ScrollBar.LineUpCommand" Content="M240.125,160L400.125,320 80.125,320 240.125,160z" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBarSmall}" />
      <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
        <Track.Resources>
          <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">50</system:Double>
        </Track.Resources>
        <Track.DecreaseRepeatButton>
          <RepeatButton x:Name="VerticalLargeDecrease" Command="ScrollBar.PageUpCommand" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBarLarge}" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <mah:MetroThumb Margin="1 0 1 0" Style="{DynamicResource MahApps.Styles.Thumb.ScrollBar}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton x:Name="VerticalLargeIncrease" Command="ScrollBar.PageDownCommand" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBarLarge}" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton x:Name="VerticalSmallIncrease" Grid.Row="2" Command="ScrollBar.LineDownCommand" Content="M80.125,192L400.125,192 240.125,352 80.125,192z" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBarSmall}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="VerticalRoot" Property="Opacity" Value="0.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="MahApps.Styles.ScrollBar" TargetType="{x:Type ScrollBar}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Height" Value="{DynamicResource MahApps.Sizes.ScrollBar.Height}" />
        <Setter Property="Template" Value="{DynamicResource MahApps.Templates.ScrollBar.Horizontal}" />
        <Setter Property="Width" Value="Auto" />
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template" Value="{DynamicResource MahApps.Templates.ScrollBar.Vertical}" />
        <Setter Property="Width" Value="{DynamicResource MahApps.Sizes.ScrollBar.Width}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.TextBlock.Watermark" BasedOn="{StaticResource MahApps.Styles.TextBlock}" TargetType="{x:Type TextBlock}">
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Opacity" Value="0.6" />
  </Style>
  <Style x:Key="MahApps.Styles.TextBlock.AutoCollapsing" BasedOn="{StaticResource MahApps.Styles.TextBlock}" TargetType="{x:Type TextBlock}">
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.FloatingWatermark}" />
    <Setter Property="Opacity" Value="0.6" />
    <Style.Triggers>
      <Trigger Property="Text" Value="">
        <Setter Property="Visibility" Value="Collapsed" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.TabControl" TargetType="{x:Type TabControl}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BorderBrush" Value="{x:Null}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0" />
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto" />
              <RowDefinition x:Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <Grid x:Name="HeaderPanelGrid" Grid.Row="0" Grid.Column="0" Panel.ZIndex="1">
              <mah:Underline x:Name="Underline" Background="Transparent" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
              <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
            </Grid>
            <Border x:Name="ContentPanel" Grid.Row="1" Grid.Column="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
              <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="1" />
              <Setter TargetName="HeaderPanelGrid" Property="Margin" Value="2 0 2 2" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Margin" Value="2 2 0 2" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="1" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Margin" Value="0 2 2 2" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <!--  special property for header font size  -->
    <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="{DynamicResource MahApps.Font.Size.TabItem}" />
    <Setter Property="mah:TabControlHelper.UnderlineBrush" Value="{DynamicResource MahApps.Brushes.Gray}" />
    <Setter Property="mah:TabControlHelper.UnderlineMouseOverBrush" Value="{DynamicResource MahApps.Brushes.Gray.MouseOver}" />
    <Setter Property="mah:TabControlHelper.UnderlineMouseOverSelectedBrush" Value="{DynamicResource MahApps.Brushes.Highlight}" />
    <Setter Property="mah:TabControlHelper.UnderlineSelectedBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
  </Style>
  <Style x:Key="MahApps.Styles.TabItem" TargetType="TabItem">
    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=Background, Mode=OneWay, FallbackValue=Transparent}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="MinHeight" Value="5" />
    <Setter Property="MinWidth" Value="5" />
    <Setter Property="Padding" Value="6 2 6 2" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabItem">
          <Border x:Name="Border" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" UseLayoutRounding="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="PART_ContentLeftCol" Width="Auto" />
                <ColumnDefinition x:Name="PART_ContentRightCol" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="PART_ContentTopRow" Height="Auto" />
                <RowDefinition x:Name="PART_ContentBottomRow" Height="Auto" />
              </Grid.RowDefinitions>
              <mah:ContentControlEx x:Name="ContentSite" Grid.Row="0" Grid.Column="0" Padding="{TemplateBinding Padding}" Content="{TemplateBinding Header}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="{TemplateBinding mah:HeaderedControlHelper.HeaderFontFamily}" FontSize="{TemplateBinding mah:HeaderedControlHelper.HeaderFontSize}" FontStretch="{TemplateBinding mah:HeaderedControlHelper.HeaderFontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding mah:HeaderedControlHelper.HeaderFontWeight}" Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
              <mah:Underline x:Name="Underline" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineBrush), Mode=OneWay}" LineExtent="3" LineThickness="2" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="ContentSite" Property="Grid.Column" Value="0" />
              <Setter TargetName="ContentSite" Property="Grid.Row" Value="0" />
              <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="Auto" />
              <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="*" />
              <Setter TargetName="PART_ContentRightCol" Property="Width" Value="Auto" />
              <Setter TargetName="PART_ContentTopRow" Property="Height" Value="*" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Top">
              <Setter TargetName="ContentSite" Property="Grid.Column" Value="0" />
              <Setter TargetName="ContentSite" Property="Grid.Row" Value="0" />
              <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="Auto" />
              <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="*" />
              <Setter TargetName="PART_ContentRightCol" Property="Width" Value="Auto" />
              <Setter TargetName="PART_ContentTopRow" Property="Height" Value="*" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="ContentSite" Property="Grid.Column" Value="1" />
              <Setter TargetName="ContentSite" Property="Grid.Row" Value="0" />
              <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="Auto" />
              <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="Auto" />
              <Setter TargetName="PART_ContentRightCol" Property="Width" Value="*" />
              <Setter TargetName="PART_ContentTopRow" Property="Height" Value="*" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentSite" Property="Grid.Column" Value="0" />
              <Setter TargetName="ContentSite" Property="Grid.Row" Value="1" />
              <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="*" />
              <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="*" />
              <Setter TargetName="PART_ContentRightCol" Property="Width" Value="Auto" />
              <Setter TargetName="PART_ContentTopRow" Property="Height" Value="Auto" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="None">
              <Setter TargetName="Underline" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem">
              <Setter TargetName="Underline" Property="LineThickness" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel">
              <Setter TargetName="Underline" Property="LineExtent" Value="4" />
              <Setter TargetName="Underline" Property="LineThickness" Value="1" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
              <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineSelectedBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Gray}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="3" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="2" />
            </MultiDataTrigger>
            <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Gray.MouseOver}" />
              <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineMouseOverBrush), Mode=OneWay}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="2" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="2" />
            </MultiDataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
              <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineMouseOverSelectedBrush), Mode=OneWay}" />
            </MultiTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Converter={x:Static converters:IsNullConverter.Instance}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Converter={x:Static converters:IsNullConverter.Instance}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Converter={x:Static converters:IsNullConverter.Instance}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Converter={x:Static converters:IsNullConverter.Instance}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="mah:HeaderedControlHelper.HeaderFontFamily" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderFontFamily), Mode=OneWay}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderFontSize), Mode=OneWay}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderFontStretch" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderFontStretch), Mode=OneWay}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderFontWeight" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderFontWeight), Mode=OneWay}" />
    <Setter Property="mah:TabControlHelper.UnderlineBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineBrush), Mode=OneWay}" />
    <Setter Property="mah:TabControlHelper.UnderlineMouseOverBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineMouseOverBrush), Mode=OneWay}" />
    <Setter Property="mah:TabControlHelper.UnderlineMouseOverSelectedBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineMouseOverSelectedBrush), Mode=OneWay}" />
    <Setter Property="mah:TabControlHelper.UnderlinePlacement" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Mode=OneWay}" />
    <Setter Property="mah:TabControlHelper.UnderlineSelectedBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineSelectedBrush), Mode=OneWay}" />
  </Style>
  <Style x:Key="MahApps.Styles.RepeatButton.ScrollBar.AnimatedSingleRow" TargetType="{x:Type RepeatButton}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid Background="{TemplateBinding Background}">
            <ContentControl x:Name="PART_Arrow" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" FlowDirection="{TemplateBinding FlowDirection}" Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{DynamicResource MahApps.Styles.ContentControl.PathIcon}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_Arrow" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="PART_Arrow" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray1}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="PART_Arrow" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.ScrollBar.AnimatedSingleRow.Horizontal" TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <RepeatButton Grid.Column="0" Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Command="ScrollBar.PageLeftCommand" Content="M6 2L0 8l6 6z" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBar.AnimatedSingleRow}" />
      <RepeatButton Grid.Column="2" Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Command="ScrollBar.PageRightCommand" Content="M0 14l6-6-6-6z" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBar.AnimatedSingleRow}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.ScrollBar.AnimatedSingleRow.Vertical" TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <RepeatButton Grid.Row="0" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Command="ScrollBar.PageUpCommand" Content="M12 11L6 5l-6 6z" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBar.AnimatedSingleRow}" />
      <RepeatButton Grid.Row="2" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Command="ScrollBar.PageDownCommand" Content="M0 5l6 6 6-6z" Style="{DynamicResource MahApps.Styles.RepeatButton.ScrollBar.AnimatedSingleRow}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.ScrollViewer.AnimatedSingleRow" TargetType="{x:Type ScrollViewer}">
    <Grid>
      <ScrollBar x:Name="PART_HorizontalScrollBar" Height="Auto" AutomationProperties.AutomationId="MahApps.Templates.ScrollBar.AnimatedSingleRow.Horizontal" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Template="{DynamicResource MahApps.Templates.ScrollBar.AnimatedSingleRow.Horizontal}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
      <ScrollBar x:Name="PART_VerticalScrollBar" Width="Auto" AutomationProperties.AutomationId="MahApps.Templates.ScrollBar.AnimatedSingleRow.Vertical" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Orientation="Vertical" Template="{DynamicResource MahApps.Templates.ScrollBar.AnimatedSingleRow.Vertical}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
      <Grid Margin="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.Column="1" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
        <Grid Grid.Row="1" Grid.Column="0" Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.Column="1" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
        <Grid Grid.Row="1" Grid.Column="2" Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
        <Grid Grid.Row="2" Grid.Column="1" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
      </Grid>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.TabControl.AnimatedSingleRow.Horizontal" TargetType="{x:Type TabControl}">
    <Grid KeyboardNavigation.TabNavigation="Local">
      <Grid.RowDefinitions>
        <RowDefinition x:Name="RowDefinition0" Height="Auto" />
        <RowDefinition x:Name="RowDefinition1" Height="*" />
      </Grid.RowDefinitions>
      <ScrollViewer x:Name="HeaderPanelScroll" Grid.Row="0" Panel.ZIndex="1" mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="{TemplateBinding mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled}" HorizontalScrollBarVisibility="Auto" Template="{StaticResource MahApps.Templates.ScrollViewer.AnimatedSingleRow}" VerticalScrollBarVisibility="Disabled">
        <Grid x:Name="HeaderPanelGrid">
          <mah:Underline x:Name="Underline" Background="Transparent" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
          <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
        </Grid>
      </ScrollViewer>
      <mah:TransitioningContentControl x:Name="ContentPanel" Grid.Row="1" behaviors:ReloadBehavior.OnSelectedTabChanged="True" RestartTransitionOnContentChange="True" Transition="{TemplateBinding mah:TabControlHelper.Transition}" UseLayoutRounding="True">
        <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
      </mah:TransitioningContentControl>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
        <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Top">
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="1" />
        <Setter TargetName="HeaderPanelScroll" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanelScroll" Property="Margin" Value="2 2 2 0" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="Auto" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="*" />
        <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Bottom">
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanelScroll" Property="Grid.Row" Value="1" />
        <Setter TargetName="HeaderPanelScroll" Property="Margin" Value="2 0 2 2" />
        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
        <Setter TargetName="Underline" Property="Placement" Value="Top" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.TabControl.AnimatedSingleRow.Vertical" TargetType="{x:Type TabControl}">
    <Grid KeyboardNavigation.TabNavigation="Local">
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Name="ColumnDefinition0" Width="*" />
        <ColumnDefinition x:Name="ColumnDefinition1" Width="Auto" />
      </Grid.ColumnDefinitions>
      <ScrollViewer x:Name="HeaderPanelScroll" Grid.Column="1" Panel.ZIndex="1" HorizontalScrollBarVisibility="Disabled" Template="{StaticResource MahApps.Templates.ScrollViewer.AnimatedSingleRow}" VerticalScrollBarVisibility="Auto">
        <Grid x:Name="HeaderPanelGrid">
          <mah:Underline x:Name="Underline" Background="Transparent" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
          <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
        </Grid>
      </ScrollViewer>
      <mah:TransitioningContentControl x:Name="ContentPanel" Grid.Column="0" behaviors:ReloadBehavior.OnSelectedTabChanged="True" RestartTransitionOnContentChange="True" Transition="{TemplateBinding mah:TabControlHelper.Transition}" UseLayoutRounding="True">
        <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
      </mah:TransitioningContentControl>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
        <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Left">
        <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
        <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
        <Setter TargetName="HeaderPanelScroll" Property="Grid.Column" Value="0" />
        <Setter TargetName="HeaderPanelScroll" Property="Margin" Value="2 2 0 2" />
        <Setter TargetName="Underline" Property="Placement" Value="Right" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Right">
        <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
        <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
        <Setter TargetName="HeaderPanelScroll" Property="Grid.Column" Value="1" />
        <Setter TargetName="HeaderPanelScroll" Property="Margin" Value="0 2 2 2" />
        <Setter TargetName="Underline" Property="Placement" Value="Left" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="MahApps.Styles.TabControl.AnimatedSingleRow" BasedOn="{StaticResource MahApps.Styles.TabControl}" TargetType="{x:Type TabControl}">
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.TabControl.AnimatedSingleRow.Horizontal}" />
    <Setter Property="mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled" Value="True" />
    <Setter Property="mah:TabControlHelper.Transition" Value="Left" />
    <Style.Triggers>
      <Trigger Property="TabStripPlacement" Value="Top">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.TabControl.AnimatedSingleRow.Horizontal}" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Bottom">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.TabControl.AnimatedSingleRow.Horizontal}" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Left">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.TabControl.AnimatedSingleRow.Vertical}" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Right">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.TabControl.AnimatedSingleRow.Vertical}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.TabControl.Animated" BasedOn="{StaticResource MahApps.Styles.TabControl}" TargetType="{x:Type TabControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0" />
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto" />
              <RowDefinition x:Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <Grid x:Name="HeaderPanelGrid" Grid.Row="0" Grid.Column="0" Panel.ZIndex="1">
              <mah:Underline x:Name="Underline" Background="Transparent" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
              <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
            </Grid>
            <Border x:Name="ContentPanel" Grid.Row="1" Grid.Column="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <mah:TransitioningContentControl behaviors:ReloadBehavior.OnSelectedTabChanged="True" RestartTransitionOnContentChange="True" Transition="{TemplateBinding mah:TabControlHelper.Transition}" UseLayoutRounding="True">
                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
              </mah:TransitioningContentControl>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
              <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="1" />
              <Setter TargetName="HeaderPanelGrid" Property="Margin" Value="2 0 2 2" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Margin" Value="2 2 0 2" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="1" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Margin" Value="0 2 2 2" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:TabControlHelper.Transition" Value="Left" />
  </Style>
  <Style x:Key="MahApps.Styles.TabControl.ColorPicker" BasedOn="{StaticResource MahApps.Styles.TabControl}" TargetType="TabControl">
    <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="{DynamicResource MahApps.Font.Size.ColorPicker.TabItemHeader}" />
  </Style>
  <DrawingBrush x:Key="MahApps.Brushes.Tile" TileMode="Tile" Viewport="0,0,20,20" ViewportUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.ThemeBackground}">
          <GeometryDrawing.Geometry>
            <RectangleGeometry Rect="0,0,20,20" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.Gray7}">
          <GeometryDrawing.Geometry>
            <GeometryGroup>
              <RectangleGeometry Rect="0,0,10,10" />
              <RectangleGeometry Rect="10,10,10,10" />
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <DrawingBrush x:Key="MahApps.Brushes.Tile.Small" TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.ThemeBackground}">
          <GeometryDrawing.Geometry>
            <RectangleGeometry Rect="0,0,10,10" />
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
        <GeometryDrawing Brush="{DynamicResource MahApps.Brushes.Gray7}">
          <GeometryDrawing.Geometry>
            <GeometryGroup>
              <RectangleGeometry Rect="0,0,5,5" />
              <RectangleGeometry Rect="5,5,5,5" />
            </GeometryGroup>
          </GeometryDrawing.Geometry>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <DataTemplate x:Key="MahApps.DataTemplates.ColorPicker.NoColor">
    <Path Fill="{DynamicResource MahApps.Brushes.ThemeBackground}" SnapsToDevicePixels="True" Stretch="Fill" Stroke="{DynamicResource MahApps.Brushes.ThemeForeground}" StrokeThickness="1">
      <Path.Data>
        <GeometryGroup>
          <RectangleGeometry Rect="0,0 1,1" />
          <LineGeometry StartPoint="0,0" EndPoint="1,1" />
          <LineGeometry StartPoint="0,1" EndPoint="1,0" />
        </GeometryGroup>
      </Path.Data>
    </Path>
  </DataTemplate>
  <Style x:Key="MahApps.Styles.Slider.ColorComponent" TargetType="{x:Type Slider}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Focusable" Value="True" />
    <Setter Property="IsMoveToPointEnabled" Value="True" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Orientation" Value="Horizontal" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Border Margin="5 2" Background="{DynamicResource MahApps.Brushes.Tile.Small}" BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid Background="{TemplateBinding Background}" />
            </Border>
            <Track x:Name="PART_Track" Margin="{TemplateBinding BorderThickness}">
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Foreground="Transparent" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.HorizontalTrack.Win10}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton x:Name="VerticalTrackIncrease" Command="{x:Static Slider.IncreaseLarge}" Foreground="Transparent" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.HorizontalTrack.Win10}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <mah:MetroThumb x:Name="VerticalThumb" Width="10" Margin="0" HorizontalAlignment="Stretch" Background="Transparent" IsTabStop="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                  <mah:MetroThumb.Template>
                    <ControlTemplate>
                      <Grid Width="10" Background="Transparent">
                        <Path VerticalAlignment="Top" Data="M 0 0 5 10 10 0 Z" Fill="{DynamicResource MahApps.Brushes.ThemeBackground}" Stretch="Uniform" Stroke="{DynamicResource MahApps.Brushes.ThemeForeground}" StrokeThickness="1" />
                        <Path VerticalAlignment="Bottom" Data="M 0 10 5 0 10 10 Z" Fill="{DynamicResource MahApps.Brushes.ThemeBackground}" SnapsToDevicePixels="False" Stretch="Uniform" Stroke="{DynamicResource MahApps.Brushes.ThemeForeground}" StrokeThickness="1" />
                      </Grid>
                    </ControlTemplate>
                  </mah:MetroThumb.Template>
                </mah:MetroThumb>
              </Track.Thumb>
            </Track>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="MahApps.Styles.Slider.ColorComponent.Hue" BasedOn="{StaticResource MahApps.Styles.Slider.ColorComponent}" TargetType="{x:Type Slider}">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
          <GradientStop Offset="0.00000000000000000" Color="#FFFF0000" />
          <GradientStop Offset="0.16666666666666666" Color="#FFFFFF00" />
          <GradientStop Offset="0.33333333333333333" Color="#FF00FF00" />
          <GradientStop Offset="0.50000000000000000" Color="#FF00FFFF" />
          <GradientStop Offset="0.66666666666666666" Color="#FF0000FF" />
          <GradientStop Offset="0.83333333333333333" Color="#FFFF00FF" />
          <GradientStop Offset="1.00000000000000000" Color="#FFFF0000" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Maximum" Value="360" />
    <Setter Property="Minimum" Value="0" />
  </Style>
  <Style x:Key="MahApps.Styles.Slider.ColorComponent.SV" BasedOn="{StaticResource MahApps.Styles.Slider.ColorComponent}" TargetType="{x:Type Slider}">
    <Setter Property="LargeChange" Value="0.05" />
    <Setter Property="Maximum" Value="1" />
    <Setter Property="Minimum" Value="0" />
    <Setter Property="SmallChange" Value="0.01" />
  </Style>
  <Style x:Key="MahApps.Styles.Slider.ColorComponent.ARGB" BasedOn="{StaticResource MahApps.Styles.Slider.ColorComponent}" TargetType="{x:Type Slider}">
    <Setter Property="Maximum" Value="255" />
    <Setter Property="Minimum" Value="0" />
  </Style>
  <Style x:Key="MahApps.Styles.ColorEyeDropper" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type mah:ColorEyeDropper}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="EyeDropperCursor" Value="{StaticResource MahApps.Cursors.EyeDropper}" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="5 6" />
    <Setter Property="PreviewContentTemplate">
      <Setter.Value>
        <DataTemplate DataType="{x:Type mah:ColorEyePreviewData}">
          <Grid MinWidth="110">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" BorderBrush="{DynamicResource MahApps.Brushes.Gray}" BorderThickness="1">
              <Grid>
                <Image x:Name="PART_PreviewImage" Width="50" Height="50" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="{Binding PreviewImage}" />
                <Path Stroke="{Binding PreviewBrush, Converter={x:Static converters:BackgroundToForegroundConverter.Instance}}" StrokeThickness="1">
                  <Path.Data>
                    <PathGeometry Figures=" m 0 25 20 0  m 5 5 0 20  m 5 -25 20 0  m -25 -25 0 20 m -5 0 H20 H30 V30 H20 z" po:Freeze="true" />
                  </Path.Data>
                </Path>
              </Grid>
            </Border>
            <Ellipse x:Name="PART_EllipsePreviewBrush" Grid.Row="1" Grid.Column="0" Width="{DynamicResource MahApps.Font.Size.Content}" Height="{DynamicResource MahApps.Font.Size.Content}" Margin="5" Fill="{Binding PreviewBrush}" Stroke="{DynamicResource MahApps.Brushes.Gray}" StrokeThickness="1" />
            <TextBlock Grid.Row="1" Grid.Column="1" Margin="5" Text="{Binding PreviewBrush}" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            <mah:ClipBorder x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ClipBorder x:Name="DisabledVisualElement" Background="{DynamicResource MahApps.Brushes.Control.Disabled}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ContentControlEx x:Name="PART_ContentPresenter" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
              <Setter TargetName="Border" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderThickness), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
              <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Upper" />
    <Setter Property="mah:ControlsHelper.CornerRadius" Value="3" />
    <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.Focus}" />
    <Setter Property="mah:ControlsHelper.FocusBorderThickness" Value="2" />
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.MouseOver}" />
    <Style.Triggers>
      <Trigger Property="Content" Value="{x:Null}">
        <Setter Property="ContentTemplate">
          <Setter.Value>
            <DataTemplate>
              <Viewbox Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=FontSize}" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=FontSize}" Stretch="Uniform">
                <Canvas Width="24" Height="24">
                  <Path Data="M19.35,11.72L17.22,13.85L15.81,12.43L8.1,20.14L3.5,22L2,20.5L3.86,15.9L11.57,8.19L10.15,6.78L12.28,4.65L19.35,11.72M16.76,3C17.93,1.83 19.83,1.83 21,3C22.17,4.17 22.17,6.07 21,7.24L19.08,9.16L14.84,4.92L16.76,3M5.56,17.03L4.5,19.5L6.97,18.44L14.4,11L13,9.6L5.56,17.03Z" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                </Canvas>
              </Viewbox>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.ColorEyeDropper.ColorCanvas" BasedOn="{StaticResource MahApps.Styles.ColorEyeDropper}" TargetType="{x:Type mah:ColorEyeDropper}">
    <Setter Property="mah:ControlsHelper.CornerRadius" Value="0" />
    <Setter Property="mah:ControlsHelper.FocusBorderThickness" Value="1" />
  </Style>
  <Style x:Key="MahApps.Styles.ListBoxItem.ColorPaletteItem" BasedOn="{StaticResource MahApps.Styles.ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.White}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Control.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinHeight" Value="1" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid x:Name="RootGrid" Background="Transparent" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
            <Border x:Name="Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Border Margin="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid Background="{TemplateBinding Background}">
                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
            <Trigger Property="mah:ItemHelper.IsMouseLeftButtonPressed" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="mah:ItemHelper.IsMouseRightButtonPressed" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="False" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="MahApps.Templates.ColorPaletteItem">
    <Border x:Name="ColorPresenter" Width="{DynamicResource MahApps.Sizes.ColorListBox.ItemWidth}" Height="{DynamicResource MahApps.Sizes.ColorListBox.ItemHeight}" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{DynamicResource MahApps.Brushes.Tile.Small}">
      <Border.ToolTip>
        <MultiBinding Converter="{converters:ColorToNameConverter}">
          <Binding />
          <Binding Path="ColorNamesDictionary" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=mah:ColorPalette}" />
        </MultiBinding>
      </Border.ToolTip>
      <Grid>
        <Grid.Background>
          <SolidColorBrush Color="{Binding}" />
        </Grid.Background>
      </Grid>
    </Border>
  </DataTemplate>
  <Style x:Key="MahApps.Styles.ColorPalette" TargetType="{x:Type mah:ColorPalette}">
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Header" Value="Default Colors" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="ItemContainerStyle" Value="{DynamicResource MahApps.Styles.ListBoxItem.ColorPaletteItem}" />
    <Setter Property="ItemTemplate" Value="{DynamicResource MahApps.Templates.ColorPaletteItem}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <WrapPanel IsItemsHost="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:ColorPalette}">
          <GroupBox Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" mah:ControlsHelper.ContentCharacterCasing="{TemplateBinding mah:ControlsHelper.ContentCharacterCasing}" mah:HeaderedControlHelper.HeaderBackground="{TemplateBinding mah:HeaderedControlHelper.HeaderBackground}" mah:HeaderedControlHelper.HeaderFontFamily="{TemplateBinding mah:HeaderedControlHelper.HeaderFontFamily}" mah:HeaderedControlHelper.HeaderFontSize="{TemplateBinding mah:HeaderedControlHelper.HeaderFontSize}" mah:HeaderedControlHelper.HeaderFontStretch="{TemplateBinding mah:HeaderedControlHelper.HeaderFontStretch}" mah:HeaderedControlHelper.HeaderFontWeight="{TemplateBinding mah:HeaderedControlHelper.HeaderFontWeight}" mah:HeaderedControlHelper.HeaderForeground="{TemplateBinding mah:HeaderedControlHelper.HeaderForeground}" mah:HeaderedControlHelper.HeaderMargin="{TemplateBinding mah:HeaderedControlHelper.HeaderMargin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Foreground="{TemplateBinding Foreground}" Header="{TemplateBinding Header}" Style="{DynamicResource MahApps.Styles.GroupBox}">
            <ScrollViewer Padding="{TemplateBinding Padding}" mah:ScrollViewerHelper.BubbleUpScrollEventToParentScrollviewer="True" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </GroupBox>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Upper" />
    <Setter Property="mah:HeaderedControlHelper.HeaderBackground" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderForeground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
  </Style>
  <Style x:Key="MahApps.Styles.ColorPalette.ColorPickerDropDown" BasedOn="{StaticResource MahApps.Styles.ColorPalette}" TargetType="{x:Type mah:ColorPalette}" />
  <DataTemplate x:Key="MahApps.Templates.ColorPickerContent.ColorAndName">
    <Grid x:Name="RootGrid">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Border Grid.Column="0" Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight, Mode=OneWay}" Background="{DynamicResource MahApps.Brushes.Tile.Small}" BorderBrush="{DynamicResource MahApps.Brushes.Control.Border}" BorderThickness="1">
        <Rectangle>
          <Rectangle.Fill>
            <SolidColorBrush Color="{Binding TargetNullValue=Transparent}" />
          </Rectangle.Fill>
        </Rectangle>
      </Border>
      <TextBlock Grid.Column="1" Margin="2 0 0 0" Text="{Binding Converter={converters:ColorToNameConverter}}" />
    </Grid>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding}" Value="{x:Null}">
        <Setter TargetName="RootGrid" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <DataTemplate x:Key="MahApps.Templates.ColorPickerContent.ColorOnly">
    <Border x:Name="Border" Height="{DynamicResource MahApps.Sizes.ColorListBox.ItemHeight}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource MahApps.Brushes.Tile.Small}" BorderBrush="{DynamicResource MahApps.Brushes.Control.Border}" BorderThickness="1">
      <Rectangle>
        <Rectangle.Fill>
          <SolidColorBrush Color="{Binding}" />
        </Rectangle.Fill>
      </Rectangle>
    </Border>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding}" Value="{x:Null}">
        <Setter TargetName="Border" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <Style x:Key="MahApps.Styles.ToggleButton.ColorPickerDropDown" TargetType="{x:Type ToggleButton}">
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="ToggleButtonRootGrid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="TextColumn" Width="*" />
              <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
              <ColumnDefinition x:Name="ToggleButtonColumn" Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button x:Name="PART_ClearText" Grid.Column="1" Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:ColorPicker}}, Path=(mah:TextBoxHelper.ClearTextButton), Mode=OneWay}" Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}" ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" Focusable="False" FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Style="{DynamicResource MahApps.Styles.Button.Chromeless}" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:ColorPicker}}, Path=(mah:TextBoxHelper.ClearTextButton), Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Grid x:Name="BtnArrowBackground" Grid.Column="2" Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" Background="Transparent">
              <Path x:Name="Arrow" Width="8" Height="4" HorizontalAlignment="Center" Data="{DynamicResource ComboBoxDownArrowGeometry}" Fill="{DynamicResource MahApps.Brushes.Gray1}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Stretch="Uniform" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="BtnArrowBackground" Property="IsMouseOver" Value="True">
              <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray5}" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
              <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
              <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray3}" />
              <Setter TargetName="ToggleButtonRootGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
            </DataTrigger>
            <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
              <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
              <Setter TargetName="ToggleButtonRootGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.ColorPicker" TargetType="{x:Type mah:ColorPicker}">
    <Setter Property="AddToRecentColorsTrigger" Value="ColorPickerClosed" />
    <Setter Property="AvailableColorPaletteHeader" Value="Available Colors" />
    <Setter Property="AvailableColorPaletteItemsSource" Value="{x:Static mah:BuildInColorPalettes.WpfColorsPalette}" />
    <Setter Property="AvailableColorPaletteStyle" Value="{DynamicResource MahApps.Styles.ColorPalette.ColorPickerDropDown}" />
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}" />
    <Setter Property="CustomColorPalette01Header" Value="Custom Colors" />
    <Setter Property="CustomColorPalette02Header" Value="Custom Colors 2" />
    <Setter Property="CustomColorPalette02Style" Value="{DynamicResource MahApps.Styles.ColorPalette.ColorPickerDropDown}" />
    <Setter Property="DropDownHeight" Value="360" />
    <Setter Property="DropDownWidth" Value="500" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsAdvancedTabVisible" Value="True" />
    <Setter Property="IsAvailableColorPaletteVisible" Value="True" />
    <Setter Property="IsColorPalettesTabVisible" Value="True" />
    <Setter Property="IsCustomColorPalette01Visible" Value="False" />
    <Setter Property="IsCustomColorPalette02Visible" Value="False" />
    <Setter Property="IsRecentColorPaletteVisible" Value="True" />
    <Setter Property="IsStandardColorPaletteVisible" Value="True" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="RecentColorPaletteHeader" Value="Recent Colors" />
    <Setter Property="RecentColorPaletteItemsSource" Value="{x:Static mah:BuildInColorPalettes.RecentColors}" />
    <Setter Property="RecentColorPaletteStyle" Value="{DynamicResource MahApps.Styles.ColorPalette.ColorPickerDropDown}" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="SelectedColorTemplate" Value="{DynamicResource MahApps.Templates.ColorPickerContent.ColorAndName}" />
    <!--  change SnapsToDevicePixels to true to view a better border and validation error  -->
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="StandardColorPaletteHeader" Value="Standard Colors" />
    <Setter Property="StandardColorPaletteItemsSource" Value="{x:Static mah:BuildInColorPalettes.StandardColorsPalette}" />
    <Setter Property="StandardColorPaletteStyle" Value="{DynamicResource MahApps.Styles.ColorPalette.ColorPickerDropDown}" />
    <Setter Property="TabControlStyle" Value="{DynamicResource MahApps.Styles.TabControl.ColorPicker}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:ColorPicker}">
          <Grid>
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid Margin="{TemplateBinding BorderThickness}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="TextColumn" Width="*" />
                <ColumnDefinition x:Name="ButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                <ColumnDefinition x:Name="ToggleButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition x:Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <ToggleButton x:Name="PART_DropDownToggle" Grid.RowSpan="2" Grid.ColumnSpan="3" Margin="0" VerticalAlignment="Stretch" mah:ControlsHelper.CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}" mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}" Background="Transparent" BorderThickness="0" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" KeyboardNavigation.IsTabStop="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{DynamicResource MahApps.Styles.ToggleButton.ColorPickerDropDown}" />
              <Grid x:Name="ContentSite" Grid.Row="1" Grid.Column="0" Margin="1 0">
                <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, ValidatesOnExceptions=True}" ContentTemplate="{TemplateBinding SelectedColorTemplate}" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
              <TextBlock x:Name="PART_Message" Grid.Row="1" Grid.Column="0" Margin="4 0" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" />
              <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Margin="4 0" Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                <ContentControl.Height>
                  <MultiBinding Converter="{converters:MathMultiplyConverter}">
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity" />
                  </MultiBinding>
                </ContentControl.Height>
                <TextBlock x:Name="PART_FloatingMessage" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                  <TextBlock.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding Converter="{converters:MathSubtractConverter}">
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight" />
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </ContentControl>
            </Grid>
            <Border x:Name="DisabledVisualElement" Grid.ColumnSpan="3" Background="{DynamicResource MahApps.Brushes.Control.Disabled}" BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False" Opacity="0.6" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
            <!--  AllowsTransparency="true" fixes the redraw problem under windows vista/7 with a selected non aero theme  -->
            <controlzex:PopupEx x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_DropDownToggle}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="False">
              <Grid Width="{TemplateBinding DropDownWidth}" Height="{TemplateBinding DropDownHeight}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
                <Border x:Name="PopupBorder" Height="Auto" HorizontalAlignment="Stretch" Background="{DynamicResource MahApps.Brushes.ThemeBackground}" BorderBrush="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}" BorderThickness="{DynamicResource ComboBoxPopupBorderThemeThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                  <TabControl x:Name="PART_PopupTabControl" ItemContainerStyle="{TemplateBinding TabItemStyle}" Style="{TemplateBinding TabControlStyle}">
                    <TabItem x:Name="PART_ColorPalettesTab" Header="{TemplateBinding ColorPalettesTabHeader}" HeaderTemplate="{TemplateBinding ColorPalettesTabHeaderTemplate}" Visibility="{TemplateBinding IsColorPalettesTabVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                      <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <VirtualizingStackPanel>
                          <mah:ColorPalette x:Name="PART_ColorPaletteStandard" Header="{TemplateBinding StandardColorPaletteHeader}" HeaderTemplate="{TemplateBinding StandardColorPaletteHeaderTemplate}" ItemsSource="{TemplateBinding StandardColorPaletteItemsSource}" Style="{TemplateBinding StandardColorPaletteStyle}" Visibility="{TemplateBinding IsStandardColorPaletteVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          <mah:ColorPalette x:Name="PART_ColorPaletteAvailable" Header="{TemplateBinding AvailableColorPaletteHeader}" HeaderTemplate="{TemplateBinding AvailableColorPaletteHeaderTemplate}" ItemsSource="{TemplateBinding AvailableColorPaletteItemsSource}" Style="{TemplateBinding AvailableColorPaletteStyle}" Visibility="{TemplateBinding IsAvailableColorPaletteVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          <mah:ColorPalette x:Name="PART_ColorPaletteCustom01" Header="{TemplateBinding CustomColorPalette01Header}" HeaderTemplate="{TemplateBinding CustomColorPalette01HeaderTemplate}" ItemsSource="{TemplateBinding CustomColorPalette01ItemsSource}" Style="{TemplateBinding CustomColorPalette01Style}" Visibility="{TemplateBinding IsCustomColorPalette01Visible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          <mah:ColorPalette x:Name="PART_ColorPaletteCustom02" Header="{TemplateBinding CustomColorPalette02Header}" HeaderTemplate="{TemplateBinding CustomColorPalette02HeaderTemplate}" ItemsSource="{TemplateBinding CustomColorPalette02ItemsSource}" Style="{TemplateBinding CustomColorPalette02Style}" Visibility="{TemplateBinding IsCustomColorPalette02Visible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                          <mah:ColorPalette x:Name="PART_ColorPaletteRecent" Header="{TemplateBinding RecentColorPaletteHeader}" HeaderTemplate="{TemplateBinding RecentColorPaletteHeaderTemplate}" ItemsSource="{TemplateBinding RecentColorPaletteItemsSource}" Style="{TemplateBinding RecentColorPaletteStyle}" Visibility="{TemplateBinding IsRecentColorPaletteVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </VirtualizingStackPanel>
                      </ScrollViewer>
                    </TabItem>
                    <TabItem x:Name="PART_AdvancedTab" Header="{TemplateBinding AdvancedTabHeader}" HeaderTemplate="{TemplateBinding AdvancedTabHeaderTemplate}" Visibility="{TemplateBinding IsAdvancedTabVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                      <ScrollViewer>
                        <mah:ColorCanvas mah:TextBoxHelper.AutoWatermark="{TemplateBinding mah:TextBoxHelper.AutoWatermark}" mah:TextBoxHelper.ButtonCommand="{TemplateBinding mah:TextBoxHelper.ButtonCommand}" mah:TextBoxHelper.ButtonCommandParameter="{TemplateBinding mah:TextBoxHelper.ButtonCommandParameter}" mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}" mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" mah:TextBoxHelper.ButtonTemplate="{TemplateBinding mah:TextBoxHelper.ButtonTemplate}" mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" mah:TextBoxHelper.ButtonsAlignment="{TemplateBinding mah:TextBoxHelper.ButtonsAlignment}" mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}" mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}" mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" mah:TextBoxHelper.WatermarkWrapping="{TemplateBinding mah:TextBoxHelper.WatermarkWrapping}" ColorNamesDictionary="{TemplateBinding ColorNamesDictionary}" LabelAlphaChannel="{TemplateBinding LabelAlphaChannel}" LabelBlueChannel="{TemplateBinding LabelBlueChannel}" LabelColorName="{TemplateBinding LabelColorName}" LabelColorPreview="{TemplateBinding LabelColorPreview}" LabelGreenChannel="{TemplateBinding LabelGreenChannel}" LabelHueChannel="{TemplateBinding LabelHueChannel}" LabelRedChannel="{TemplateBinding LabelRedChannel}" LabelSaturationChannel="{TemplateBinding LabelSaturationChannel}" LabelValueChannel="{TemplateBinding LabelValueChannel}" SelectedColor="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor}" />
                      </ScrollViewer>
                    </TabItem>
                  </TabControl>
                </Border>
              </Grid>
            </controlzex:PopupEx>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="00:00:00">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedColor}" Value="{x:Null}" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedColor, Mode=OneWay, Converter={x:Static converters:IsNullConverter.Instance}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterGotFocus}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitGotFocus}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedColor, Mode=OneWay, Converter={x:Static converters:IsNullConverter.Instance}}" Value="False" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterHasText}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitHasText}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedColor, Mode=OneWay, Converter={x:Static converters:IsNullConverter.Instance}}" Value="False" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.ClearTextButton)}" Value="False">
              <Setter TargetName="ContentSite" Property="Grid.ColumnSpan" Value="2" />
              <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray9}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
              <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
              <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="mah:BuildInColorPalettes.MaximumRecentColorsCount" Value="18" />
    <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.ComboBox.Border.Focus}" />
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.ComboBox.Border.MouseOver}" />
    <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
    <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22" />
    <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="False" />
  </Style>
  <Style x:Key="MahApps.Styles.Button.Dialogs" BasedOn="{StaticResource MahApps.Styles.Button.Square}" TargetType="{x:Type ButtonBase}">
    <Setter Property="MinHeight" Value="35" />
    <Setter Property="MinWidth" Value="80" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
  </Style>
  <Style x:Key="MahApps.Styles.Button.Dialogs.Accent" BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}" TargetType="{x:Type ButtonBase}">
    <Setter Property="MinHeight" Value="35" />
    <Setter Property="MinWidth" Value="80" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
  </Style>
  <Style x:Key="MahApps.Styles.Button.Dialogs.AccentHighlight" BasedOn="{StaticResource MahApps.Styles.Button.Square.Highlight}" TargetType="{x:Type ButtonBase}">
    <Setter Property="MinHeight" Value="35" />
    <Setter Property="MinWidth" Value="80" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.BaseMetroDialog" TargetType="{x:Type dialogs:BaseMetroDialog}">
    <Grid Background="{TemplateBinding Background}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <ContentPresenter x:Name="PART_Top" Grid.Row="0" AutomationProperties.Name="Dialog top" Content="{TemplateBinding DialogTop}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      <Grid Grid.Row="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="{Binding DialogContentMargin, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
          <ColumnDefinition Width="{Binding DialogContentWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
          <ColumnDefinition Width="{Binding DialogContentMargin, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        </Grid.ColumnDefinitions>
        <!--  Content area  -->
        <Grid Grid.Column="1" Margin="{TemplateBinding Padding}">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>
          <TextBlock x:Name="PART_Title" Grid.Row="0" AutomationProperties.Name="Dialog title" FontSize="{TemplateBinding DialogTitleFontSize}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Title}" TextWrapping="Wrap" />
          <ContentPresenter x:Name="PART_Content" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.Name="Dialog content" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
      </Grid>
      <ContentPresenter x:Name="PART_Bottom" Grid.Row="2" AutomationProperties.Name="Dialog bottom" Content="{TemplateBinding DialogBottom}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Title" Value="{x:Null}">
        <Setter TargetName="PART_Title" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <EventTrigger RoutedEvent="Loaded">
        <EventTrigger.Actions>
          <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.Dialogs.Show}" />
        </EventTrigger.Actions>
      </EventTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="MahApps.Styles.BaseMetroDialog" TargetType="{x:Type dialogs:BaseMetroDialog}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="DialogButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Dialog.Button}" />
    <Setter Property="DialogMessageFontSize" Value="{DynamicResource MahApps.Font.Size.Dialog.Message}" />
    <Setter Property="DialogTitleFontSize" Value="{DynamicResource MahApps.Font.Size.Dialog.Title}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
    <Setter Property="Opacity" Value="0" />
    <Setter Property="Padding" Value="0 10 0 0" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.BaseMetroDialog}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <Storyboard x:Key="BadgeChangedStoryboard">
    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
      <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
      <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
    </DoubleAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
      <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
      <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>
  <Style TargetType="{x:Type mah:Badged}">
    <Setter Property="BadgeBackground" Value="{DynamicResource MahApps.Brushes.Badged.Background}" />
    <Setter Property="BadgeChangedStoryboard" Value="{StaticResource BadgeChangedStoryboard}" />
    <Setter Property="BadgeFontSize" Value="11" />
    <Setter Property="BadgeFontWeight" Value="DemiBold" />
    <Setter Property="BadgeForeground" Value="{DynamicResource MahApps.Brushes.Badged.Foreground}" />
    <Setter Property="BadgeMargin" Value="1 0" />
    <Setter Property="BadgePlacementMode" Value="TopRight" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:Badged}">
          <Grid>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <Border x:Name="PART_BadgeContainer" MinWidth="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" MinHeight="18" Padding="2" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{TemplateBinding BadgeBackground}" BorderBrush="{TemplateBinding BadgeBorderBrush}" BorderThickness="{TemplateBinding BadgeBorderThickness}" CornerRadius="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight, Converter={converters:SizeToCornerRadiusConverter}}" RenderTransformOrigin=".5,.5" Visibility="{TemplateBinding IsBadgeSet, Converter={StaticResource BooleanToVisibilityConverter}}">
              <Border.RenderTransform>
                <ScaleTransform ScaleX="1" ScaleY="1" />
              </Border.RenderTransform>
              <ContentControl x:Name="PART_BadgeContent" Margin="{TemplateBinding BadgeMargin}" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Badge}" ContentStringFormat="{TemplateBinding BadgeStringFormat}" ContentTemplate="{TemplateBinding BadgeTemplate}" ContentTemplateSelector="{TemplateBinding BadgeTemplateSelector}" Focusable="False" FontFamily="{TemplateBinding BadgeFontFamily}" FontSize="{TemplateBinding BadgeFontSize}" FontStretch="{TemplateBinding BadgeFontStretch}" FontStyle="{TemplateBinding BadgeFontStyle}" FontWeight="{TemplateBinding BadgeFontWeight}" Foreground="{TemplateBinding BadgeForeground}" IsTabStop="False" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="BadgePlacementMode" Value="TopLeft">
              <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
            </Trigger>
            <Trigger Property="BadgePlacementMode" Value="Top">
              <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
              <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
            </Trigger>
            <Trigger Property="BadgePlacementMode" Value="TopRight">
              <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
            </Trigger>
            <Trigger Property="BadgePlacementMode" Value="Right">
              <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
            </Trigger>
            <Trigger Property="BadgePlacementMode" Value="BottomRight">
              <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
            </Trigger>
            <Trigger Property="BadgePlacementMode" Value="Bottom">
              <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
              <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
            </Trigger>
            <Trigger Property="BadgePlacementMode" Value="BottomLeft">
              <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
            </Trigger>
            <Trigger Property="BadgePlacementMode" Value="Left">
              <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_BadgeContainer" Property="Background" Value="{DynamicResource MahApps.Brushes.Badged.Background.Disabled}" />
              <Setter TargetName="PART_BadgeContent" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Badged.Foreground.Disabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="MahApps.Styles.MetroThumbContentControl" BasedOn="{StaticResource MahApps.Styles.ContentControlEx}" TargetType="{x:Type mah:MetroThumbContentControl}" />
  <DataTemplate x:Key="MahApps.Templates.DateTimePicker.FiveMinuteIndicator">
    <StackPanel Height="57" Orientation="Horizontal" RenderTransformOrigin=".5,1">
      <StackPanel.RenderTransform>
        <RotateTransform Angle="{Binding Converter={StaticResource ClockDegreeConverter}, Mode=OneTime}" />
      </StackPanel.RenderTransform>
      <Rectangle Width="2" Height="10" Margin="0 -49 0 0" Fill="{DynamicResource MahApps.Brushes.Accent3}" />
    </StackPanel>
  </DataTemplate>
  <DataTemplate x:Key="MahApps.Templates.DateTimePicker.MinuteIndicator">
    <StackPanel Height="57" Orientation="Horizontal" RenderTransformOrigin=".5,1">
      <StackPanel.RenderTransform>
        <RotateTransform Angle="{Binding Converter={StaticResource ClockDegreeConverter}, Mode=OneTime}" />
      </StackPanel.RenderTransform>
      <Rectangle Width="1" Height="5" Margin="0 -49.75 0 0" Fill="{DynamicResource MahApps.Brushes.Accent4}" />
    </StackPanel>
  </DataTemplate>
  <Style x:Key="MahApps.Styles.TimePickerBase" TargetType="{x:Type mah:TimePickerBase}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="HandVisibility" Value="HourMinute" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="PickerVisibility" Value="HourMinute" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:TimePickerBase}">
          <Grid x:Name="PART_Root">
            <Border x:Name="Base" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding BorderThickness}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="TextColumn" Width="*" />
                <ColumnDefinition x:Name="ClearButtonColumn" Width="Auto" />
                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition x:Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <DatePickerTextBox x:Name="PART_TextBox" Grid.Row="1" Grid.Column="0" Margin="0" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" mah:TextBoxHelper.Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.Watermark), Mode=OneWay}" mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" CaretBrush="{DynamicResource MahApps.Brushes.ThemeForeground}" ContextMenu="{TemplateBinding ContextMenu}" Focusable="{TemplateBinding Focusable}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" SelectionBrush="{DynamicResource MahApps.Brushes.Highlight}" Style="{DynamicResource MahApps.Styles.DatePickerTextBox.TimePickerBase}">
                <i:Interaction.Behaviors>
                  <behaviors:DatePickerTextBoxBehavior />
                </i:Interaction.Behaviors>
              </DatePickerTextBox>
              <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Margin="4 0" Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                <ContentControl.Height>
                  <MultiBinding Converter="{converters:MathMultiplyConverter}">
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity" />
                  </MultiBinding>
                </ContentControl.Height>
                <TextBlock x:Name="PART_FloatingMessage" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                  <TextBlock.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding Converter="{converters:MathSubtractConverter}">
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight" />
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </ContentControl>
              <Button x:Name="PART_ClearText" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" Command="{TemplateBinding mah:TextBoxHelper.ButtonCommand}" CommandParameter="{TemplateBinding mah:TextBoxHelper.ButtonCommandParameter}" CommandTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:TimePickerBase}}, Mode=OneWay}" Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}" ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" Focusable="False" FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Style="{DynamicResource MahApps.Styles.Button.Chromeless}" Template="{TemplateBinding mah:TextBoxHelper.ButtonTemplate}" Visibility="Visible" />
              <Button x:Name="PART_Button" Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" Content="{TemplateBinding mah:DatePickerHelper.DropDownButtonContent}" ContentTemplate="{TemplateBinding mah:DatePickerHelper.DropDownButtonContentTemplate}" Focusable="False" FontFamily="{TemplateBinding mah:DatePickerHelper.DropDownButtonFontFamily}" FontSize="{TemplateBinding mah:DatePickerHelper.DropDownButtonFontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Style="{DynamicResource MahApps.Styles.Button.Chromeless}" />
              <controlzex:PopupEx x:Name="PART_Popup" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" AllowsTransparency="True" Focusable="False" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_Root}" PopupAnimation="Fade" StaysOpen="False">
                <Border x:Name="PART_PopupBorder" Background="{DynamicResource MahApps.Brushes.Control.Background}" BorderBrush="{DynamicResource MahApps.Brushes.Control.Border}" BorderThickness="1">
                  <StackPanel x:Name="PART_PopupContainer" Background="Transparent">
                    <ContentPresenter x:Name="PART_Calendar" Margin="2 0" Focusable="False" Visibility="Collapsed" />
                    <Grid VerticalAlignment="Center">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <Border x:Name="PART_Clock" Grid.Row="0" Width="120" Height="120" Margin="0 5 5 0" HorizontalAlignment="Center" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="2" CornerRadius="75">
                        <Canvas HorizontalAlignment="Center">
                          <ItemsControl Focusable="False" IsTabStop="False" ItemTemplate="{StaticResource MahApps.Templates.DateTimePicker.FiveMinuteIndicator}" ItemsSource="{StaticResource FiveMinuteKeys}">
                            <ItemsControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <Canvas IsItemsHost="True" />
                              </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                          </ItemsControl>
                          <ItemsControl Focusable="False" IsTabStop="False" ItemTemplate="{StaticResource MahApps.Templates.DateTimePicker.MinuteIndicator}" ItemsSource="{StaticResource MinuteKeys}">
                            <ItemsControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <Canvas IsItemsHost="True" />
                              </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                          </ItemsControl>
                          <Rectangle x:Name="PART_MinuteHand" Canvas.Top="6" Width="2" Height="51" HorizontalAlignment="Center" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" RenderTransformOrigin=".5,1">
                            <Rectangle.RenderTransform>
                              <RotateTransform Angle="{Binding Path=SelectedDateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ClockDegreeConverter}, ConverterParameter='m', Mode=OneWay}" />
                            </Rectangle.RenderTransform>
                          </Rectangle>
                          <Rectangle x:Name="PART_HourHand" Canvas.Top="27" Width="2" Height="30" HorizontalAlignment="Center" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" RenderTransformOrigin=".5,1">
                            <Rectangle.RenderTransform>
                              <RotateTransform Angle="{Binding Path=SelectedDateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HourDegreeConverter}, ConverterParameter='h', Mode=OneWay}" />
                            </Rectangle.RenderTransform>
                          </Rectangle>
                          <Ellipse Canvas.Left="-2" Canvas.Top="54" Width="6" Height="6" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                          <Rectangle x:Name="PART_SecondHand" Canvas.Left="0.75" Canvas.Top="6" Width="1" Height="61" Margin="0 5 0 0" HorizontalAlignment="Center" Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" Opacity=".25" RenderTransformOrigin=".5,.75">
                            <Rectangle.RenderTransform>
                              <RotateTransform Angle="{Binding Path=SelectedDateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ClockDegreeConverter}, ConverterParameter='s', Mode=OneWay}" />
                            </Rectangle.RenderTransform>
                          </Rectangle>
                        </Canvas>
                      </Border>
                      <Grid x:Name="PART_ClockPartSelectorsHolder" Grid.Row="1" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ComboBox x:Name="PART_HourPicker" Grid.Column="0" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" ItemStringFormat="{TemplateBinding HoursItemStringFormat}" ItemsSource="{TemplateBinding SourceHours}" />
                        <Label Grid.Column="1" Content=":" Visibility="{Binding Path=Visibility, ElementName=PART_MinutePicker}" />
                        <ComboBox x:Name="PART_MinutePicker" Grid.Column="2" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" ItemStringFormat="{TemplateBinding MinutesItemStringFormat}" ItemsSource="{TemplateBinding SourceMinutes}" />
                        <Label Grid.Column="3" Content=":" Visibility="{Binding Path=Visibility, ElementName=PART_SecondPicker}" />
                        <ComboBox x:Name="PART_SecondPicker" Grid.Column="4" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" ItemStringFormat="{TemplateBinding SecondsItemStringFormat}" ItemsSource="{TemplateBinding SourceSeconds}" />
                        <ComboBox x:Name="PART_AmPmSwitcher" Grid.Column="5" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                      </Grid>
                    </Grid>
                  </StackPanel>
                </Border>
              </controlzex:PopupEx>
            </Grid>
            <Border x:Name="DisabledVisualElement" Background="{DynamicResource MahApps.Brushes.Control.Disabled}" BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="mah:TextBoxHelper.ClearTextButton" Value="True">
              <Setter Property="mah:TextBoxHelper.ButtonCommand" Value="{x:Static mah:MahAppsCommands.ClearControlCommand}" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.ButtonsAlignment)}" Value="Left">
              <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
              <Setter TargetName="PART_Button" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_FloatingMessageContainer" Property="Grid.Column" Value="2" />
              <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="2" />
              <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
            </Trigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
              <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
              <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.TextBlock.FloatingMessage}" />
              <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter TargetName="PART_Button" Property="IsEnabled" Value="False" />
              <Setter TargetName="PART_Calendar" Property="IsHitTestVisible" Value="False" />
              <Setter TargetName="PART_ClockPartSelectorsHolder" Property="IsHitTestVisible" Value="False" />
              <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
            </Trigger>
            <Trigger SourceName="PART_Button" Property="IsMouseOver" Value="True">
              <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
              <Setter TargetName="PART_Button" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger SourceName="PART_Button" Property="IsPressed" Value="True">
              <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
              <Setter TargetName="PART_Button" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="IsClockVisible" Value="False">
              <Setter TargetName="PART_Clock" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PART_ClockPartSelectorsHolder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsDatePickerVisible" Value="True">
              <Setter TargetName="PART_Calendar" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="mah:TextBoxHelper.ButtonCommand" Value="{x:Null}">
              <Setter TargetName="PART_ClearText" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsReadOnly" Value="True" />
                <Condition Property="mah:TextBoxHelper.ButtonCommand" Value="{x:Null}" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_ClearText" Property="IsEnabled" Value="False" />
            </MultiTrigger>
            <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
              <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
              <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.ShowFloatingMessage}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.HideFloatingMessage}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
    <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}" />
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}" />
    <Setter Property="mah:DatePickerHelper.DropDownButtonContent" Value="M34,52H31V38.5C29.66,39.9 28.16,40.78 26.34,41.45V37.76C27.3,37.45 28.34,36.86 29.46,36C30.59,35.15 31.36,34.15 31.78,33H34V52M45,52V48H37V45L45,33H48V45H50V48H48V52H45M45,45V38.26L40.26,45H45M18,57V23H23V20A2,2 0 0,1 25,18H29C30.11,18 31,18.9 31,20V23H45V20A2,2 0 0,1 47,18H51C52.11,18 53,18.9 53,20V23H58V57H18M21,54H55V31H21V54M48.5,20A1.5,1.5 0 0,0 47,21.5V24.5A1.5,1.5 0 0,0 48.5,26H49.5C50.34,26 51,25.33 51,24.5V21.5A1.5,1.5 0 0,0 49.5,20H48.5M26.5,20A1.5,1.5 0 0,0 25,21.5V24.5A1.5,1.5 0 0,0 26.5,26H27.5A1.5,1.5 0 0,0 29,24.5V21.5A1.5,1.5 0 0,0 27.5,20H26.5Z" />
    <Setter Property="mah:DatePickerHelper.DropDownButtonContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <!--  Modern - Calendar14  -->
          <ContentControl x:Name="PART_PackIcon" Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:TimePickerBase}}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:TimePickerBase}}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" Padding="3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding Mode=OneWay}" Style="{DynamicResource MahApps.Styles.ContentControl.PathIcon}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
    <Setter Property="mah:TextBoxHelper.ButtonTemplate" Value="{DynamicResource MahApps.Templates.Button.Chromeless}" />
    <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22" />
    <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True" />
  </Style>
  <Style BasedOn="{StaticResource MahApps.Styles.TimePickerBase}" TargetType="{x:Type mah:DateTimePicker}">
    <Setter Property="CalendarStyle" Value="{DynamicResource MahApps.Styles.Calendar.DateTimePicker}" />
    <Setter Property="IsTodayHighlighted" Value="True" />
    <Setter Property="mah:TextBoxHelper.Watermark" Value="Select a date" />
  </Style>
  <Style BasedOn="{StaticResource MahApps.Styles.TimePickerBase}" TargetType="{x:Type mah:TimePicker}">
    <Setter Property="mah:DatePickerHelper.DropDownButtonContent" Value="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z" />
    <Setter Property="mah:TextBoxHelper.Watermark" Value="Select a time" />
  </Style>
  <Style x:Key="MahApps.Styles.DropDownButton.FocusVisualStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2" StrokeThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type mah:DropDownButton}">
    <Setter Property="ArrowBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="ArrowMouseOverBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="ArrowPressedBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ButtonStyle" Value="{DynamicResource MahApps.Styles.Button.DropDown}" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource MahApps.Styles.DropDownButton.FocusVisualStyle}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="MenuStyle" Value="{DynamicResource MahApps.Styles.ContextMenu}" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:DropDownButton}">
          <Border x:Name="PART_Border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True">
            <mah:ClipBorder x:Name="PART_ClipBorder" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Button x:Name="PART_Button" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Foreground="{TemplateBinding Foreground}" RenderOptions.ClearTypeHint="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(RenderOptions.ClearTypeHint), Mode=OneWay}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{TemplateBinding ButtonStyle}">
                <DockPanel x:Name="PART_Content" Focusable="False" LastChildFill="True">
                  <!--  Material - ChevronDown  -->
                  <ContentControl x:Name="PART_Arrow" Width="9" Height="9" Margin="0 0 3 0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" DockPanel.Dock="Right" Foreground="{TemplateBinding ArrowBrush}" Style="{DynamicResource MahApps.Styles.ContentControl.PathIcon}" Visibility="{TemplateBinding ArrowVisibility}" />
                  <StackPanel x:Name="PART_ContentOrientation" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" Orientation="Horizontal">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Icon}" ContentTemplate="{TemplateBinding IconTemplate}" Focusable="False" RecognizesAccessKey="True" UseLayoutRounding="False" />
                    <mah:ContentControlEx x:Name="PART_ButtonContent" Padding="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
                  </StackPanel>
                </DockPanel>
                <Button.ContextMenu>
                  <ContextMenu x:Name="PART_Menu" MinWidth="{TemplateBinding ActualWidth}" DisplayMemberPath="{TemplateBinding DisplayMemberPath}" GroupStyleSelector="{TemplateBinding GroupStyleSelector}" IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}" ItemStringFormat="{TemplateBinding ItemStringFormat}" ItemTemplate="{TemplateBinding ItemTemplate}" ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}" ItemsPanel="{TemplateBinding ItemsPanel}" ItemsSource="{TemplateBinding ItemsSource}" Placement="Bottom" StaysOpen="False" Style="{TemplateBinding MenuStyle}" UseLayoutRounding="False" />
                </Button.ContextMenu>
              </Button>
            </mah:ClipBorder>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Content" Value="{x:Null}">
              <Setter TargetName="PART_ButtonContent" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
              <Setter TargetName="PART_Arrow" Property="DockPanel.Dock" Value="Bottom" />
              <Setter TargetName="PART_Arrow" Property="Margin" Value="0 0 0 3" />
              <Setter TargetName="PART_ContentOrientation" Property="Orientation" Value="Vertical" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition SourceName="PART_Button" Property="IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Arrow" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowMouseOverBrush, Mode=OneWay}" />
            </MultiTrigger>
            <Trigger SourceName="PART_Button" Property="IsPressed" Value="True">
              <Setter TargetName="PART_Arrow" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPressedBrush, Mode=OneWay}" />
            </Trigger>
            <Trigger SourceName="PART_Button" Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".55" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value=".55" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button.FlipView.Navigation" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Focusable" Value="True" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="Height" Value="30" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="Opacity" Value="0.4" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Width" Value="50" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Opacity" Value="0.8" />
      </Trigger>
      <DataTrigger Binding="{Binding NavigationButtonsPosition, FallbackValue={x:Static mah:NavigationButtonsPosition.Inside}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:FlipView}}}" Value="{x:Static mah:NavigationButtonsPosition.Inside}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.ListBoxItem.FlipView.Index" TargetType="ListBoxItem">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Margin" Value="10" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Ellipse x:Name="Bd" Width="{DynamicResource FlipViewIndexItemSize}" Height="{DynamicResource FlipViewIndexItemSize}" Margin="{TemplateBinding Padding}" Fill="{DynamicResource MahApps.Brushes.SystemControlTransparent}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Stroke="{DynamicResource MahApps.Brushes.SystemControlForegroundBaseMedium}" StrokeThickness="1" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Bd" Property="Fill" Value="{DynamicResource MahApps.Brushes.SystemControlHighlightListAccentMedium}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Cursor" Value="Hand" />
              <Setter TargetName="Bd" Property="Fill" Value="{DynamicResource MahApps.Brushes.SystemControlHighlightListAccentHigh}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.FlipView" TargetType="{x:Type mah:FlipView}">
    <Setter Property="BannerBackground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="BannerForeground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BannerOpacity" Value="0.8" />
    <Setter Property="ButtonBackContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Path Width="16" Height="18" Data="F1 M 22.6563,23.75L 24.6563,25.75L 31.9063,32.75L 25.4063,32.75L 15.9063,23.75L 25.4063,14.75L 31.9063,14.75L 24.6563,21.75L 22.6563,23.75 Z " Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" Stretch="Fill" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ButtonDownContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Path Width="18" Height="16" Data="F1 M 23.9063,25L 25.9063,23L 32.9063,15.75L 32.9063,22.25L 23.9062,31.75L 14.9063,22.25L 14.9063,15.75L 21.9063,23L 23.9063,25 Z " Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" Stretch="Fill" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ButtonForwardContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Path Width="16" Height="18" Data="F1 M 25.1563,23.75L 23.1563,21.75L 15.9063,14.75L 22.4063,14.75L 31.9063,23.75L 22.4063,32.75L 15.9063,32.75L 23.1563,25.75L 25.1563,23.75 Z " Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" Stretch="Fill" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ButtonUpContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Path Width="18" Height="16" Data="F1 M 23.9063,22.5L 21.9063,24.5L 14.9063,31.75L 14.9063,25.25L 23.9063,15.75L 32.9063,25.25L 32.9063,31.75L 25.9063,24.5L 23.9063,22.5 Z " Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" Stretch="Fill" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IndexItemContainerStyle" Value="{DynamicResource MahApps.Styles.ListBoxItem.FlipView.Index}" />
    <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
    <Setter Property="MinHeight" Value="100" />
    <Setter Property="MinWidth" Value="100" />
    <Setter Property="NavigationButtonStyle" Value="{DynamicResource MahApps.Styles.Button.FlipView.Navigation}" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.FlipView}" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <DataTemplate x:Key="MahApps.Templates.Flyout.Header" x:Shared="False">
    <DockPanel x:Name="dpHeader" VerticalAlignment="Center" LastChildFill="True">
      <Button x:Name="PART_BackButton" Width="34" Height="34" Margin="2 4 2 2" VerticalAlignment="Bottom" DockPanel.Dock="Left" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:Flyout}}, Path=Foreground}" IsCancel="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:Flyout}}, Path=CloseButtonIsCancel}" Style="{DynamicResource MahApps.Styles.Button.Circle}" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:Flyout}}, Path=CloseButtonVisibility}">
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="Click">
            <actions:CloseFlyoutAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:Flyout}}, Path=CloseCommand, Mode=OneWay}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:Flyout}}, Path=CloseCommandParameter, Mode=OneWay}" />
          </i:EventTrigger>
        </i:Interaction.Triggers>
        <ContentControl Width="20" Height="20" Content="M19,34V42H43.75L33.75,52H44.25L58.25,38L44.25,24H33.75L43.75,34H19Z" FlowDirection="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:Flyout}}, Path=FlowDirection}" Style="{DynamicResource MahApps.Styles.ContentControl.PathIcon}" />
      </Button>
      <ContentControl x:Name="PART_BackHeaderText" Margin="15 0 0 0" VerticalAlignment="Center" Content="{Binding}" Focusable="False" IsTabStop="False" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:Flyout}}, Path=TitleVisibility}" />
    </DockPanel>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource AncestorType={x:Type mah:Flyout}}}" Value="Left">
        <Setter TargetName="PART_BackButton" Property="DockPanel.Dock" Value="Right" />
        <Setter TargetName="PART_BackButton" Property="LayoutTransform">
          <Setter.Value>
            <ScaleTransform ScaleX="-1" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="PART_BackHeaderText" Property="HorizontalAlignment" Value="Right" />
        <Setter TargetName="PART_BackHeaderText" Property="Margin" Value="0 0 15 0" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource AncestorType={x:Type mah:Flyout}}}" Value="Top">
        <Setter TargetName="PART_BackButton" Property="LayoutTransform">
          <Setter.Value>
            <RotateTransform Angle="-90" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger Binding="{Binding Position, RelativeSource={RelativeSource AncestorType={x:Type mah:Flyout}}}" Value="Bottom">
        <Setter TargetName="PART_BackButton" Property="LayoutTransform">
          <Setter.Value>
            <RotateTransform Angle="90" />
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <Style x:Key="MahApps.Styles.Flyout" TargetType="{x:Type mah:Flyout}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Flyout.Background}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Flyout.Foreground}" />
    <Setter Property="HeaderTemplate" Value="{StaticResource MahApps.Templates.Flyout.Header}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.Flyout}" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Visibility" Value="Hidden" />
    <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="{DynamicResource MahApps.Font.Size.Flyout.Header}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderMargin" Value="10" />
    <Style.Triggers>
      <Trigger Property="Position" Value="Right">
        <Setter Property="mah:HeaderedControlHelper.HeaderMargin" Value="10 25 10 10" />
      </Trigger>
      <Trigger Property="Position" Value="Left">
        <Setter Property="mah:HeaderedControlHelper.HeaderMargin" Value="10 25 10 10" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type mah:FontIcon}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.SymbolTheme}" />
    <Setter Property="FontSize" Value="20" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:FontIcon}">
          <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Style="{x:Null}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Glyph}" TextAlignment="Center" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TextOptions.TextRenderingMode" Value="Aliased" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="MahApps.Styles.Button.Hamburger" BasedOn="{StaticResource MahApps.Styles.Button.Chromeless}" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid Background="Transparent">
            <Grid x:Name="PART_Background" Background="{TemplateBinding Background}" Opacity="0" />
            <ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.75" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="PART_Background" Property="Opacity" Value="0.3" />
              <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="PART_Background" Property="Opacity" Value="0" />
              <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.75" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="MahApps.Styles.ScrollViewer.Hamburger" BasedOn="{StaticResource MahApps.Styles.ScrollViewer}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="leftColumn" Width="*" />
              <ColumnDefinition x:Name="rightColumn" Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Right" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Opacity="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" VerticalAlignment="Bottom" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Opacity="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide" Value="True">
              <Setter TargetName="PART_HorizontalScrollBar" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_VerticalScrollBar" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="leftColumn" Property="Width" Value="Auto" />
              <Setter TargetName="rightColumn" Property="Width" Value="*" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsVisible}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ComputedVerticalScrollBarVisibility}" Value="Visible" />
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:SplitView}}, Path=IsPaneOpen}" Value="True" />
              </MultiDataTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation EasingFunction="{StaticResource ScrollBarEaseInOut}" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                    <DoubleAnimation EasingFunction="{StaticResource ScrollBarEaseInOut}" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                  </Storyboard>
                </BeginStoryboard>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation BeginTime="0:0:1" EasingFunction="{StaticResource ScrollBarEaseInOut}" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                    <DoubleAnimation BeginTime="0:0:1" EasingFunction="{StaticResource ScrollBarEaseInOut}" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </TriggerBase.ExitActions>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.ListBoxItem.HamburgerBase" BasedOn="{StaticResource MahApps.Styles.ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=Foreground, Mode=OneWay}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="MahApps.Styles.ListBoxItem.HamburgerMenuItem" BasedOn="{StaticResource MahApps.Styles.ListBoxItem.HamburgerBase}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="FocusVisualStyle" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=ItemFocusVisualStyle, Mode=OneWay, FallbackValue={x:Null}}" />
    <Setter Property="IsTabStop" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=IsTabStop, Mode=OneWay, FallbackValue=True}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid x:Name="RootGrid" Background="Transparent" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid Margin="{TemplateBinding BorderThickness}">
              <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Rectangle x:Name="SelectionIndicator" Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}" Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}" Fill="{TemplateBinding Foreground}" Focusable="False" Opacity="0.0" />
              </Grid>
              <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
            <Trigger Property="mah:ItemHelper.IsMouseLeftButtonPressed" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="mah:ItemHelper.IsMouseRightButtonPressed" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
              <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsEnabled" Value="False" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
              <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:ItemHelper.HoverForegroundBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=Foreground, Mode=OneWay}" />
    <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
  </Style>
  <Style x:Key="MahApps.Styles.ListBoxItem.HamburgerMenuItem.CreatorsUpdate" BasedOn="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
    <Setter Property="mah:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
    <Setter Property="mah:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource MahApps.Brushes.Gray}" />
    <Setter Property="mah:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
    <Setter Property="mah:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.Gray}" />
    <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
    <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
    <Setter Property="mah:ItemHelper.HoverSelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
    <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
    <Setter Property="mah:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
  </Style>
  <Style x:Key="MahApps.Styles.TextBlock.HamburgerMenuHeader" BasedOn="{StaticResource MahApps.Styles.TextBlock}" TargetType="{x:Type TextBlock}">
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="TextWrapping" Value="NoWrap" />
  </Style>
  <Style x:Key="MahApps.Styles.ListBoxItem.HamburgerMenuHeader" BasedOn="{StaticResource MahApps.Styles.ListBoxItem.HamburgerBase}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Padding" Value="8 8 0 8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <TextBlock x:Name="PART_HeaderText" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Style="{DynamicResource MahApps.Styles.TextBlock.HamburgerMenuHeader}" Text="{Binding Label}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsPaneOpen, RelativeSource={RelativeSource AncestorType=mah:HamburgerMenu}}" Value="False">
              <Setter TargetName="PART_HeaderText" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.ListBoxItem.HamburgerMenuSeparator" BasedOn="{StaticResource MahApps.Styles.ListBoxItem.HamburgerBase}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Padding" Value="0 5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
            <Separator Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.ListBox.HamburgerMenu" BasedOn="{StaticResource MahApps.Styles.ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ScrollViewer Padding="{TemplateBinding Padding}" mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide="{TemplateBinding mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{StaticResource MahApps.Styles.ScrollViewer.Hamburger}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsGrouping" Value="true" />
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="False" />
  </Style>
  <Style x:Key="MahApps.Styles.HamburgerMenuListBox" BasedOn="{StaticResource MahApps.Styles.ListBox.HamburgerMenu}" TargetType="{x:Type mah:HamburgerMenuListBox}" />
  <ControlTemplate x:Key="MahApps.Templates.HamburgerMenu" TargetType="{x:Type mah:HamburgerMenu}">
    <Grid>
      <mah:SplitView x:Name="MainSplitView" CanResizeOpenPane="{TemplateBinding CanResizeOpenPane}" CompactPaneLength="{TemplateBinding CompactPaneLength}" DisplayMode="{TemplateBinding DisplayMode}" IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" MaximumOpenPaneLength="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaximumOpenPaneLength}" MinimumOpenPaneLength="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MinimumOpenPaneLength}" OpenPaneLength="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=OpenPaneLength, Mode=TwoWay}" PaneBackground="{TemplateBinding PaneBackground}" PaneForeground="{TemplateBinding PaneForeground}" PanePlacement="{TemplateBinding PanePlacement}" ResizeThumbStyle="{TemplateBinding ResizeThumbStyle}">
        <mah:SplitView.Pane>
          <Grid x:Name="PaneGrid" Margin="{TemplateBinding PaneMargin}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel x:Name="PaneHeader" Grid.Row="0" Margin="{TemplateBinding PaneHeaderMargin}" LastChildFill="True">
              <Button x:Name="HamburgerButton" Width="{TemplateBinding HamburgerWidth}" Height="{TemplateBinding HamburgerHeight}" Padding="{TemplateBinding HamburgerMargin}" AutomationProperties.AutomationId="HamburgerButton" AutomationProperties.HelpText="{TemplateBinding HamburgerButtonHelpText}" AutomationProperties.Name="{TemplateBinding HamburgerButtonName}" ContentTemplate="{TemplateBinding HamburgerButtonTemplate}" DockPanel.Dock="Left" Foreground="{TemplateBinding PaneForeground}" IsTabStop="{TemplateBinding IsTabStop}" Style="{TemplateBinding HamburgerButtonStyle}" TabIndex="0" Visibility="{TemplateBinding HamburgerVisibility}" />
              <ContentControl x:Name="PaneHeaderContent" ContentTemplate="{TemplateBinding HamburgerMenuHeaderTemplate}" IsTabStop="False" />
            </DockPanel>
            <mah:HamburgerMenuListBox x:Name="ButtonsListView" Grid.Row="1" Width="{TemplateBinding OpenPaneLength}" mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide="{TemplateBinding VerticalScrollBarOnLeftSide}" AutomationProperties.Name="Menu items" Foreground="{TemplateBinding PaneForeground}" IsTextSearchEnabled="False" ItemContainerStyleSelector="{StaticResource HamburgerMenuItemStyleSelector}" ItemTemplate="{TemplateBinding ItemTemplate}" ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}" ItemsSource="{TemplateBinding ItemsSource}" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIndex, Mode=TwoWay}" SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem, Mode=TwoWay}" SelectionMode="Single" TabIndex="1" />
            <mah:HamburgerMenuListBox x:Name="OptionsListView" Grid.Row="2" Width="{TemplateBinding OpenPaneLength}" Margin="0 20 0 0" VerticalAlignment="Bottom" AutomationProperties.Name="Option items" Foreground="{TemplateBinding PaneForeground}" IsTextSearchEnabled="False" ItemContainerStyleSelector="{StaticResource HamburgerMenuItemOptionsStyleSelector}" ItemTemplate="{TemplateBinding OptionsItemTemplate}" ItemTemplateSelector="{TemplateBinding OptionsItemTemplateSelector}" ItemsSource="{TemplateBinding OptionsItemsSource}" ScrollViewer.VerticalScrollBarVisibility="Disabled" SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedOptionsIndex, Mode=TwoWay}" SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedOptionsItem, Mode=TwoWay}" SelectionMode="Single" TabIndex="2" />
          </Grid>
        </mah:SplitView.Pane>
        <mah:TransitioningContentControl x:Name="ContentPart" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.Name="Content" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RestartTransitionOnContentChange="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Transition="{TemplateBinding ContentTransition}" />
      </mah:SplitView>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="PanePlacement" Value="Right">
        <Setter TargetName="HamburgerButton" Property="DockPanel.Dock" Value="Right" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type mah:HotKeyBox}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:HotKeyBox}">
          <TextBox x:Name="PART_TextBox" MinHeight="{TemplateBinding MinHeight}" Margin="0" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" mah:ControlsHelper.FocusBorderBrush="{TemplateBinding mah:ControlsHelper.FocusBorderBrush}" mah:ControlsHelper.MouseOverBorderBrush="{TemplateBinding mah:ControlsHelper.MouseOverBorderBrush}" mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}" mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" mah:TextBoxHelper.ButtonsAlignment="{TemplateBinding mah:TextBoxHelper.ButtonsAlignment}" mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}" mah:TextBoxHelper.IsWaitingForData="{TemplateBinding mah:TextBoxHelper.IsWaitingForData}" mah:TextBoxHelper.SelectAllOnFocus="{TemplateBinding mah:TextBoxHelper.SelectAllOnFocus}" mah:TextBoxHelper.UseFloatingWatermark="{TemplateBinding mah:TextBoxHelper.UseFloatingWatermark}" mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}" mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContextMenu="{TemplateBinding ContextMenu}" Focusable="{TemplateBinding Focusable}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="{TemplateBinding IsTabStop}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Text="{TemplateBinding Text}" Validation.ErrorTemplate="{TemplateBinding Validation.ErrorTemplate}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
          <ControlTemplate.Triggers>
            <Trigger Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal">
              <Setter TargetName="PART_TextBox" Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Mode=OneWay}" />
            </Trigger>
            <Trigger Property="mah:ControlsHelper.ContentCharacterCasing" Value="Upper">
              <Setter TargetName="PART_TextBox" Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Converter={converters:ToUpperConverter}, Mode=OneWay}" />
            </Trigger>
            <Trigger Property="mah:ControlsHelper.ContentCharacterCasing" Value="Lower">
              <Setter TargetName="PART_TextBox" Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Converter={converters:ToLowerConverter}, Mode=OneWay}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Upper" />
    <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}" />
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}" />
    <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
  </Style>
  <Style BasedOn="{StaticResource MahApps.Styles.TabControl}" TargetType="{x:Type mah:MetroAnimatedSingleRowTabControl}">
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroAnimatedSingleRowTabControl.Horizontal}" />
    <Setter Property="mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled" Value="True" />
    <Setter Property="mah:TabControlHelper.Transition" Value="Left" />
    <Style.Triggers>
      <Trigger Property="TabStripPlacement" Value="Top">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroAnimatedSingleRowTabControl.Horizontal}" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Bottom">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroAnimatedSingleRowTabControl.Horizontal}" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Left">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroAnimatedSingleRowTabControl.Vertical}" />
      </Trigger>
      <Trigger Property="TabStripPlacement" Value="Right">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroAnimatedSingleRowTabControl.Vertical}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource MahApps.Styles.TabControl}" TargetType="{x:Type mah:MetroAnimatedTabControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:MetroAnimatedTabControl}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0" />
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto" />
              <RowDefinition x:Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <Grid x:Name="HeaderPanelGrid" Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding TabStripMargin}" Panel.ZIndex="1">
              <mah:Underline x:Name="Underline" Background="Transparent" BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}" LineThickness="1" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
              <TabPanel x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
            </Grid>
            <Border x:Name="ContentPanel" Grid.Row="1" Grid.Column="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <mah:TransitioningContentControl behaviors:ReloadBehavior.OnSelectedTabChanged="True" RestartTransitionOnContentChange="True" Transition="{TemplateBinding mah:TabControlHelper.Transition}" UseLayoutRounding="True">
                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
              </mah:TransitioningContentControl>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
              <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="1" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="1" />
              <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:TabControlHelper.Transition" Value="Left" />
  </Style>
  <Style x:Key="MahApps.Styles.MetroHeader" TargetType="{x:Type mah:MetroHeader}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:MetroHeader}">
          <Grid Background="Transparent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="{TemplateBinding mah:HeaderedControlHelper.HeaderBackground}">
              <mah:ContentControlEx x:Name="PART_Header" Margin="{TemplateBinding mah:HeaderedControlHelper.HeaderMargin}" HorizontalAlignment="{TemplateBinding mah:HeaderedControlHelper.HeaderHorizontalContentAlignment}" VerticalAlignment="{TemplateBinding mah:HeaderedControlHelper.HeaderVerticalContentAlignment}" Content="{TemplateBinding Header}" ContentCharacterCasing="{TemplateBinding mah:ControlsHelper.ContentCharacterCasing}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="{TemplateBinding mah:HeaderedControlHelper.HeaderFontFamily}" FontSize="{TemplateBinding mah:HeaderedControlHelper.HeaderFontSize}" FontStretch="{TemplateBinding mah:HeaderedControlHelper.HeaderFontStretch}" FontWeight="{TemplateBinding mah:HeaderedControlHelper.HeaderFontWeight}" Foreground="{TemplateBinding mah:HeaderedControlHelper.HeaderForeground}" IsTabStop="False" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <Grid Grid.Row="1" Background="{TemplateBinding Background}">
              <ContentPresenter x:Name="PART_Content" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentSource="Content" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="mah:HeaderedControlHelper.HeaderBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background, Mode=OneWay}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="{DynamicResource MahApps.Font.Size.Default}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderForeground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Mode=OneWay}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderMargin" Value="0 0 0 2" />
  </Style>
  <Style x:Key="MahApps.Styles.MetroProgressBar" TargetType="{x:Type mah:MetroProgressBar}">
    <Setter Property="Background" Value="#1FFFFFFF" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Maximum" Value="100" />
    <Setter Property="MinHeight" Value="{StaticResource MahApps.Sizes.ProgressBar.MinHeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:MetroProgressBar}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="IndeterminateStoryboard" RepeatBehavior="Forever">
              <DoubleAnimation x:Name="MainDoubleAnim" Storyboard.TargetName="EllipseGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:3.917" />
              <DoubleAnimationUsingKeyFrames x:Name="E1Anim" Storyboard.TargetName="E1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1" />
                <EasingDoubleKeyFrame KeyTime="0:0:2" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames x:Name="E2Anim" Storyboard.TargetName="E2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.167" />
                <EasingDoubleKeyFrame KeyTime="0:0:2.167" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.167" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames x:Name="E3Anim" Storyboard.TargetName="E3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.333" />
                <EasingDoubleKeyFrame KeyTime="0:0:2.333" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.333" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames x:Name="E4Anim" Storyboard.TargetName="E4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.5" />
                <EasingDoubleKeyFrame KeyTime="0:0:2.5" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.5" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames x:Name="E5Anim" Storyboard.TargetName="E5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.667" />
                <EasingDoubleKeyFrame KeyTime="0:0:2.667" />
                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.667" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimation Storyboard.TargetName="EllipseGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
              <DoubleAnimation Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E1" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E2" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E3" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E4" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E5" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid x:Name="ContainingGrid">
            <Grid x:Name="EllipseClip" ClipToBounds="True">
              <Grid x:Name="EllipseGrid" Opacity="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RenderTransform>
                  <TranslateTransform />
                </Grid.RenderTransform>
                <Border x:Name="B1" Grid.Column="8" RenderTransformOrigin="0.5,0.5">
                  <Border.RenderTransform>
                    <TranslateTransform />
                  </Border.RenderTransform>
                  <Ellipse x:Name="E1" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                      <TranslateTransform />
                    </Ellipse.RenderTransform>
                  </Ellipse>
                </Border>
                <Rectangle Grid.Column="7" Width="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <Border x:Name="B2" Grid.Column="6" RenderTransformOrigin="0.5,0.5">
                  <Border.RenderTransform>
                    <TranslateTransform />
                  </Border.RenderTransform>
                  <Ellipse x:Name="E2" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                      <TranslateTransform />
                    </Ellipse.RenderTransform>
                  </Ellipse>
                </Border>
                <Rectangle Grid.Column="5" Width="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <Border x:Name="B3" Grid.Column="4" RenderTransformOrigin="0.5,0.5">
                  <Border.RenderTransform>
                    <TranslateTransform />
                  </Border.RenderTransform>
                  <Ellipse x:Name="E3" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                      <TranslateTransform />
                    </Ellipse.RenderTransform>
                  </Ellipse>
                </Border>
                <Rectangle Grid.Column="3" Width="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <Border x:Name="B4" Grid.Column="2" RenderTransformOrigin="0.5,0.5">
                  <Border.RenderTransform>
                    <TranslateTransform />
                  </Border.RenderTransform>
                  <Ellipse x:Name="E4" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                      <TranslateTransform />
                    </Ellipse.RenderTransform>
                  </Ellipse>
                </Border>
                <Rectangle Grid.Column="1" Width="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <Border x:Name="B5" Grid.Column="0" RenderTransformOrigin="0.5,0.5">
                  <Border.RenderTransform>
                    <TranslateTransform />
                  </Border.RenderTransform>
                  <Ellipse x:Name="E5" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                      <TranslateTransform />
                    </Ellipse.RenderTransform>
                  </Ellipse>
                </Border>
              </Grid>
            </Grid>
            <Grid x:Name="DeterminateRoot" Margin="{TemplateBinding Padding}" Opacity="0">
              <Border x:Name="PART_Track" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
              <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" Fill="{TemplateBinding Foreground}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Determinate" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsIndeterminate" Value="False">
              <Setter TargetName="DeterminateRoot" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
              <Setter Property="MinHeight" Value="0" />
              <Setter Property="MinWidth" Value="{StaticResource MahApps.Sizes.ProgressBar.MinHeight}" />
              <Setter Property="UseLayoutRounding" Value="True" />
              <Setter TargetName="ContainingGrid" Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type mah:MetroTabControl}" BasedOn="{StaticResource MahApps.Styles.TabControl}" TargetType="{x:Type mah:MetroTabControl}">
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroTabControl.DoNotKeepVisualTreeInMemory}" />
    <Style.Triggers>
      <Trigger Property="KeepVisualTreeInMemoryWhenChangingTabs" Value="True">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroTabControl.KeepVisualTreeInMemory}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource MahApps.Styles.TabItem}" TargetType="{x:Type mah:MetroTabItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:MetroTabItem}">
          <Border x:Name="Border" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" UseLayoutRounding="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="PART_ContentLeftCol" Width="Auto" />
                <ColumnDefinition x:Name="PART_ContentRightCol" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="PART_ContentTopRow" Height="Auto" />
                <RowDefinition x:Name="PART_ContentBottomRow" Height="Auto" />
              </Grid.RowDefinitions>
              <Grid x:Name="PART_ContentSite" Grid.Row="0" Grid.Column="0" UseLayoutRounding="False">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <mah:ContentControlEx x:Name="ContentSite" Grid.Column="0" Padding="{TemplateBinding Padding}" Content="{TemplateBinding Header}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="{TemplateBinding mah:HeaderedControlHelper.HeaderFontFamily}" FontSize="{TemplateBinding mah:HeaderedControlHelper.HeaderFontSize}" FontStretch="{TemplateBinding mah:HeaderedControlHelper.HeaderFontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding mah:HeaderedControlHelper.HeaderFontWeight}" Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Button x:Name="PART_CloseButton" Grid.Column="1" Width="{TemplateBinding mah:HeaderedControlHelper.HeaderFontSize, Converter={StaticResource MetroTabItemCloseButtonWidthConverter}}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width, Mode=OneWay}" Margin="{TemplateBinding CloseButtonMargin}" VerticalAlignment="Top" Background="{DynamicResource MahApps.Brushes.Gray}" IsTabStop="False" Style="{DynamicResource MahApps.Styles.Button.Chromeless}" Visibility="Collapsed">
                  <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                      <actions:CloseTabItemAction Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CloseTabCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CloseTabCommandParameter}" />
                    </i:EventTrigger>
                  </i:Interaction.Triggers>
                  <Button.Resources>
                    <Canvas x:Key="tabitem_close" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                      <Path Canvas.Left="22.1666" Canvas.Top="22.1667" Width="31.6666" Height="31.6667" Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z " Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" Stretch="Fill" />
                    </Canvas>
                  </Button.Resources>
                  <Button.OpacityMask>
                    <VisualBrush Stretch="Uniform" Visual="{StaticResource tabitem_close}" />
                  </Button.OpacityMask>
                </Button>
              </Grid>
              <mah:Underline x:Name="Underline" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineBrush), Mode=OneWay}" LineExtent="3" LineThickness="2" Placement="Bottom" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="CloseButtonEnabled" Value="True">
              <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="Auto" />
              <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="*" />
              <Setter TargetName="PART_ContentRightCol" Property="Width" Value="Auto" />
              <Setter TargetName="PART_ContentSite" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_ContentSite" Property="Grid.Row" Value="0" />
              <Setter TargetName="PART_ContentTopRow" Property="Height" Value="*" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Top">
              <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="Auto" />
              <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="*" />
              <Setter TargetName="PART_ContentRightCol" Property="Width" Value="Auto" />
              <Setter TargetName="PART_ContentSite" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_ContentSite" Property="Grid.Row" Value="0" />
              <Setter TargetName="PART_ContentTopRow" Property="Height" Value="*" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="Auto" />
              <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="Auto" />
              <Setter TargetName="PART_ContentRightCol" Property="Width" Value="*" />
              <Setter TargetName="PART_ContentSite" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_ContentSite" Property="Grid.Row" Value="0" />
              <Setter TargetName="PART_ContentTopRow" Property="Height" Value="*" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="*" />
              <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="*" />
              <Setter TargetName="PART_ContentRightCol" Property="Width" Value="Auto" />
              <Setter TargetName="PART_ContentSite" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_ContentSite" Property="Grid.Row" Value="1" />
              <Setter TargetName="PART_ContentTopRow" Property="Height" Value="Auto" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="None">
              <Setter TargetName="Underline" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem">
              <Setter TargetName="Underline" Property="LineThickness" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel">
              <Setter TargetName="Underline" Property="LineExtent" Value="4" />
              <Setter TargetName="Underline" Property="LineThickness" Value="1" />
            </DataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="CloseButtonEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="CloseButtonEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
              <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineSelectedBrush), Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Gray}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="3" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="2" />
            </MultiDataTrigger>
            <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Gray.MouseOver}" />
              <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineMouseOverBrush), Mode=OneWay}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                <Condition SourceName="PART_CloseButton" Property="IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_CloseButton" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray.MouseOver}" />
            </MultiTrigger>
            <Trigger SourceName="PART_CloseButton" Property="IsMouseOver" Value="True">
              <Setter TargetName="PART_CloseButton" Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="2" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="2" />
            </MultiDataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="ContentSite" Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
              <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineMouseOverSelectedBrush), Mode=OneWay}" />
            </MultiTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="3" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="2" />
            </MultiDataTrigger>
            <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Gray.MouseOver}" />
              <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineMouseOverBrush), Mode=OneWay}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="2" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                <Condition Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="LineThickness" Value="2" />
            </MultiDataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
              <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineMouseOverSelectedBrush), Mode=OneWay}" />
            </MultiTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Converter={x:Static converters:IsNullConverter.Instance}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Converter={x:Static converters:IsNullConverter.Instance}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Converter={x:Static converters:IsNullConverter.Instance}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Converter={x:Static converters:IsNullConverter.Instance}}" Value="True" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Top" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
              <Setter TargetName="Underline" Property="Placement" Value="Left" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
              <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
              <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
              <Setter TargetName="Underline" Property="Placement" Value="Right" />
              <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type mah:NumericUpDown}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="HorizontalContentAlignment" Value="Right" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="MinWidth" Value="62" />
    <Setter Property="Padding" Value="4" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:NumericUpDown}">
          <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Border x:Name="Base" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid Margin="{TemplateBinding BorderThickness}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="PART_LeftColumn" Width="*" />
                <ColumnDefinition x:Name="PART_MiddleColumn" Width="Auto" />
                <ColumnDefinition x:Name="PART_RightColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <TextBox x:Name="PART_TextBox" Grid.Column="0" MinWidth="20" MinHeight="0" Margin="0" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" mah:ControlsHelper.DisabledVisualElementVisibility="Collapsed" mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}" mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" mah:TextBoxHelper.ButtonsAlignment="{TemplateBinding ButtonsAlignment}" mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}" mah:TextBoxHelper.HasText="{TemplateBinding mah:TextBoxHelper.HasText}" mah:TextBoxHelper.SelectAllOnFocus="{TemplateBinding mah:TextBoxHelper.SelectAllOnFocus}" mah:TextBoxHelper.UseFloatingWatermark="{TemplateBinding mah:TextBoxHelper.UseFloatingWatermark}" mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}" mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" Background="{x:Null}" BorderThickness="0" ContextMenu="{TemplateBinding ContextMenu}" FocusVisualStyle="{x:Null}" Focusable="{TemplateBinding Focusable}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsReadOnly="{TemplateBinding IsReadOnly}" IsTabStop="{TemplateBinding IsTabStop}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TabIndex="{TemplateBinding TabIndex}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
              <RepeatButton x:Name="PART_NumericUp" Grid.Column="1" Width="{TemplateBinding UpDownButtonsWidth}" Margin="0" Delay="{TemplateBinding Delay}" Focusable="{TemplateBinding UpDownButtonsFocusable}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Style="{DynamicResource MahApps.Styles.Button.Chromeless}">
                <Path x:Name="PolygonUp" Width="14" Height="14" Data="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z " Fill="{DynamicResource MahApps.Brushes.Gray1}" Stretch="Fill" />
              </RepeatButton>
              <RepeatButton x:Name="PART_NumericDown" Grid.Column="2" Width="{TemplateBinding UpDownButtonsWidth}" Margin="0" VerticalContentAlignment="Center" Delay="{TemplateBinding Delay}" Focusable="{TemplateBinding UpDownButtonsFocusable}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Style="{DynamicResource MahApps.Styles.Button.Chromeless}">
                <Path x:Name="PolygonDown" Width="14" Height="3" Data="F1 M 19,38L 57,38L 57,44L 19,44L 19,38 Z " Fill="{DynamicResource MahApps.Brushes.Gray1}" Stretch="Fill" />
              </RepeatButton>
            </Grid>
            <Border x:Name="DisabledVisualElement" Background="{DynamicResource MahApps.Brushes.Control.Disabled}" BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ButtonsAlignment" Value="Left" />
                <Condition Property="SwitchUpDownButtons" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_LeftColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_MiddleColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_NumericDown" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_NumericUp" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_RightColumn" Property="Width" Value="*" />
              <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="2" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ButtonsAlignment" Value="Left" />
                <Condition Property="SwitchUpDownButtons" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_LeftColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_MiddleColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_NumericDown" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_NumericUp" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_RightColumn" Property="Width" Value="*" />
              <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="2" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ButtonsAlignment" Value="Opposite" />
                <Condition Property="SwitchUpDownButtons" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_LeftColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_MiddleColumn" Property="Width" Value="*" />
              <Setter TargetName="PART_NumericDown" Property="Grid.Column" Value="2" />
              <Setter TargetName="PART_NumericUp" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_RightColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ButtonsAlignment" Value="Opposite" />
                <Condition Property="SwitchUpDownButtons" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_LeftColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_MiddleColumn" Property="Width" Value="*" />
              <Setter TargetName="PART_NumericDown" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_NumericUp" Property="Grid.Column" Value="2" />
              <Setter TargetName="PART_RightColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ButtonsAlignment" Value="Right" />
                <Condition Property="SwitchUpDownButtons" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_LeftColumn" Property="Width" Value="*" />
              <Setter TargetName="PART_MiddleColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_NumericDown" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_NumericUp" Property="Grid.Column" Value="2" />
              <Setter TargetName="PART_RightColumn" Property="Width" Value="Auto" />
              <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="0" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="InterceptArrowKeys" Value="False" />
              <Setter Property="InterceptManualEnter" Value="False" />
              <Setter Property="InterceptMouseWheel" Value="False" />
              <Setter TargetName="PART_NumericDown" Property="IsEnabled" Value="False" />
              <Setter TargetName="PART_NumericUp" Property="IsEnabled" Value="False" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsReadOnly" Value="False" />
                <Condition Property="InterceptManualEnter" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
            </MultiTrigger>
            <Trigger SourceName="PART_NumericUp" Property="IsMouseOver" Value="True">
              <Setter TargetName="PART_NumericUp" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
              <Setter TargetName="PolygonUp" Property="Fill" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger SourceName="PART_NumericUp" Property="IsPressed" Value="True">
              <Setter TargetName="PART_NumericUp" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
              <Setter TargetName="PolygonUp" Property="Fill" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger SourceName="PART_NumericDown" Property="IsMouseOver" Value="True">
              <Setter TargetName="PART_NumericDown" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
              <Setter TargetName="PolygonDown" Property="Fill" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger SourceName="PART_NumericDown" Property="IsPressed" Value="True">
              <Setter TargetName="PART_NumericDown" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
              <Setter TargetName="PolygonDown" Property="Fill" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
            </Trigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
              <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
            </Trigger>
            <Trigger Property="HideUpDownButtons" Value="True">
              <Setter TargetName="PART_NumericDown" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PART_NumericUp" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TextAlignment" Value="Right" />
    <Setter Property="UpDownButtonsWidth" Value="22" />
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
    <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}" />
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}" />
    <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
    <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22" />
    <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True" />
  </Style>
  <DataTemplate x:Key="MahApps.Templates.PivotHeader">
    <TextBlock FontFamily="{DynamicResource MahApps.Fonts.Family.Header}" FontSize="{DynamicResource MahApps.Font.Size.Header}" Text="{Binding}" />
  </DataTemplate>
  <Style x:Key="MahApps.Styles.ListViewItem.Pivot" TargetType="{x:Type ListViewItem}">
    <Setter Property="Border.BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray1}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border x:Name="Bd" SnapsToDevicePixels="true">
            <Grid>
              <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              <ContentPresenter x:Name="contentPresenter" Opacity="0.35" Visibility="Collapsed" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
              <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style TargetType="{x:Type mah:Pivot}">
    <Setter Property="HeaderTemplate" Value="{StaticResource MahApps.Templates.PivotHeader}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:Pivot}">
          <Grid x:Name="root">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ContentPresenter Grid.Row="0" Content="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type mah:Pivot}}}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
            <ListView x:Name="PART_Headers" Grid.Row="1" Background="{x:Null}" BorderBrush="{x:Null}" ItemContainerStyle="{StaticResource MahApps.Styles.ListViewItem.Pivot}" ItemsSource="{Binding Items, RelativeSource={RelativeSource AncestorType={x:Type mah:Pivot}}}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" Style="{x:Null}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type mah:PivotItem}">
                  <TextBlock Margin="0 0 25 0" FontFamily="{DynamicResource MahApps.Fonts.Family.Header}" FontSize="{DynamicResource SubMahApps.Sizes.HeaderFont}" Text="{Binding Header}" />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ListView>
            <ScrollViewer x:Name="PART_Scroll" Grid.Row="2" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
              <ItemsControl x:Name="itemscontrol" Margin="0 0 250 0" ItemsSource="{Binding Items, RelativeSource={RelativeSource AncestorType={x:Type mah:Pivot}}}">
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
              </ItemsControl>
            </ScrollViewer>
            <mah:ScrollViewerOffsetMediator x:Name="PART_Mediator" ScrollViewer="{Binding ElementName=PART_Scroll}">
              <mah:ScrollViewerOffsetMediator.Resources>
                <Storyboard x:Key="Storyboard1">
                  <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Mediator" Storyboard.TargetProperty="HorizontalOffset">
                    <EasingDoubleKeyFrame x:Name="edkf" KeyTime="0:0:0.6" Value="0">
                      <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase />
                      </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                  </DoubleAnimationUsingKeyFrames>
                </Storyboard>
              </mah:ScrollViewerOffsetMediator.Resources>
            </mah:ScrollViewerOffsetMediator>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="mah:ProgressRing">
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="Height" Value="60" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="MinHeight" Value="20" />
    <Setter Property="MinWidth" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="mah:ProgressRing">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <Style x:Key="ProgressRingEllipseStyle" TargetType="Ellipse">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Opacity" Value="0" />
                <Setter Property="VerticalAlignment" Value="Top" />
              </Style>
            </Border.Resources>
            <Grid x:Name="Ring" MaxWidth="{Binding MaxSideLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" MaxHeight="{Binding MaxSideLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{TemplateBinding Padding}" Background="Transparent" FlowDirection="LeftToRight" RenderTransformOrigin=".5,.5" Visibility="Collapsed">
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E1R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E1" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E2R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E2" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E3R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E3" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E4R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E4" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas RenderTransformOrigin=".5,.5">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E5R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E5" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
              <Canvas x:Name="SixthCircle" RenderTransformOrigin=".5,.5" Visibility="Collapsed">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="E6R" />
                </Canvas.RenderTransform>
                <Ellipse x:Name="E6" Width="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{Binding EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" Style="{StaticResource ProgressRingEllipseStyle}" />
              </Canvas>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="Large">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SixthCircle" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Small" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active">
                  <Storyboard RepeatBehavior="Forever">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ring" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="E1" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.167" Storyboard.TargetName="E2" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.334" Storyboard.TargetName="E3" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.501" Storyboard.TargetName="E4" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.668" Storyboard.TargetName="E5" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.835" Storyboard.TargetName="E6" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.21" Value="1" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.22" Value="0" />
                      <DiscreteDoubleKeyFrame KeyTime="0:0:3.47" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="E1R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-110" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="10" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="93" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="205" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="357" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="439" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="585" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.167" Storyboard.TargetName="E2R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-116" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="4" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="87" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="199" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="351" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="433" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="579" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.334" Storyboard.TargetName="E3R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-122" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="-2" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="81" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="193" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="345" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="427" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="573" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.501" Storyboard.TargetName="E4R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-128" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="-8" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="75" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="187" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="339" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="421" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="567" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.668" Storyboard.TargetName="E5R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-134" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="-14" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="69" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="181" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="331" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="415" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="561" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.835" Storyboard.TargetName="E6R" Storyboard.TargetProperty="Angle">
                      <SplineDoubleKeyFrame KeySpline="0.13,0.21,0.1,0.7" KeyTime="0" Value="-140" />
                      <SplineDoubleKeyFrame KeySpline="0.02,0.33,0.38,0.77" KeyTime="0:0:0.433" Value="-20" />
                      <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="63" />
                      <SplineDoubleKeyFrame KeySpline="0.57,0.17,0.95,0.75" KeyTime="0:0:1.617" Value="175" />
                      <SplineDoubleKeyFrame KeySpline="0,0.19,0.07,0.72" KeyTime="0:0:2.017" Value="325" />
                      <SplineDoubleKeyFrame KeyTime="0:0:2.783" Value="409" />
                      <SplineDoubleKeyFrame KeySpline="0,0,0.95,0.37" KeyTime="0:0:3.217" Value="555" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Width" Value="60" />
  </Style>
  <Style x:Key="MahApps.Styles.MetroThumb.RangeSlider.Vertical.Middle" BasedOn="{StaticResource MahApps.Styles.MetroThumb.RangeSlider.Horizontal.Middle}" TargetType="{x:Type mah:MetroThumb}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:MetroThumb}">
          <Grid Background="{TemplateBinding Background}">
            <Rectangle Width="5" Fill="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.RangeSlider.Horizontal" TargetType="{x:Type mah:RangeSlider}">
    <Grid x:Name="PART_Container" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" MinHeight="{TemplateBinding mah:RangeSlider.MinHeight}" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <TickBar x:Name="PART_TopTick" Grid.Row="0" Height="4" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Top" ReservedSpace="{DynamicResource MahApps.Sizes.Slider.HorizontalThumb.Width}" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" />
      <TickBar x:Name="PART_BottomTick" Grid.Row="2" Height="4" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Bottom" ReservedSpace="{DynamicResource MahApps.Sizes.Slider.HorizontalThumb.Width}" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" />
      <StackPanel x:Name="PART_RangeSliderContainer" Grid.Row="1" Background="Transparent" Orientation="Horizontal">
        <RepeatButton x:Name="PART_LeftEdge" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.HorizontalTrack}" />
        <mah:MetroThumb x:Name="PART_LeftThumb" Width="{DynamicResource MahApps.Sizes.Slider.HorizontalThumb.Width}" Height="{DynamicResource MahApps.Sizes.Slider.HorizontalThumb.Height}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" BorderThickness="1 0" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.Slider}" />
        <mah:MetroThumb x:Name="PART_MiddleThumb" MinWidth="{TemplateBinding MinRangeWidth}" Cursor="Hand" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillBrush)}" Style="{DynamicResource MahApps.Styles.MetroThumb.RangeSlider.Horizontal.Middle}" />
        <mah:MetroThumb x:Name="PART_RightThumb" Width="{DynamicResource MahApps.Sizes.Slider.HorizontalThumb.Width}" Height="{DynamicResource MahApps.Sizes.Slider.HorizontalThumb.Height}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" BorderThickness="1 0" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.Slider}" />
        <RepeatButton x:Name="PART_RightEdge" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.HorizontalTrack}" />
      </StackPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TickPlacement" Value="TopLeft">
        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement" Value="BottomRight">
        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement" Value="Both">
        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillHoverBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_LeftEdge" Property="IsPressed" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_RightEdge" Property="IsPressed" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_MiddleThumb" Property="IsDragging" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillDisabledBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.RangeSlider.Vertical" TargetType="{x:Type mah:RangeSlider}">
    <Grid x:Name="PART_Container" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Background="{TemplateBinding Background}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" MinWidth="{TemplateBinding mah:RangeSlider.MinWidth}" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <TickBar x:Name="PART_TopTick" Grid.Column="0" Width="4" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Left" ReservedSpace="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Height}" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" />
      <TickBar x:Name="PART_BottomTick" Grid.Column="2" Width="4" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Right" ReservedSpace="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Height}" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" />
      <StackPanel x:Name="PART_RangeSliderContainer" Grid.Column="1" Background="Transparent" Orientation="Vertical">
        <RepeatButton x:Name="PART_RightEdge" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.VerticalTrack}" />
        <mah:MetroThumb x:Name="PART_RightThumb" Width="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Width}" Height="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Height}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" BorderThickness="0 1" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.Slider}" />
        <mah:MetroThumb x:Name="PART_MiddleThumb" MinHeight="{TemplateBinding MinRangeWidth}" Cursor="Hand" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillBrush)}" Style="{DynamicResource MahApps.Styles.MetroThumb.RangeSlider.Vertical.Middle}" />
        <mah:MetroThumb x:Name="PART_LeftThumb" Width="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Width}" Height="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Height}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" BorderThickness="0 1" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.Slider}" />
        <RepeatButton x:Name="PART_LeftEdge" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.VerticalTrack}" />
      </StackPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TickPlacement" Value="TopLeft">
        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement" Value="BottomRight">
        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement" Value="Both">
        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillHoverBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_LeftEdge" Property="IsPressed" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_RightEdge" Property="IsPressed" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_MiddleThumb" Property="IsDragging" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillDisabledBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="MahApps.Styles.RangeSlider" TargetType="{x:Type mah:RangeSlider}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray1}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.RangeSlider.Horizontal}" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="mah:SliderHelper.ThumbFillBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
    <Setter Property="mah:SliderHelper.ThumbFillDisabledBrush" Value="{DynamicResource MahApps.Brushes.Gray6}" />
    <Setter Property="mah:SliderHelper.ThumbFillHoverBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
    <Setter Property="mah:SliderHelper.ThumbFillPressedBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
    <Setter Property="mah:SliderHelper.TrackFillBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="mah:SliderHelper.TrackFillDisabledBrush" Value="{DynamicResource MahApps.Brushes.Gray6}" />
    <Setter Property="mah:SliderHelper.TrackFillHoverBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="mah:SliderHelper.TrackFillPressedBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="mah:SliderHelper.TrackValueFillBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="mah:SliderHelper.TrackValueFillDisabledBrush" Value="{DynamicResource MahApps.Brushes.Gray6}" />
    <Setter Property="mah:SliderHelper.TrackValueFillHoverBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="mah:SliderHelper.TrackValueFillPressedBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.RangeSlider.Vertical}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.MetroThumb.RangeSlider.Vertical.Middle.Win10" BasedOn="{StaticResource MahApps.Styles.MetroThumb.RangeSlider.Horizontal.Middle.Win10}" TargetType="{x:Type mah:MetroThumb}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:MetroThumb}">
          <Grid Background="{TemplateBinding Background}">
            <Rectangle Width="2" Fill="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.RangeSlider.Horizontal.Win10" TargetType="{x:Type mah:RangeSlider}">
    <Grid x:Name="PART_Container" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" MinHeight="{TemplateBinding mah:RangeSlider.MinHeight}" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <TickBar x:Name="PART_TopTick" Grid.Row="0" Height="4" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Top" ReservedSpace="8" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" />
      <TickBar x:Name="PART_BottomTick" Grid.Row="2" Height="4" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Bottom" ReservedSpace="8" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" />
      <StackPanel x:Name="PART_RangeSliderContainer" Grid.Row="0" Grid.RowSpan="3" Background="Transparent" Orientation="Horizontal">
        <RepeatButton x:Name="PART_LeftEdge" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.HorizontalTrack.Win10}" />
        <mah:MetroThumb x:Name="PART_LeftThumb" Width="8" Height="24" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.Slider.Win10}" />
        <mah:MetroThumb x:Name="PART_MiddleThumb" MinWidth="{TemplateBinding MinRangeWidth}" Cursor="Hand" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillBrush)}" Style="{DynamicResource MahApps.Styles.MetroThumb.RangeSlider.Horizontal.Middle.Win10}" />
        <mah:MetroThumb x:Name="PART_RightThumb" Width="8" Height="24" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.Slider.Win10}" />
        <RepeatButton x:Name="PART_RightEdge" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.HorizontalTrack.Win10}" />
      </StackPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TickPlacement" Value="TopLeft">
        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement" Value="BottomRight">
        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement" Value="Both">
        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillHoverBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition SourceName="PART_LeftEdge" Property="IsPressed" Value="True" />
          <Condition Property="IsMoveToPointEnabled" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition SourceName="PART_RightEdge" Property="IsPressed" Value="True" />
          <Condition Property="IsMoveToPointEnabled" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </MultiTrigger>
      <Trigger SourceName="PART_LeftThumb" Property="IsDragging" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_MiddleThumb" Property="IsDragging" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_RightThumb" Property="IsDragging" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillDisabledBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.RangeSlider.Vertical.Win10" TargetType="{x:Type mah:RangeSlider}">
    <Grid x:Name="PART_Container" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Background="{TemplateBinding Background}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" MinWidth="{TemplateBinding mah:RangeSlider.MinWidth}" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <TickBar x:Name="PART_TopTick" Grid.Column="0" Width="4" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Left" ReservedSpace="8" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" />
      <TickBar x:Name="PART_BottomTick" Grid.Column="2" Width="4" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Right" ReservedSpace="8" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" />
      <StackPanel x:Name="PART_RangeSliderContainer" Grid.Column="0" Grid.ColumnSpan="3" Background="Transparent" Orientation="Vertical">
        <RepeatButton x:Name="PART_RightEdge" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.VerticalTrack.Win10}" />
        <mah:MetroThumb x:Name="PART_RightThumb" Width="24" Height="8" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.Slider.Win10}" />
        <mah:MetroThumb x:Name="PART_MiddleThumb" MinHeight="{TemplateBinding MinRangeWidth}" Cursor="Hand" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillBrush)}" Style="{DynamicResource MahApps.Styles.MetroThumb.RangeSlider.Vertical.Middle.Win10}" />
        <mah:MetroThumb x:Name="PART_LeftThumb" Width="24" Height="8" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.Slider.Win10}" />
        <RepeatButton x:Name="PART_LeftEdge" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.VerticalTrack.Win10}" />
      </StackPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TickPlacement" Value="TopLeft">
        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement" Value="BottomRight">
        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="TickPlacement" Value="Both">
        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillHoverBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition SourceName="PART_LeftEdge" Property="IsPressed" Value="True" />
          <Condition Property="IsMoveToPointEnabled" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition SourceName="PART_RightEdge" Property="IsPressed" Value="True" />
          <Condition Property="IsMoveToPointEnabled" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </MultiTrigger>
      <Trigger SourceName="PART_RightThumb" Property="IsDragging" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_MiddleThumb" Property="IsDragging" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
      </Trigger>
      <Trigger SourceName="PART_LeftThumb" Property="IsDragging" Value="True">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="PART_LeftEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" />
        <Setter TargetName="PART_LeftThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" />
        <Setter TargetName="PART_MiddleThumb" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillDisabledBrush)}" />
        <Setter TargetName="PART_RightEdge" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" />
        <Setter TargetName="PART_RightThumb" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="MahApps.Styles.RangeSlider.Win10" TargetType="{x:Type mah:RangeSlider}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsMoveToPointEnabled" Value="True" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.RangeSlider.Horizontal.Win10}" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="mah:SliderHelper.ThumbFillBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
    <Setter Property="mah:SliderHelper.ThumbFillDisabledBrush" Value="{DynamicResource MahApps.Brushes.Gray6}" />
    <Setter Property="mah:SliderHelper.ThumbFillHoverBrush" Value="{DynamicResource MahApps.Brushes.Gray1}" />
    <Setter Property="mah:SliderHelper.ThumbFillPressedBrush" Value="{DynamicResource MahApps.Brushes.Gray6}" />
    <Setter Property="mah:SliderHelper.TrackFillBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="mah:SliderHelper.TrackFillDisabledBrush" Value="{DynamicResource MahApps.Brushes.Gray6}" />
    <Setter Property="mah:SliderHelper.TrackFillHoverBrush" Value="{DynamicResource MahApps.Brushes.Gray2}" />
    <Setter Property="mah:SliderHelper.TrackFillPressedBrush" Value="{DynamicResource MahApps.Brushes.Gray3}" />
    <Setter Property="mah:SliderHelper.TrackValueFillBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
    <Setter Property="mah:SliderHelper.TrackValueFillDisabledBrush" Value="{DynamicResource MahApps.Brushes.Gray6}" />
    <Setter Property="mah:SliderHelper.TrackValueFillHoverBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
    <Setter Property="mah:SliderHelper.TrackValueFillPressedBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.RangeSlider.Vertical.Win10}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.SplitButton.Horizontal" TargetType="{x:Type mah:SplitButton}">
    <Grid UseLayoutRounding="True">
      <Border x:Name="PART_Border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
        <mah:ClipBorder x:Name="PART_ClipBorder" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
          <Grid x:Name="PART_Container" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button x:Name="PART_Button" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{TemplateBinding ButtonStyle}">
              <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Horizontal">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Icon}" ContentTemplate="{TemplateBinding IconTemplate}" Focusable="False" RecognizesAccessKey="True" UseLayoutRounding="False" />
                <mah:ContentControlEx x:Name="PART_ButtonContent" Padding="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
              </StackPanel>
            </Button>
            <Button x:Name="PART_Expander" Grid.Column="1" Width="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Foreground="{TemplateBinding ArrowBrush}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{TemplateBinding ButtonArrowStyle}">
              <!--  Material - ChevronDown  -->
              <ContentControl Width="9" Height="9" Content="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" Style="{DynamicResource MahApps.Styles.ContentControl.PathIcon}" />
            </Button>
          </Grid>
        </mah:ClipBorder>
      </Border>
      <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="Fade">
        <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
          <Border x:Name="PopupBorder" Height="Auto" HorizontalAlignment="Stretch" Background="{DynamicResource MahApps.Brushes.ThemeBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ScrollViewer Padding="1" BorderThickness="0">
              <Grid RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition SourceName="PART_Button" Property="IsEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Expander" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowMouseOverBrush, Mode=OneWay}" />
      </MultiTrigger>
      <Trigger SourceName="PART_Expander" Property="IsPressed" Value="True">
        <Setter TargetName="PART_Expander" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPressedBrush, Mode=OneWay}" />
      </Trigger>
      <Trigger SourceName="PART_Button" Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value=".55" />
        <Setter TargetName="PART_Expander" Property="IsEnabled" Value="False" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="true" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.SplitButton.Vertical" TargetType="{x:Type mah:SplitButton}">
    <Grid UseLayoutRounding="True">
      <Border x:Name="PART_Border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
        <mah:ClipBorder x:Name="PART_ClipBorder" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
          <Grid x:Name="PART_Container" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Button x:Name="PART_Button" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{TemplateBinding ButtonStyle}">
              <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Vertical">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Icon}" ContentTemplate="{TemplateBinding IconTemplate}" Focusable="False" RecognizesAccessKey="True" UseLayoutRounding="False" />
                <mah:ContentControlEx x:Name="PART_ButtonContent" Padding="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
              </StackPanel>
            </Button>
            <Button x:Name="PART_Expander" Grid.Row="1" Height="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Foreground="{TemplateBinding ArrowBrush}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{TemplateBinding ButtonArrowStyle}">
              <!--  Material - ChevronDown  -->
              <ContentControl Width="9" Height="9" Content="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" Style="{DynamicResource MahApps.Styles.ContentControl.PathIcon}" />
            </Button>
          </Grid>
        </mah:ClipBorder>
      </Border>
      <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="Fade">
        <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
          <Border x:Name="PopupBorder" Height="Auto" HorizontalAlignment="Stretch" Background="{DynamicResource MahApps.Brushes.ThemeBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ScrollViewer Padding="1" BorderThickness="0">
              <Grid RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition SourceName="PART_Button" Property="IsEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Expander" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowMouseOverBrush, Mode=OneWay}" />
      </MultiTrigger>
      <Trigger SourceName="PART_Expander" Property="IsPressed" Value="True">
        <Setter TargetName="PART_Expander" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPressedBrush, Mode=OneWay}" />
      </Trigger>
      <Trigger SourceName="PART_Button" Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value=".55" />
        <Setter TargetName="PART_Expander" Property="IsEnabled" Value="False" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="true" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="MahApps.Styles.SplitButton.FocusVisualStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2" StrokeThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type mah:SplitButton}">
    <Setter Property="ArrowBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="ArrowMouseOverBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="ArrowPressedBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ButtonArrowStyle" Value="{DynamicResource MahApps.Styles.Button.Split.Arrow}" />
    <Setter Property="ButtonStyle" Value="{DynamicResource MahApps.Styles.Button.Split}" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource MahApps.Styles.SplitButton.FocusVisualStyle}" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.SplitButton.Horizontal}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizingWhenGrouping" Value="True" />
    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
    <Style.Triggers>
      <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel IsItemsHost="True" IsVirtualizing="True" IsVirtualizingWhenGrouping="True" VirtualizationMode="Recycling" />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.SplitButton.Vertical}" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value=".55" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type mah:SplitView}">
    <Setter Property="CanResizeOpenPane" Value="False" />
    <Setter Property="CompactPaneLength" Value="48" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="MaximumOpenPaneLength" Value="500" />
    <Setter Property="MinimumOpenPaneLength" Value="100" />
    <Setter Property="OpenPaneLength" Value="320" />
    <Setter Property="PaneBackground" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
    <Setter Property="PaneForeground" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="ResizeThumbStyle" Value="{StaticResource MahApps.Styles.MetroThumb.SplitView.Resize}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:SplitView}">
          <Grid x:Name="root" Background="{TemplateBinding Background}" Tag="{TemplateBinding TemplateSettings}">
            <Grid.Resources>
              <FrameworkElement x:Key="ProxyElement" DataContext="{TemplateBinding TemplateSettings}" />
              <Storyboard x:Key="ClosedToOpenOverlayLeftStoryboard">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="X">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding ElementName=ProxyElement, Path=DataContext.NegativeOpenPaneLength}" />
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneLength}" />
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="ClosedToOpenOverlayRightStoryboard">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="X">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneLength}" />
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding ElementName=ProxyElement, Path=DataContext.NegativeOpenPaneLength}" />
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="ClosedCompactLeftToOpenCompactOverlayLeftStoryboard">
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="{Binding ElementName=ProxyElement, Path=DataContext.CompactPaneGridLength}" />
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding ElementName=ProxyElement, Path=DataContext.NegativeOpenPaneLengthMinusCompactLength}" />
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="ClosedCompactRightToOpenCompactOverlayRightStoryboard">
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="*" />
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="{Binding ElementName=ProxyElement, Path=DataContext.CompactPaneGridLength}" />
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                  <DiscreteDoubleKeyFrame x:Name="PART_ClosedCompactRightToOpenCompactOverlayRightPaneClipRectangleTransformXAnimation" KeyTime="0:0:0" Value="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneLengthMinusCompactLength}" />
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OpenOverlayLeftToClosedStoryboard">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="X">
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding ElementName=ProxyElement, Path=DataContext.NegativeOpenPaneLength}" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneLength}" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OpenOverlayRightToClosedStoryboard">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="X">
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneLength}" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding ElementName=ProxyElement, Path=DataContext.NegativeOpenPaneLength}" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OpenCompactOverlayLeftToClosedCompactLeftStoryboard">
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="{Binding ElementName=ProxyElement, Path=DataContext.CompactPaneGridLength}" />
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding ElementName=ProxyElement, Path=DataContext.NegativeOpenPaneLengthMinusCompactLength}" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OpenCompactOverlayRightToClosedCompactRightStoryboard">
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="*" />
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="{Binding ElementName=ProxyElement, Path=DataContext.CompactPaneGridLength}" />
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                  <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                  <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneLengthMinusCompactLength}" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="ClosedCompactLeftStoryboard">
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="{Binding ElementName=ProxyElement, Path=DataContext.CompactPaneGridLength}" />
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimation Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X" To="{Binding ElementName=ProxyElement, Path=DataContext.NegativeOpenPaneLengthMinusCompactLength}" Duration="0:0:0" />
              </Storyboard>
              <Storyboard x:Key="ClosedCompactRightStoryboard">
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="*" />
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="{Binding ElementName=ProxyElement, Path=DataContext.CompactPaneGridLength}" />
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="2" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimation Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X" To="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneLengthMinusCompactLength}" Duration="0:0:0" />
              </Storyboard>
              <Storyboard x:Key="OpenOverlayLeftStoryboard">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OpenOverlayRightStoryboard">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OpenInlineLeftStoryboard">
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OpenInlineRightStoryboard">
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="*" />
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneGridLength}" />
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.Column)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OpenCompactOverlayLeftStoryboard">
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="{Binding ElementName=ProxyElement, Path=DataContext.CompactPaneGridLength}" />
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="OpenCompactOverlayRightStoryboard">
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="*" />
                <mah:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)" To="{Binding ElementName=ProxyElement, Path=DataContext.CompactPaneGridLength}" />
                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                  <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1" />
                </Int32AnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                  <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneGridLength, FallbackValue=0}" />
              <ColumnDefinition x:Name="ColumnDefinition2" Width="*" />
            </Grid.ColumnDefinitions>
            <FrameworkElement x:Name="ProxyElement" Width="0" Height="0" DataContext="{Binding TemplateSettings, RelativeSource={RelativeSource Mode=TemplatedParent}}" Focusable="False" Visibility="Collapsed" />
            <!--  Content Area  -->
            <Grid x:Name="ContentRoot" Grid.Column="0" Grid.ColumnSpan="2">
              <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" Focusable="False" IsTabStop="False" />
              <Rectangle x:Name="LightDismissLayer" Fill="{TemplateBinding OverlayBrush}" Visibility="Collapsed" />
            </Grid>
            <!--  Pane Content Area  -->
            <Grid x:Name="PaneRoot" Grid.Column="0" Grid.ColumnSpan="2" Width="{Binding ElementName=ProxyElement, Path=DataContext.OpenPaneLength, Mode=TwoWay}" HorizontalAlignment="Left" Background="{TemplateBinding PaneBackground}" Visibility="Collapsed">
              <Grid.RenderTransform>
                <TranslateTransform x:Name="PaneTransform" />
              </Grid.RenderTransform>
              <Grid.Clip>
                <RectangleGeometry x:Name="PaneClipRectangle">
                  <RectangleGeometry.Transform>
                    <TranslateTransform x:Name="PaneClipRectangleTransform" />
                  </RectangleGeometry.Transform>
                </RectangleGeometry>
              </Grid.Clip>
              <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Pane}" Focusable="False" Foreground="{TemplateBinding PaneForeground}" IsTabStop="False" />
              <Rectangle x:Name="HCPaneBorder" Width="1" HorizontalAlignment="Right" Fill="Transparent" Visibility="Collapsed" />
              <mah:MetroThumb x:Name="PART_ResizingThumb" HorizontalAlignment="Right" Style="{TemplateBinding ResizeThumbStyle}" Visibility="{TemplateBinding CanResizeOpenPane, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DisplayModeStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition Storyboard="{StaticResource ClosedToOpenOverlayLeftStoryboard}" From="Closed" To="OpenOverlayLeft" />
                  <VisualTransition Storyboard="{StaticResource ClosedToOpenOverlayRightStoryboard}" From="Closed" To="OpenOverlayRight" />
                  <VisualTransition Storyboard="{StaticResource ClosedCompactLeftToOpenCompactOverlayLeftStoryboard}" From="ClosedCompactLeft" To="OpenCompactOverlayLeft" />
                  <VisualTransition Storyboard="{StaticResource ClosedCompactRightToOpenCompactOverlayRightStoryboard}" From="ClosedCompactRight" To="OpenCompactOverlayRight" />
                  <VisualTransition Storyboard="{StaticResource OpenOverlayLeftToClosedStoryboard}" From="OpenOverlayLeft" To="Closed" />
                  <VisualTransition Storyboard="{StaticResource OpenOverlayRightToClosedStoryboard}" From="OpenOverlayRight" To="Closed" />
                  <VisualTransition Storyboard="{StaticResource OpenCompactOverlayLeftToClosedCompactLeftStoryboard}" From="OpenCompactOverlayLeft" To="ClosedCompactLeft" />
                  <VisualTransition Storyboard="{StaticResource OpenCompactOverlayRightToClosedCompactRightStoryboard}" From="OpenCompactOverlayRight" To="ClosedCompactRight" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="None" />
                <VisualState x:Name="Closed" />
                <VisualState x:Name="ClosedCompactLeft" Storyboard="{StaticResource ClosedCompactLeftStoryboard}" />
                <VisualState x:Name="ClosedCompactRight" Storyboard="{StaticResource ClosedCompactRightStoryboard}" />
                <VisualState x:Name="OpenOverlayLeft" Storyboard="{StaticResource OpenOverlayLeftStoryboard}" />
                <VisualState x:Name="OpenOverlayRight" Storyboard="{StaticResource OpenOverlayRightStoryboard}" />
                <VisualState x:Name="OpenInlineLeft" Storyboard="{StaticResource OpenInlineLeftStoryboard}" />
                <VisualState x:Name="OpenInlineRight" Storyboard="{StaticResource OpenInlineRightStoryboard}" />
                <VisualState x:Name="OpenCompactOverlayLeft" Storyboard="{StaticResource OpenCompactOverlayLeftStoryboard}" />
                <VisualState x:Name="OpenCompactOverlayRight" Storyboard="{StaticResource OpenCompactOverlayRightStoryboard}" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="PanePlacement" Value="Right">
              <Setter TargetName="PART_ResizingThumb" Property="HorizontalAlignment" Value="Left" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <Style TargetType="mah:Tile">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="CountFontSize" Value="28" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
    <Setter Property="Height" Value="140" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Margin" Value="3" />
    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="mah:Tile">
          <Grid>
            <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <Grid>
                <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Horizontal">
                  <ContentPresenter RecognizesAccessKey="True" />
                  <TextBlock VerticalAlignment="Center" FontSize="{TemplateBinding CountFontSize}" Text="{TemplateBinding Count}" />
                </StackPanel>
                <Label HorizontalAlignment="{TemplateBinding HorizontalTitleAlignment}" VerticalAlignment="{TemplateBinding VerticalTitleAlignment}" Foreground="{TemplateBinding Foreground}">
                  <AccessText Margin="3" FontSize="{TemplateBinding TitleFontSize}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Title}" TextWrapping="Wrap" />
                </Label>
              </Grid>
            </Border>
            <Border x:Name="PART_HoverBorder" BorderBrush="{TemplateBinding mah:ControlsHelper.MouseOverBorderBrush}" BorderThickness="2" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ControlsHelper.MouseOverBorderBrush), Mode=OneWay, Converter={x:Static converters:IsNullConverter.Instance}}" Value="False" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver, Mode=OneWay}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_HoverBorder" Property="Opacity" Value="0.6" />
            </MultiDataTrigger>
            <Trigger Property="Button.IsPressed" Value="True">
              <Setter Property="RenderTransform">
                <Setter.Value>
                  <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="0.98" ScaleY="0.98" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".55" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TitleFontSize" Value="16" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Width" Value="140" />
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{x:Null}" />
  </Style>
  <Style x:Key="MahApps.Styles.ToggleSwitch" TargetType="{x:Type mah:ToggleSwitch}">
    <Setter Property="ContentDirection" Value="RightToLeft" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.ToggleSwitch}" />
    <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.ToggleSwitch}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContentForeground}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:ToggleSwitch}">
          <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <ContentPresenter x:Name="HeaderContentPresenter" Grid.Row="0" Margin="{TemplateBinding mah:HeaderedControlHelper.HeaderMargin}" HorizontalAlignment="{TemplateBinding mah:HeaderedControlHelper.HeaderHorizontalContentAlignment}" VerticalAlignment="{TemplateBinding mah:HeaderedControlHelper.HeaderVerticalContentAlignment}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontFamily="{TemplateBinding mah:HeaderedControlHelper.HeaderFontFamily}" TextElement.FontSize="{TemplateBinding mah:HeaderedControlHelper.HeaderFontSize}" TextElement.FontStretch="{TemplateBinding mah:HeaderedControlHelper.HeaderFontStretch}" TextElement.FontWeight="{TemplateBinding mah:HeaderedControlHelper.HeaderFontWeight}" TextElement.Foreground="{TemplateBinding mah:HeaderedControlHelper.HeaderForeground}" Visibility="Collapsed" />
              <Grid Grid.Row="1" MinWidth="{DynamicResource ToggleSwitchThemeMinWidth}" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                  <RowDefinition Height="{DynamicResource ToggleSwitchPreContentMargin}" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="{DynamicResource ToggleSwitchPostContentMargin}" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="{DynamicResource ToggleSwitchContentSpaceMargin}" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="SwitchAreaGrid" Grid.RowSpan="3" Grid.ColumnSpan="3" Margin="0 5" Background="{DynamicResource MahApps.Brushes.ToggleSwitch.ContainerBackground}" />
                <ContentPresenter x:Name="OffContentPresenter" Grid.Row="0" Grid.RowSpan="3" Grid.Column="2" Margin="{TemplateBinding ContentPadding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding OffContent}" ContentStringFormat="{TemplateBinding OffContentStringFormat}" ContentTemplate="{TemplateBinding OffContentTemplate}" ContentTemplateSelector="{TemplateBinding OffContentTemplateSelector}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontFamily="{TemplateBinding FontFamily}" TextElement.FontSize="{TemplateBinding FontSize}" TextElement.Foreground="{TemplateBinding Foreground}" />
                <ContentPresenter x:Name="OnContentPresenter" Grid.Row="0" Grid.RowSpan="3" Grid.Column="2" Margin="{TemplateBinding ContentPadding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding OnContent}" ContentStringFormat="{TemplateBinding OnContentStringFormat}" ContentTemplate="{TemplateBinding OnContentTemplate}" ContentTemplateSelector="{TemplateBinding OnContentTemplateSelector}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontFamily="{TemplateBinding FontFamily}" TextElement.FontSize="{TemplateBinding FontSize}" TextElement.Foreground="{TemplateBinding Foreground}" />
                <ContentPresenter x:Name="ContentPresenter" Grid.Row="0" Grid.RowSpan="3" Grid.Column="2" Margin="{TemplateBinding ContentPadding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontFamily="{TemplateBinding FontFamily}" TextElement.FontSize="{TemplateBinding FontSize}" TextElement.Foreground="{TemplateBinding Foreground}" Visibility="Collapsed" />
                <Grid x:Name="Switch" Grid.Row="1" Grid.Column="0" Width="44" Height="20" HorizontalAlignment="Left">
                  <Rectangle x:Name="OuterBorder" Fill="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOff}" RadiusX="10" RadiusY="10" Stroke="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOff}" StrokeThickness="{DynamicResource ToggleSwitchOffStrokeThickness}" />
                  <Rectangle x:Name="SwitchKnobBounds" Fill="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOn}" Opacity="0" RadiusX="10" RadiusY="10" Stroke="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOn}" StrokeThickness="{DynamicResource ToggleSwitchOnStrokeThickness}" />
                  <Grid x:Name="SwitchKnob" Width="20" Height="20" HorizontalAlignment="Left">
                    <Ellipse x:Name="SwitchKnobOn" Width="10" Height="10" Fill="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOn}" Opacity="0" />
                    <Ellipse x:Name="SwitchKnobOff" Width="10" Height="10" Fill="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOff}" />
                    <Grid.RenderTransform>
                      <TranslateTransform x:Name="KnobTranslateTransform" />
                    </Grid.RenderTransform>
                  </Grid>
                </Grid>
                <Thumb x:Name="SwitchThumb" Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="3">
                  <Thumb.Template>
                    <ControlTemplate TargetType="Thumb">
                      <Rectangle Fill="Transparent" />
                    </ControlTemplate>
                  </Thumb.Template>
                </Thumb>
              </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ToggleStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Name="DraggingToOnTransition" GeneratedDuration="0" From="Dragging" To="On">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="{StaticResource ToggleSwitchTranslateDuration}" Value="24">
                          <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase Exponent="9" />
                          </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="DraggingToOffTransition" GeneratedDuration="0" From="Dragging" To="Off">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="{StaticResource ToggleSwitchTranslateDuration}" Value="0">
                          <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase Exponent="9" />
                          </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="OnToOffTransition" GeneratedDuration="0" From="On" To="Off">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="{StaticResource ToggleSwitchTranslateDuration}" Value="0">
                          <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase Exponent="9" />
                          </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition x:Name="OffToOnTransition" GeneratedDuration="0" From="Off" To="On">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X">
                        <EasingDoubleKeyFrame KeyTime="{StaticResource ToggleSwitchTranslateDuration}" Value="24">
                          <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase Exponent="9" />
                          </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Dragging" />
                <VisualState x:Name="Off">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" To="0" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="On">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" To="24" Duration="0" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ContentStates">
                <VisualState x:Name="OffContent">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <system:Boolean>True</system:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OnContent">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <system:Boolean>True</system:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentDirection" Value="LeftToRight">
              <Setter TargetName="ContentPresenter" Property="Grid.Column" Value="0" />
              <Setter TargetName="OffContentPresenter" Property="Grid.Column" Value="0" />
              <Setter TargetName="OnContentPresenter" Property="Grid.Column" Value="0" />
              <Setter TargetName="Switch" Property="Grid.Column" Value="2" />
            </Trigger>
            <!--  MouseOver  -->
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="OuterBorder" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOffPointerOver}" />
              <Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOffPointerOver}" />
              <Setter TargetName="SwitchAreaGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContainerBackgroundPointerOver}" />
              <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOnPointerOver}" />
              <Setter TargetName="SwitchKnobBounds" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOnPointerOver}" />
              <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOffPointerOver}" />
              <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOnPointerOver}" />
            </Trigger>
            <!--  Pressed  -->
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="OuterBorder" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOffPressed}" />
              <Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOffPressed}" />
              <Setter TargetName="OuterBorder" Property="StrokeThickness" Value="0" />
              <Setter TargetName="SwitchAreaGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContainerBackgroundPressed}" />
              <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOnPressed}" />
              <Setter TargetName="SwitchKnobBounds" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOnPressed}" />
              <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOffPressed}" />
              <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOnPressed}" />
            </Trigger>
            <!--  Disabled  -->
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContentForegroundDisabled}" />
              <Setter TargetName="HeaderContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.HeaderForegroundDisabled}" />
              <Setter TargetName="OffContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContentForegroundDisabled}" />
              <Setter TargetName="OnContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContentForegroundDisabled}" />
              <Setter TargetName="OuterBorder" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOffDisabled}" />
              <Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOffDisabled}" />
              <Setter TargetName="SwitchAreaGrid" Property="Background" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.ContainerBackgroundDisabled}" />
              <Setter TargetName="SwitchKnobBounds" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.FillOnDisabled}" />
              <Setter TargetName="SwitchKnobBounds" Property="Stroke" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.StrokeOnDisabled}" />
              <Setter TargetName="SwitchKnobOff" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOffDisabled}" />
              <Setter TargetName="SwitchKnobOn" Property="Fill" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.KnobFillOnDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="mah:HeaderedControlHelper.HeaderFontFamily" Value="{DynamicResource MahApps.Fonts.Family.ToggleSwitch.Header}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="{DynamicResource MahApps.Font.Size.ToggleSwitch.Header}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderForeground" Value="{DynamicResource MahApps.Brushes.ToggleSwitch.HeaderForeground}" />
    <Setter Property="mah:HeaderedControlHelper.HeaderMargin" Value="{DynamicResource ToggleSwitchTopHeaderMargin}" />
  </Style>
  <Style TargetType="{x:Type mah:Underline}">
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="LineThickness" Value="1" />
    <Setter Property="Placement" Value="Bottom" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:Underline}">
          <Border x:Name="PART_UnderlineBorder" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
            <mah:ClipBorder Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
              <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="False" />
            </mah:ClipBorder>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="UseLayoutRounding" Value="True" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="MahApps.Styles.WindowButtonCommands.Base" TargetType="{x:Type mah:WindowButtonCommands}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}" />
    <Setter Property="DarkCloseButtonStyle" Value="{DynamicResource MahApps.Styles.Button.MetroWindow.Dark}" />
    <Setter Property="DarkMaxButtonStyle" Value="{DynamicResource MahApps.Styles.Button.MetroWindow.Dark}" />
    <Setter Property="DarkMinButtonStyle" Value="{DynamicResource MahApps.Styles.Button.MetroWindow.Dark}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="LightCloseButtonStyle" Value="{DynamicResource MahApps.Styles.Button.MetroWindow.Light}" />
    <Setter Property="LightMaxButtonStyle" Value="{DynamicResource MahApps.Styles.Button.MetroWindow.Light}" />
    <Setter Property="LightMinButtonStyle" Value="{DynamicResource MahApps.Styles.Button.MetroWindow.Light}" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.WindowButtonCommands}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="MahApps.Styles.WindowButtonCommands" BasedOn="{StaticResource MahApps.Styles.WindowButtonCommands.Base}" TargetType="{x:Type mah:WindowButtonCommands}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding ParentWindow.ShowTitleBar, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.WindowButtonCommands.Win10" BasedOn="{StaticResource MahApps.Styles.WindowButtonCommands}" TargetType="{x:Type mah:WindowButtonCommands}">
    <Setter Property="DarkCloseButtonStyle" Value="{DynamicResource MahApps.Styles.Button.MetroWindow.Close.Dark.Win10}" />
    <Setter Property="LightCloseButtonStyle" Value="{DynamicResource MahApps.Styles.Button.MetroWindow.Close.Light.Win10}" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.WindowButtonCommands.Win10}" />
  </Style>
  <Style x:Key="MahApps.Styles.Control.WindowCommands" TargetType="{x:Type Control}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}" />
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Mode=OneWay}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Opacity" Value="0.5" />
    <Setter Property="Padding" Value="8 0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Opacity" Value="1" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray9}" />
        <Setter Property="Opacity" Value="1" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.Button.WindowCommands" BasedOn="{StaticResource MahApps.Styles.Control.WindowCommands}" TargetType="{x:Type ButtonBase}">
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.Button.WindowCommands}" />
  </Style>
  <Style x:Key="MahApps.Styles.ToggleButton.WindowCommands" BasedOn="{StaticResource MahApps.Styles.Control.WindowCommands}" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.ToggleButton.WindowCommands}" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Opacity" Value="0.8" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Opacity" Value="1" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.SplitButton.Button.WindowCommands" BasedOn="{StaticResource MahApps.Styles.Control.WindowCommands}" TargetType="{x:Type Control}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="4 0 0 0" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.Button.WindowCommands}" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="1" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.SplitButton.ButtonArrow.WindowCommands" BasedOn="{StaticResource MahApps.Styles.SplitButton.Button.WindowCommands}" TargetType="{x:Type Control}">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="0 0 4 0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
  <Style x:Key="MahApps.Styles.SplitButton.WindowCommands" TargetType="{x:Type mah:SplitButton}">
    <Setter Property="ArrowBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Mode=OneWay}" />
    <Setter Property="ArrowMouseOverBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Mode=OneWay}" />
    <Setter Property="ArrowPressedBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Mode=OneWay}" />
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="ButtonArrowStyle" Value="{StaticResource MahApps.Styles.SplitButton.ButtonArrow.WindowCommands}" />
    <Setter Property="ButtonStyle" Value="{StaticResource MahApps.Styles.SplitButton.Button.WindowCommands}" />
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Mode=OneWay}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="Padding" Value="4 0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="ArrowBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray9}" />
        <Setter Property="Opacity" Value="1" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.DropDownButton.Button.WindowCommands" BasedOn="{StaticResource MahApps.Styles.SplitButton.Button.WindowCommands}" TargetType="{x:Type Control}">
    <Setter Property="Padding" Value="4 0 4 0" />
  </Style>
  <Style x:Key="MahApps.Styles.DropDownButton.WindowCommands" TargetType="{x:Type mah:DropDownButton}">
    <Setter Property="ArrowBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Mode=OneWay}" />
    <Setter Property="ArrowMouseOverBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Mode=OneWay}" />
    <Setter Property="ArrowPressedBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Mode=OneWay}" />
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="ButtonStyle" Value="{StaticResource MahApps.Styles.DropDownButton.Button.WindowCommands}" />
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Mode=OneWay}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="Padding" Value="4 0 8 0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="ArrowBrush" Value="{DynamicResource MahApps.Brushes.Gray9}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray9}" />
        <Setter Property="Opacity" Value="1" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.ToggleButton.ToolBarOverflow" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Path Name="Arrow" Width="7" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Bottom" Data="M16.59,5.59L18,7L12,13L6,7L7.41,5.59L12,10.17L16.59,5.59M16.59,11.59L18,13L12,19L6,13L7.41,11.59L12,16.17L16.59,11.59Z" Fill="{TemplateBinding Foreground}" Opacity="0.75" Stretch="Uniform" />
            <ContentPresenter />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Arrow" Property="Opacity" Value="1" />
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.WindowCommands" TargetType="mah:WindowCommands">
    <DockPanel>
      <ToggleButton x:Name="PART_ToggleButton" AutomationProperties.Name="OverflowToggleButton" ClickMode="Press" DockPanel.Dock="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(DockPanel.Dock), Mode=OneWay}" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOverflowOpen, Mode=TwoWay}" IsEnabled="false" Style="{StaticResource MahApps.Styles.ToggleButton.ToolBarOverflow}" Visibility="Collapsed">
        <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOverflowOpen}" Placement="Bottom" PopupAnimation="Slide" StaysOpen="false">
          <Grid x:Name="DropDownBorder" Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}, Path=Background, Mode=OneWay}">
            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}, Path=WindowTitleBrush, Mode=OneWay}" FocusVisualStyle="{x:Null}" Focusable="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" />
          </Grid>
        </Popup>
      </ToggleButton>
      <ToolBarPanel x:Name="PART_ToolBarPanel" Margin="0" Background="{TemplateBinding Background}" IsItemsHost="true" />
    </DockPanel>
    <ControlTemplate.Triggers>
      <Trigger Property="HasOverflowItems" Value="true">
        <Setter TargetName="PART_ToggleButton" Property="IsEnabled" Value="true" />
        <Setter TargetName="PART_ToggleButton" Property="Visibility" Value="Visible" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="MahApps.Styles.WindowCommands.Base" TargetType="{x:Type mah:WindowCommands}">
    <Style.Resources>
      <ResourceDictionary>
        <Style BasedOn="{StaticResource MahApps.Styles.Button.WindowCommands}" TargetType="{x:Type Button}" />
        <Style BasedOn="{StaticResource MahApps.Styles.ToggleButton.WindowCommands}" TargetType="{x:Type ToggleButton}" />
        <Style BasedOn="{StaticResource MahApps.Styles.SplitButton.WindowCommands}" TargetType="{x:Type mah:SplitButton}" />
        <Style BasedOn="{StaticResource MahApps.Styles.DropDownButton.WindowCommands}" TargetType="{x:Type mah:DropDownButton}" />
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Transparent}" />
    <Setter Property="DarkTemplate" Value="{StaticResource MahApps.Templates.WindowCommands}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Continue" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    <Setter Property="LightTemplate" Value="{StaticResource MahApps.Templates.WindowCommands}" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.WindowCommands}" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
  </Style>
  <Style x:Key="MahApps.Styles.WindowCommands" BasedOn="{StaticResource MahApps.Styles.WindowCommands.Base}" TargetType="{x:Type mah:WindowCommands}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentWindow.ShowTitleBar}" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.MetroWindow" TargetType="{x:Type mah:MetroWindow}">
    <Grid Background="{TemplateBinding Background}" LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}" RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True">
      <AdornerDecorator>
        <Grid UseLayoutRounding="False">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static converters:ThicknessSideType.Left}}" />
            <!--  icon  -->
            <ColumnDefinition Width="Auto" />
            <!--  left window commands, title, right window commands  -->
            <ColumnDefinition Width="*" />
            <!--  min,max,close buttons  -->
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static converters:ThicknessSideType.Right}}" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static converters:ThicknessSideType.Top}}" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>
          <Rectangle x:Name="PART_WindowTitleBackground" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Fill="{TemplateBinding WindowTitleBrush}" Focusable="False" StrokeThickness="0" />
          <!--  icon  -->
          <ContentControl x:Name="PART_Icon" Grid.Row="1" Grid.Column="1" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" MinWidth="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Panel.ZIndex="1" Content="{TemplateBinding Icon}" ContentTemplate="{TemplateBinding IconTemplate}" Focusable="False" Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />
          <mah:MetroThumb x:Name="PART_WindowTitleThumb" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}" UseLayoutRounding="True" />
          <DockPanel Grid.Row="1" Grid.Column="2" VerticalAlignment="Top" Focusable="False">
            <!--  the left window commands  -->
            <mah:ContentPresenterEx x:Name="PART_LeftWindowCommands" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" VerticalAlignment="Top" controlzex:WindowChrome.IsHitTestVisibleInChrome="True" Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" DockPanel.Dock="Left" Focusable="False" />
            <!--  the right window commands  -->
            <mah:ContentPresenterEx x:Name="PART_RightWindowCommands" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" VerticalAlignment="Top" controlzex:WindowChrome.IsHitTestVisibleInChrome="True" Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" DockPanel.Dock="Right" Focusable="False" />
            <!--  the title bar  -->
            <mah:MetroThumbContentControl x:Name="PART_TitleBar" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" HorizontalAlignment="{TemplateBinding TitleAlignment}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Content="{TemplateBinding Title}" ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}" ContentTemplate="{TemplateBinding TitleTemplate}" Focusable="False">
              <ContentControl.Foreground>
                <MultiBinding Converter="{x:Static converters:BackgroundToForegroundConverter.Instance}">
                  <Binding ElementName="PART_WindowTitleBackground" Mode="OneWay" Path="Fill" />
                  <Binding Mode="OneWay" Path="TitleForeground" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </ContentControl.Foreground>
            </mah:MetroThumbContentControl>
          </DockPanel>
          <!--  the window button commands  -->
          <mah:ContentPresenterEx x:Name="PART_WindowButtonCommands" Grid.Row="1" Grid.RowSpan="2" Grid.Column="3" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" VerticalAlignment="Top" Panel.ZIndex="1" controlzex:WindowChrome.IsHitTestVisibleInChrome="True" Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Focusable="False" />
          <!--  the main window content  -->
          <mah:MetroContentControl x:Name="PART_Content" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" FocusVisualStyle="{x:Null}" IsTabStop="False" OnlyLoadTransition="True" TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}" UseLayoutRounding="True">
            <mah:ContentPresenterEx x:Name="PART_ContentPresenter" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static converters:ThicknessSideType.Top}}" controlzex:WindowChrome.IsHitTestVisibleInChrome="True" UseLayoutRounding="False" />
          </mah:MetroContentControl>
          <!--  disables the main content when a modal flyout is shown  -->
          <Rectangle Name="PART_FlyoutModal" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="3" Fill="{TemplateBinding FlyoutOverlayBrush}" Visibility="Hidden" />
          <mah:MetroThumb x:Name="PART_FlyoutModalDragMoveThumb" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}" Visibility="{Binding ElementName=PART_FlyoutModal, Path=Visibility, Mode=OneWay}" />
          <!--  flyouts  -->
          <ContentControl Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="3" VerticalAlignment="Stretch" Panel.ZIndex="2" Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Focusable="False" KeyboardNavigation.TabNavigation="None" />
          <!--  inactive dialog container  -->
          <Grid x:Name="PART_MetroInactiveDialogsContainer" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="3" Panel.ZIndex="3" FocusVisualStyle="{x:Null}" />
          <!--  overlay effect container  -->
          <Grid x:Name="PART_OverlayBox" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="3" Panel.ZIndex="4" Background="{TemplateBinding OverlayBrush}" FocusVisualStyle="{x:Null}" Focusable="False" Opacity="0" Visibility="Hidden" />
          <!--  active dialog container  -->
          <Grid x:Name="PART_MetroActiveDialogContainer" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="3" Panel.ZIndex="5" FocusVisualStyle="{x:Null}" />
        </Grid>
      </AdornerDecorator>
      <Border x:Name="PART_Border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{x:Null}" BorderBrush="{TemplateBinding GlowBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="True" />
      <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsTabStop="False" UseLayoutRounding="True" Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ShowDialogsOverTitleBar" Value="False">
        <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.Row" Value="2" />
        <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.RowSpan" Value="1" />
        <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.Row" Value="2" />
        <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.RowSpan" Value="1" />
        <Setter TargetName="PART_OverlayBox" Property="Grid.Row" Value="2" />
        <Setter TargetName="PART_OverlayBox" Property="Grid.RowSpan" Value="1" />
      </Trigger>
      <Trigger Property="UseNoneWindowStyle" Value="True">
        <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
        <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
      </Trigger>
      <Trigger Property="ShowTitleBar" Value="False">
        <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
        <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
      </Trigger>
      <!--  handle active/inactive state  -->
      <Trigger Property="IsActive" Value="False">
        <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsActive" Value="False" />
          <Condition Property="GlowBrush" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsActive" Value="True" />
          <Condition Property="GlowBrush" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
      </MultiTrigger>
      <!--  HitTest visibility  -->
      <Trigger Property="GlowBrush" Value="{x:Null}">
        <Setter TargetName="PART_Border" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
        <Setter TargetName="PART_ContentPresenter" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
        <Setter TargetName="PART_LeftWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
        <Setter TargetName="PART_RightWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
        <Setter TargetName="PART_WindowButtonCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="NoResize">
        <Setter TargetName="PART_Border" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_ContentPresenter" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_LeftWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_RightWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_TitleBar" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_WindowButtonCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
      </Trigger>
      <!--  no icon and no icon content template -> collapse the icon content control  -->
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Icon" Value="{x:Null}" />
          <Condition Property="IconTemplate" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
        <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
          <Condition Property="WindowState" Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MahApps.Templates.MetroWindow.Center" TargetType="{x:Type mah:MetroWindow}">
    <Grid Background="{TemplateBinding Background}" LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}" RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True">
      <AdornerDecorator>
        <Grid UseLayoutRounding="False">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static converters:ThicknessSideType.Left}}" />
            <!--  icon  -->
            <ColumnDefinition Width="Auto" />
            <!--  left window commands, title, right window commands  -->
            <ColumnDefinition Width="*" />
            <!--  min,max,close buttons  -->
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static converters:ThicknessSideType.Right}}" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static converters:ThicknessSideType.Top}}" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>
          <Rectangle x:Name="PART_WindowTitleBackground" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Fill="{TemplateBinding WindowTitleBrush}" Focusable="False" StrokeThickness="0" />
          <!--  icon  -->
          <ContentControl x:Name="PART_Icon" Grid.Row="1" Grid.Column="1" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" MinWidth="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Panel.ZIndex="1" Content="{TemplateBinding Icon}" ContentTemplate="{TemplateBinding IconTemplate}" Focusable="False" Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />
          <mah:MetroThumb x:Name="PART_WindowTitleThumb" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}" UseLayoutRounding="True" />
          <!--  the title bar  -->
          <mah:MetroThumbContentControl x:Name="PART_TitleBar" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" HorizontalAlignment="{TemplateBinding TitleAlignment}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="{TemplateBinding Title}" ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}" ContentTemplate="{TemplateBinding TitleTemplate}" Focusable="False">
            <ContentControl.Foreground>
              <MultiBinding Converter="{x:Static converters:BackgroundToForegroundConverter.Instance}">
                <Binding ElementName="PART_WindowTitleBackground" Mode="OneWay" Path="Fill" />
                <Binding Mode="OneWay" Path="TitleForeground" RelativeSource="{RelativeSource TemplatedParent}" />
              </MultiBinding>
            </ContentControl.Foreground>
          </mah:MetroThumbContentControl>
          <DockPanel Grid.Row="1" Grid.Column="2" VerticalAlignment="Top" Panel.ZIndex="1" Focusable="False">
            <!--  the left window commands  -->
            <mah:ContentPresenterEx x:Name="PART_LeftWindowCommands" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" VerticalAlignment="Top" controlzex:WindowChrome.IsHitTestVisibleInChrome="True" Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" DockPanel.Dock="Left" Focusable="False" />
            <!--  the right window commands  -->
            <mah:ContentPresenterEx x:Name="PART_RightWindowCommands" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" VerticalAlignment="Top" controlzex:WindowChrome.IsHitTestVisibleInChrome="True" Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" DockPanel.Dock="Right" Focusable="False" />
            <!--  the fake title bar  -->
            <Grid />
          </DockPanel>
          <!--  the window button commands  -->
          <mah:ContentPresenterEx x:Name="PART_WindowButtonCommands" Grid.Row="1" Grid.RowSpan="2" Grid.Column="3" Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" VerticalAlignment="Top" Panel.ZIndex="1" controlzex:WindowChrome.IsHitTestVisibleInChrome="True" Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Focusable="False" />
          <!--  the main window content  -->
          <mah:MetroContentControl x:Name="PART_Content" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" FocusVisualStyle="{x:Null}" IsTabStop="False" OnlyLoadTransition="True" TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}" UseLayoutRounding="True">
            <mah:ContentPresenterEx x:Name="PART_ContentPresenter" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static converters:ThicknessSideType.Top}}" controlzex:WindowChrome.IsHitTestVisibleInChrome="True" UseLayoutRounding="False" />
          </mah:MetroContentControl>
          <!--  disables the main content when a modal flyout is shown  -->
          <Rectangle Name="PART_FlyoutModal" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="3" Fill="{TemplateBinding FlyoutOverlayBrush}" Visibility="Hidden" />
          <mah:MetroThumb x:Name="PART_FlyoutModalDragMoveThumb" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}" Visibility="{Binding ElementName=PART_FlyoutModal, Path=Visibility, Mode=OneWay}" />
          <!--  flyouts  -->
          <ContentControl Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" Grid.ColumnSpan="3" VerticalAlignment="Stretch" Panel.ZIndex="2" Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Focusable="False" KeyboardNavigation.TabNavigation="None" />
          <!--  inactive dialog container  -->
          <Grid x:Name="PART_MetroInactiveDialogsContainer" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="3" Panel.ZIndex="3" FocusVisualStyle="{x:Null}" />
          <!--  overlay effect container  -->
          <Grid x:Name="PART_OverlayBox" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="3" Panel.ZIndex="4" Background="{TemplateBinding OverlayBrush}" FocusVisualStyle="{x:Null}" Focusable="False" Opacity="0" Visibility="Hidden" />
          <!--  active dialog container  -->
          <Grid x:Name="PART_MetroActiveDialogContainer" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="3" Panel.ZIndex="5" FocusVisualStyle="{x:Null}" />
        </Grid>
      </AdornerDecorator>
      <Border x:Name="PART_Border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{x:Null}" BorderBrush="{TemplateBinding GlowBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="True" />
      <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsTabStop="False" UseLayoutRounding="True" Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Resources>
      <Storyboard x:Key="OverlayFastSemiFadeIn" AccelerationRatio=".97" BeginTime="0:0:0" SpeedRatio="2.7" Storyboard.TargetProperty="Opacity">
        <DoubleAnimation To=".7" />
      </Storyboard>
      <Storyboard x:Key="OverlayFastSemiFadeOut" AccelerationRatio=".97" BeginTime="0:0:0" SpeedRatio="2.7" Storyboard.TargetProperty="Opacity">
        <DoubleAnimation To="0.0" />
      </Storyboard>
    </ControlTemplate.Resources>
    <ControlTemplate.Triggers>
      <Trigger Property="ShowDialogsOverTitleBar" Value="False">
        <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.Row" Value="2" />
        <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.RowSpan" Value="1" />
        <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.Row" Value="2" />
        <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.RowSpan" Value="1" />
        <Setter TargetName="PART_OverlayBox" Property="Grid.Row" Value="2" />
        <Setter TargetName="PART_OverlayBox" Property="Grid.RowSpan" Value="1" />
      </Trigger>
      <Trigger Property="UseNoneWindowStyle" Value="True">
        <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
        <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
      </Trigger>
      <Trigger Property="ShowTitleBar" Value="False">
        <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
        <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
      </Trigger>
      <!--  handle active/inactive state  -->
      <Trigger Property="IsActive" Value="False">
        <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsActive" Value="False" />
          <Condition Property="GlowBrush" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsActive" Value="True" />
          <Condition Property="GlowBrush" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
      </MultiTrigger>
      <!--  HitTest visibility  -->
      <Trigger Property="GlowBrush" Value="{x:Null}">
        <Setter TargetName="PART_Border" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
        <Setter TargetName="PART_ContentPresenter" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
        <Setter TargetName="PART_LeftWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
        <Setter TargetName="PART_RightWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
        <Setter TargetName="PART_WindowButtonCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="NoResize">
        <Setter TargetName="PART_Border" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_ContentPresenter" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_LeftWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_RightWindowCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_TitleBar" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter TargetName="PART_WindowButtonCommands" Property="controlzex:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
      </Trigger>
      <!--  no icon and no icon content template -> collapse the icon content control  -->
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Icon" Value="{x:Null}" />
          <Condition Property="IconTemplate" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
        <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
          <Condition Property="WindowState" Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type mah:MetroWindow}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FlyoutOverlayBrush" Value="{DynamicResource MahApps.Brushes.Window.FlyoutOverlay}" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="NonActiveBorderBrush" Value="{DynamicResource MahApps.Brushes.Border.NonActive}" />
    <Setter Property="NonActiveGlowBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource MahApps.Brushes.WindowTitle.NonActive}" />
    <Setter Property="OverlayBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="OverlayFadeIn" Value="{StaticResource OverlayFastSemiFadeIn}" />
    <Setter Property="OverlayFadeOut" Value="{StaticResource OverlayFastSemiFadeOut}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroWindow}" />
    <Setter Property="TextElement.FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
    <Setter Property="TitleForeground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
    <Setter Property="TitleTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Margin="8 -1 1 0" VerticalAlignment="Center" FontFamily="{DynamicResource MahApps.Fonts.Family.Window.Title}" FontSize="{DynamicResource MahApps.Font.Size.Window.Title}" Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="WindowTitleBrush" Value="{DynamicResource MahApps.Brushes.WindowTitle}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Icon, Mode=OneWay, Converter={x:Static converters:IsNullConverter.Instance}}" Value="False">
        <Setter Property="IconTemplate">
          <Setter.Value>
            <DataTemplate>
              <mah:MultiFrameImage Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}" RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}" RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}" Source="{TemplateBinding Content}" />
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <Trigger Property="TitleAlignment" Value="Center">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroWindow.Center}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource MahApps.Styles.Flyout}" TargetType="{x:Type mah:Flyout}" />
  <Style BasedOn="{StaticResource MahApps.Styles.ToggleSwitch}" TargetType="{x:Type mah:ToggleSwitch}" />
  <Style BasedOn="{StaticResource MahApps.Styles.ContentControlEx}" TargetType="{x:Type mah:ContentControlEx}" />
  <Style BasedOn="{StaticResource MahApps.Styles.MetroThumbContentControl}" TargetType="{x:Type mah:MetroThumbContentControl}" />
  <Style BasedOn="{StaticResource MahApps.Styles.WindowCommandsItem}" TargetType="{x:Type mah:WindowCommandsItem}" />
  <Style BasedOn="{StaticResource MahApps.Styles.WindowCommands}" TargetType="{x:Type mah:WindowCommands}" />
  <Style BasedOn="{StaticResource MahApps.Styles.WindowButtonCommands.Win10}" TargetType="{x:Type mah:WindowButtonCommands}" />
  <Style BasedOn="{StaticResource MahApps.Styles.HamburgerMenuListBox}" TargetType="{x:Type mah:HamburgerMenuListBox}" />
  <Style BasedOn="{StaticResource MahApps.Styles.MetroHeader}" TargetType="{x:Type mah:MetroHeader}" />
  <Style BasedOn="{StaticResource MahApps.Styles.BaseMetroDialog}" TargetType="{x:Type dialogs:BaseMetroDialog}" />
  <Style BasedOn="{StaticResource MahApps.Styles.RangeSlider.Win10}" TargetType="{x:Type mah:RangeSlider}" />
  <Style BasedOn="{StaticResource MahApps.Styles.MetroProgressBar}" TargetType="{x:Type mah:MetroProgressBar}" />
  <Style BasedOn="{StaticResource MahApps.Styles.FlipViewItem}" TargetType="{x:Type mah:FlipViewItem}" />
  <Style BasedOn="{StaticResource MahApps.Styles.FlipView}" TargetType="{x:Type mah:FlipView}" />
  <Style BasedOn="{StaticResource MahApps.Styles.ColorEyeDropper}" TargetType="{x:Type mah:ColorEyeDropper}" />
  <Style BasedOn="{StaticResource MahApps.Styles.ColorPalette}" TargetType="{x:Type mah:ColorPalette}" />
  <Style BasedOn="{StaticResource MahApps.Styles.ColorPicker}" TargetType="{x:Type mah:ColorPicker}" />
  <Style x:Key="MahApps.Styles.ColorCanvas" TargetType="{x:Type mah:ColorCanvas}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mah:ColorCanvas}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid Grid.IsSharedSizeScope="True" UseLayoutRounding="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="110" MaxWidth="310" />
                <ColumnDefinition Width="*" MinWidth="110" MaxWidth="310" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="110" MaxHeight="310" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <!--  Saturation and Value  -->
              <Border x:Name="PART_SaturationValueBox" Grid.Row="0" Grid.Column="0" Margin="5" BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}" BorderThickness="1">
                <Border.Background>
                  <SolidColorBrush Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedHSVColor, Converter={x:Static converters:HSVColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:HSVColorChannelType.SVMax}}" />
                </Border.Background>
                <Grid SnapsToDevicePixels="True" UseLayoutRounding="False">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Saturation, Converter={x:Static converters:PercentageToGridLengthConverter.Default}}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Saturation, Converter={x:Static converters:PercentageToGridLengthConverter.Default}, ConverterParameter={x:Static system:Boolean.TrueString}}" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Value, Converter={x:Static converters:PercentageToGridLengthConverter.Default}, ConverterParameter={x:Static system:Boolean.TrueString}}" />
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Value, Converter={x:Static converters:PercentageToGridLengthConverter.Default}}" />
                  </Grid.RowDefinitions>
                  <!--  Gradients to display Saturation and Value  -->
                  <Grid.Background>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                      <GradientStop Offset="0" Color="White" />
                      <GradientStop Offset="1" Color="Transparent" />
                    </LinearGradientBrush>
                  </Grid.Background>
                  <Grid Grid.RowSpan="2" Grid.ColumnSpan="2">
                    <Grid.Background>
                      <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0" Color="#00000000" />
                        <GradientStop Offset="1" Color="Black" />
                      </LinearGradientBrush>
                    </Grid.Background>
                  </Grid>
                  <!--  Fade  -->
                  <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Width="3" Margin="-1.5 0" HorizontalAlignment="Right" VerticalAlignment="Stretch" Fill="White" />
                  <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Height="3" Margin="0 -1.5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Fill="White" />
                  <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Width="1" Margin="-0.5 0" HorizontalAlignment="Right" VerticalAlignment="Stretch" Fill="Black" />
                  <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Height="1" Margin="0 -0.5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Fill="Black" />
                </Grid>
              </Border>
              <!--  Selected Color Preview  -->
              <Grid Grid.Row="1" Grid.Column="0" Margin="5 0 5 5">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter VerticalAlignment="Center" Content="{TemplateBinding LabelColorPreview}" />
                <Border Grid.Row="0" Grid.Column="1" Margin="5 0 0 0" Background="{DynamicResource MahApps.Brushes.Tile}" BorderBrush="{DynamicResource MahApps.Brushes.ThemeForeground}" BorderThickness="1">
                  <Rectangle>
                    <Rectangle.Fill>
                      <SolidColorBrush Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, TargetNullValue=Transparent}" />
                    </Rectangle.Fill>
                  </Rectangle>
                </Border>
                <ContentControl x:Name="PART_NoColorPreview" Grid.Row="0" Grid.Column="1" Margin="5 0 0 0" ContentTemplate="{DynamicResource MahApps.DataTemplates.ColorPicker.NoColor}" Visibility="Collapsed" />
              </Grid>
              <!--  Sliders for Values  -->
              <ScrollViewer Grid.Row="0" Grid.Column="1" Margin="0 5 5 5" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel UseLayoutRounding="True">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" MinWidth="{DynamicResource MahApps.Font.Size.Content}" SharedSizeGroup="Label" />
                      <ColumnDefinition Width="*" MinWidth="50" />
                      <ColumnDefinition Width="Auto" MinWidth="100" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!--  R  -->
                    <ContentPresenter Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Content="{TemplateBinding LabelRedChannel}" />
                    <Slider Grid.Row="0" Grid.Column="1" Style="{DynamicResource MahApps.Styles.Slider.ColorComponent.ARGB}" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=R}">
                      <Slider.Background>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                          <GradientStop Offset="0" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, Converter={x:Static converters:ColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:ColorChannelType.RMin}}" />
                          <GradientStop Offset="1" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, Converter={x:Static converters:ColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:ColorChannelType.RMax}}" />
                        </LinearGradientBrush>
                      </Slider.Background>
                    </Slider>
                    <mah:NumericUpDown Grid.Row="0" Grid.Column="2" Margin="2" Maximum="255" Minimum="0" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=R}" />
                    <!--  G  -->
                    <ContentPresenter Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Content="{TemplateBinding LabelGreenChannel}" />
                    <Slider Grid.Row="1" Grid.Column="1" Style="{DynamicResource MahApps.Styles.Slider.ColorComponent.ARGB}" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=G}">
                      <Slider.Background>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                          <GradientStop Offset="0" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, Converter={x:Static converters:ColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:ColorChannelType.GMin}}" />
                          <GradientStop Offset="1" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, Converter={x:Static converters:ColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:ColorChannelType.GMax}}" />
                        </LinearGradientBrush>
                      </Slider.Background>
                    </Slider>
                    <mah:NumericUpDown Grid.Row="1" Grid.Column="2" Margin="2" Maximum="255" Minimum="0" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=G}" />
                    <!--  B  -->
                    <ContentPresenter Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Content="{TemplateBinding LabelBlueChannel}" />
                    <Slider Grid.Row="2" Grid.Column="1" Style="{DynamicResource MahApps.Styles.Slider.ColorComponent.ARGB}" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=B}">
                      <Slider.Background>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                          <GradientStop Offset="0" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, Converter={x:Static converters:ColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:ColorChannelType.BMin}}" />
                          <GradientStop Offset="1" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, Converter={x:Static converters:ColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:ColorChannelType.BMax}}" />
                        </LinearGradientBrush>
                      </Slider.Background>
                    </Slider>
                    <mah:NumericUpDown Grid.Row="2" Grid.Column="2" Margin="2" Maximum="255" Minimum="0" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=B}" />
                  </Grid>
                  <Grid Margin="0 10 0 0">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" MinWidth="{DynamicResource MahApps.Font.Size.Content}" SharedSizeGroup="Label" />
                      <ColumnDefinition Width="*" MinWidth="50" />
                      <ColumnDefinition Width="Auto" MinWidth="100" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!--  H  -->
                    <ContentPresenter Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Content="{TemplateBinding LabelHueChannel}" />
                    <Slider Grid.Row="0" Grid.Column="1" Style="{DynamicResource MahApps.Styles.Slider.ColorComponent.Hue}" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Hue, UpdateSourceTrigger=PropertyChanged}" />
                    <mah:NumericUpDown Grid.Row="0" Grid.Column="2" Margin="2" Maximum="360" Minimum="0" StringFormat="0.# °" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Hue}" />
                    <!--  S  -->
                    <ContentPresenter Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Content="{TemplateBinding LabelSaturationChannel}" />
                    <Slider Grid.Row="1" Grid.Column="1" Style="{DynamicResource MahApps.Styles.Slider.ColorComponent.SV}" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Saturation}">
                      <Slider.Background>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                          <GradientStop Offset="0" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedHSVColor, Converter={x:Static converters:HSVColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:HSVColorChannelType.SMin}}" />
                          <GradientStop Offset="1" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedHSVColor, Converter={x:Static converters:HSVColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:HSVColorChannelType.SMax}}" />
                        </LinearGradientBrush>
                      </Slider.Background>
                    </Slider>
                    <mah:NumericUpDown Grid.Row="1" Grid.Column="2" Margin="2" Interval="0.01" Maximum="1" Minimum="0" StringFormat="p0" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Saturation}" />
                    <!--  Value  -->
                    <ContentPresenter Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Content="{TemplateBinding LabelValueChannel}" />
                    <Slider Grid.Row="2" Grid.Column="1" Style="{DynamicResource MahApps.Styles.Slider.ColorComponent.SV}" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Value}">
                      <Slider.Background>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                          <GradientStop Offset="0" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedHSVColor, Converter={x:Static converters:HSVColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:HSVColorChannelType.VMin}}" />
                          <GradientStop Offset="1" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedHSVColor, Converter={x:Static converters:HSVColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:HSVColorChannelType.VMax}}" />
                        </LinearGradientBrush>
                      </Slider.Background>
                    </Slider>
                    <mah:NumericUpDown Grid.Row="2" Grid.Column="2" Margin="2" Interval="0.01" Maximum="1" Minimum="0" StringFormat="p0" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Value}" />
                  </Grid>
                  <Grid Margin="0 10 0 0">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" MinWidth="{DynamicResource MahApps.Font.Size.Content}" SharedSizeGroup="Label" />
                      <ColumnDefinition Width="*" MinWidth="50" />
                      <ColumnDefinition Width="Auto" MinWidth="100" />
                    </Grid.ColumnDefinitions>
                    <!--  A  -->
                    <ContentPresenter Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Content="{TemplateBinding LabelAlphaChannel}" />
                    <Slider Grid.Row="0" Grid.Column="1" Style="{DynamicResource MahApps.Styles.Slider.ColorComponent.ARGB}" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=A}">
                      <Slider.Background>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                          <GradientStop Offset="0" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, Converter={x:Static converters:ColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:ColorChannelType.AMin}}" />
                          <GradientStop Offset="1" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, Converter={x:Static converters:ColorChannelMinMaxConverter.Default}, ConverterParameter={x:Static converters:ColorChannelType.AMax}}" />
                        </LinearGradientBrush>
                      </Slider.Background>
                    </Slider>
                    <mah:NumericUpDown Grid.Row="0" Grid.Column="2" Margin="2" Maximum="255" Minimum="0" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=A}" />
                  </Grid>
                </StackPanel>
              </ScrollViewer>
              <!--  HTML String und Name  -->
              <Grid Grid.Row="1" Grid.Column="1" Margin="0 0 5 5" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" SharedSizeGroup="Label" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" VerticalAlignment="Center" Content="{TemplateBinding LabelColorName}" />
                <TextBox Grid.Column="1" Margin="2 0 0 0" mah:TextBoxHelper.AutoWatermark="{TemplateBinding mah:TextBoxHelper.AutoWatermark}" mah:TextBoxHelper.ButtonCommand="{TemplateBinding mah:TextBoxHelper.ButtonCommand}" mah:TextBoxHelper.ButtonCommandParameter="{TemplateBinding mah:TextBoxHelper.ButtonCommandParameter}" mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}" mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}" mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}" mah:TextBoxHelper.ButtonTemplate="{TemplateBinding mah:TextBoxHelper.ButtonTemplate}" mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}" mah:TextBoxHelper.ButtonsAlignment="{TemplateBinding mah:TextBoxHelper.ButtonsAlignment}" mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}" mah:TextBoxHelper.SelectAllOnFocus="{TemplateBinding mah:TextBoxHelper.SelectAllOnFocus}" mah:TextBoxHelper.UseFloatingWatermark="{TemplateBinding mah:TextBoxHelper.UseFloatingWatermark}" mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}" mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}" mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" mah:TextBoxHelper.WatermarkWrapping="{TemplateBinding mah:TextBoxHelper.WatermarkWrapping}" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ColorName, ValidatesOnExceptions=True}" />
                <mah:ColorEyeDropper x:Name="PART_ColorEyeDropper" Grid.Column="2" Margin="2 0" SelectedColor="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor, TargetNullValue=Transparent}" Style="{DynamicResource MahApps.Styles.ColorEyeDropper.ColorCanvas}" />
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="SelectedColor" Value="{x:Null}">
              <Setter TargetName="PART_NoColorPreview" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.HamburgerMenu" TargetType="{x:Type mah:HamburgerMenu}">
    <Setter Property="CanResizeOpenPane" Value="False" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="HamburgerButtonName" Value="HamburgerButton" />
    <Setter Property="HamburgerButtonStyle" Value="{DynamicResource MahApps.Styles.Button.Hamburger}" />
    <Setter Property="HamburgerButtonTemplate">
      <Setter.Value>
        <DataTemplate>
          <!--  PackIconMaterial - Menu  -->
          <ContentControl Width="22" Height="22" Content="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" Style="{DynamicResource MahApps.Styles.ContentControl.PathIcon}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HeaderItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuHeader}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem}" />
    <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Local" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Local" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
    <Setter Property="MaximumOpenPaneLength" Value="500" />
    <Setter Property="MinimumOpenPaneLength" Value="100" />
    <Setter Property="OptionsItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem}" />
    <Setter Property="PaneBackground" Value="{DynamicResource MahApps.HamburgerMenu.Pane.Background}" />
    <Setter Property="PaneForeground" Value="{DynamicResource MahApps.HamburgerMenu.Pane.Foreground}" />
    <Setter Property="PaneHeaderMargin" Value="0 0 0 8" />
    <Setter Property="PaneMargin" Value="0 0 0 8" />
    <Setter Property="ResizeThumbStyle" Value="{DynamicResource MahApps.Styles.MetroThumb.SplitView.Resize}" />
    <Setter Property="SeparatorItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuSeparator}" />
    <Setter Property="Template" Value="{DynamicResource MahApps.Templates.HamburgerMenu}" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="MahApps.Styles.HamburgerMenu.CreatorsUpdate" BasedOn="{StaticResource MahApps.Styles.HamburgerMenu}" TargetType="{x:Type mah:HamburgerMenu}">
    <Setter Property="ItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem.CreatorsUpdate}" />
    <Setter Property="OptionsItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem.CreatorsUpdate}" />
    <Setter Property="PaneBackground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="PaneForeground" Value="{DynamicResource MahApps.Brushes.Text}" />
    <Setter Property="ShowSelectionIndicator" Value="True" />
  </Style>
  <Style BasedOn="{StaticResource MahApps.Styles.HamburgerMenu}" TargetType="{x:Type mah:HamburgerMenu}" />
  <Style BasedOn="{StaticResource MahApps.Styles.ColorCanvas}" TargetType="{x:Type mah:ColorCanvas}" />
</ResourceDictionary>